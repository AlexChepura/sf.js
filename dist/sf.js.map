{"version":3,"sources":["webpack:///sf.js","webpack:///webpack/bootstrap 72090103696b88ed0d7e","webpack:///./src/core/Events.js","webpack:///./src/helpers/LikeFormData.js","webpack:///./src/sf.js","webpack:///./src/core/Ajax.js","webpack:///./src/core/BaseDOMConstructor.js","webpack:///./src/core/DomMutations.js","webpack:///./src/core/InstancesController.js","webpack:///./src/helpers/DOMEvents.js","webpack:///./src/helpers/domTools.js","webpack:///./src/helpers/tools.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","Events","allowedEvents","this","_storage","_allowedEvents","on","events","callback","replace","split","forEach","event","indexOf","console","warn","push","registerAction","off","alert","trigger","options","length","performAction","LikeFormData","data","boundary","toString","Math","random","substr","append","key","val","retString","iterate","partOfKey","delete","getAll","has","set","getContentTypeHeader","core","Ajax","BaseDOMConstructor","DomMutations","InstancesController","helpers","DOMEvents","domTools","tools","sf","currentRequests","headers","assign","X-Requested-With","send","that","method","xhr","ajaxPromise","Promise","resolve","reject","url","error","oldIE","window","XDomainRequest","XMLHttpRequest","undefined","responseType","onprogress","e","onProgress","upload","addEventListener","lengthComputable","loaded","total","open","onload","ans","_parseJSON","status","response","onerror","Error","dataToSend","JSON","stringify","_setHeaders","isReturnXHRToo","header","setRequestHeader","responseText","ret","contentType","getResponseHeader","toLowerCase","parse","match","parseInt","statusText","init","node","grabOptions","optionsToGrab","currentOptionValue","currentOption","option","instances","attributes","domAttr","processor","instancesController","constructor","config","childList","characterData","characterDataOldValue","subtree","attributeOldValue","attributeFilter","observer","MutationObserver","onDomMutate","apply","arguments","observe","document","mutations","classArray","getClasses","classSelector","join","mutation","type","processMutationAttributes","processMutationChildList","addedNodes","removedNodes","currentClasses","target","className","oldClasses","oldValue","addedClasses","filter","removedClasses","addedRegisteredClasses","removeInstance","getInstanceNameByCssClass","addInstance","nodesList","action","checkNode","classList","contains","nodeType","nodeName","querySelectorAll","stopObserve","disconnect","spiral","instancesConstructors","cssClasses","jsConstructors","addons","registerInstanceType","constructorFunction","cssClassName","isSkipInitialization","instanceName","nodes","getElementsByClassName","max","addInstanceType","InstanceConstructor","isAlreadyAdded","getInstance","instanceConstructor","instance","instanceObj","die","splice","isReturnObject","typeArr","HTMLElement","getElementById","getInstances","registerAddon","addon","addonType","addonName","getInstanceAddon","keys","cssClass","getInstanceConstructors","_DOMEventsStorage","add","eventArray","useCapture","DOMNode","eventType","eventFunction","remove","removeAll","removeEventListener","closest","elem","selectors","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","parentNode","closestByClassName","reg","RegExp","resolveKeyPath","path","obj","safe","reduce","prev","curr","self"],"mappings":"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","file":"sf.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Events system.\r\n * @param {Array} allowedEvents array of allowed events.\r\n * @constructs Events\r\n * @example\r\n * //allow to work with all events\r\n * var events = new Events();\r\n * events.on(\"myBestEvent\",function(e){console.log(e)});\r\n * @example\r\n * //Allow to serve only limited events\r\n *  var events = new Events([\"beforeSubmit\",\"onDataReady\"]);\r\n *  events.on(\"myBestEvent\",function(e){console.log(e)});//will not works\r\n *  events.on(\"beforeSubmit\",function(e){console.log(e)});//will work\r\n */\n\nvar Events = function (allowedEvents) {\n    this._storage = {};\n    this._allowedEvents = allowedEvents;\n};\n\n/**\r\n * Add event(s)\r\n * @param {String} events event or space separated event list\r\n * @param {Function} callback callback function\r\n * @example\r\n * var events = new Events();\r\n * events.on(\"myBestEvent myBestEvent2 myBestEvent3\",function(e){console.log(e)});\r\n * events.on(\"myBestEvent\",function(e){console.log(e)});\r\n */\nEvents.prototype.on = function (events, callback) {\n    var eventArr = events.replace(/\\s{2,}/g, \" \").split(\" \");\n    eventArr.forEach(function (event) {\n        if (this._allowedEvents && this._allowedEvents.indexOf(event) === -1) {\n            // event not inside allowed events\n            console.warn(\"Events. Try to register event %s, but event is not allowed\", event);\n            return;\n        }\n        if (!this._storage.hasOwnProperty(events)) {\n            this._storage[event] = [];\n        }\n        this._storage[event].push(callback);\n    }, this);\n};\n\n/**\r\n * Add action\r\n * @param {String} action\r\n * @param {Function} func\r\n * @deprecated  use \"on\" instead\r\n */\nEvents.prototype.registerAction = Events.prototype.on;\n\n/**\r\n * remove event\r\n * @param {String} event\r\n * @param {Function} callback\r\n */\nEvents.prototype.off = function (event, callback) {\n    alert(\"You try to remove action. This part is incomplete\");\n    // TODO\n};\n\n/**\r\n * Trigger event.\r\n * @param {String} event event name\r\n * @param {Object} [options] options to pass to the callback\r\n * @example\r\n * var events = new Events();\r\n * events.on(\"myBestEvent\",function(e){console.log(e.bestKey)});\r\n * events.trigger(\"myBestEvent\",{bestKey:42}); //will show in log\r\n */\nEvents.prototype.trigger = function (event, options) {\n    if (this._allowedEvents && this._allowedEvents.indexOf(event) === -1) {\n        // event not inside allowed events\n        console.warn(\"Events. Try to trigger event %s, but event is not allowed\", event);\n        return;\n    }\n    if (this._storage.hasOwnProperty(event)) {\n        for (var n = 0, l = this._storage[event].length; n < l; n++) {\n            this._storage[event][n](options);\n        }\n    }\n};\n\n/**\r\n * Perform action\r\n * @param {String} action\r\n * @param {Object} [actionParams] object with all action data from server\r\n * @param {Object} [options] ajax options\r\n * @deprecated use \"trigger\" instead\r\n */\nEvents.prototype.performAction = Events.prototype.trigger;\n\nmodule.exports = Events;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * This object try to be easy as FormData.\r\n * Please note this is not(!) a shim for Form data, because it's impossible (you should set headers for Ajax by hands)\r\n * It take object and can convert it string like FormData do. Then you can send this string by Ajax or do some other staff.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FormData\r\n * @param {Object} [data] object with data (supports nested objects)\r\n * @param {String} [boundary] boundary  for Form Data\r\n * @constructor\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"},\"testBoundary\");\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--testBoundary\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--testBoundary--\r\n * //\"\r\n *\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--SpiralFormData-4935309085994959\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--SpiralFormData-4935309085994959--\r\n * //\"\r\n *\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.append(\"key2\",\"val2\");\r\n * formData.toString();\r\n * // Returns:\r\n * //--SpiralFormData-988681384595111\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * //testValue\r\n * //--SpiralFormData-988681384595111\r\n * //Content-Disposition: form-data; name=key2\r\n * //\r\n * //val2\r\n * //--SpiralFormData-988681384595111--\r\n * //\"\r\n */\n\nvar LikeFormData = function (data, boundary) {\n    this.data = {};\n    if (data) {\n        if (Object.prototype.toString.call(data) !== \"[object Object]\") {\n            // non object/ Alert developer\n            console.warn(\"LikeFormData can't accept non Object. Please reefer to documentation. Problem parameter is:\", data);\n        } else {\n            this.data = data;\n        }\n    }\n    this.boundary = boundary ? boundary : \"SpiralFormData-\" + Math.random().toString().substr(2);\n\n    // if (!isOldIE) {\n    //    this.boundary = \"SpiralAjax-\" + Math.random().toString().substr(2);\n    //    //xhr.setRequestHeader(\"content-type\", \"multipart/form-data; charset=utf-8; boundary=\" + this.boundary);\n    // } else {\n    //    this.boundary = \"SpiralAjax-oldIE9876gsloiHGldowu\";\n    // }\n};\n\n/**\r\n * Append data to storage. Like standart FormData do.\r\n * @param {String} key\r\n * @param {String} val\r\n * @example\r\n * var formData = new FormData();\r\n * formData.append(\"key2\",\"val2\");\r\n */\nLikeFormData.prototype.append = function (key, val) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/FormData\n    // TODO ***Appends a new value**** onto an existing key inside a FormData object, or adds the key if it does not already exist.\n    this.data[key] = val;\n};\n\n/**\r\n * convert to string\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--SpiralFormData-4935309085994959\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--SpiralFormData-4935309085994959--\r\n * //\"\r\n * @return {string}\r\n */\nLikeFormData.prototype.toString = function () {\n    var retString = \"\";\n    var boundary = this.boundary;\n    var iterate = function (data, partOfKey) {\n        for (var key in data) {\n            if (data.hasOwnProperty(key) && typeof data[key] !== \"undefined\") {\n                if (typeof data[key] === \"object\") {\n                    iterate(data[key], partOfKey.length === 0 ? key : partOfKey + \"[\" + key + \"]\");\n                } else {\n                    retString += \"--\" + boundary + \"\\r\\nContent-Disposition: form-data; name=\" + (partOfKey.length === 0 ? key : partOfKey + \"[\" + key + \"]\") + \"\\r\\n\\r\\n\" + data[key] + \"\\r\\n\";\n                }\n            }\n        }\n    };\n    if (typeof this.data !== \"object\") {\n        this.data = {\n            data: this.data\n        };\n    }\n    iterate(this.data, \"\");\n\n    retString += \"--\" + this.boundary + \"--\\r\\n\";\n    return retString;\n};\n\n/**\r\n * The delete() method of the FormData interface deletes a key/value pair from a FormData object.\r\n * @param {string} key\r\n * @return {*}\r\n */\nLikeFormData.prototype.delete = function (key) {\n    return delete this.data[key];\n};\n\n/**\r\n *The get() method of the FormData interface returns the first value associated with a given key from within a FormData object.\r\n * @param {string} key\r\n * @return {*}\r\n */\nLikeFormData.prototype.get = function (key) {\n    return this.data[key];\n};\n\n/**\r\n * The getAll() method of the FormData interface returns the first value associated with a given key from within a FormData object.\r\n * @return {*}\r\n */\nLikeFormData.prototype.getAll = function () {\n    return this.data;\n};\n\n/**\r\n * The has() method of the FormData interface returns a boolean stating whether a FormData object contains a certain key/value pair.\r\n * @param {string} key\r\n * @return {*}\r\n */\nLikeFormData.prototype.has = function (key) {\n    return this.data.hasOwnProperty(key);\n};\n\n/**\r\n * The difference between set() and FormData.append is that if the specified header does already exist, set() will\r\n * overwrite the existing value with the new one, whereas FormData.append will append the new value onto the end of the\r\n * set of values.\r\n * @param {string} key\r\n * @param {*} val\r\n */\nLikeFormData.prototype.set = function (key, val) {\n    this.data[key] = val;\n};\n\n/**\r\n * Get content header to set for Ajax. Not a part of standart FormData object. But for sending Like FormData over Ajax you should know header.\r\n * @return {string}\r\n * @example\r\n * var formData = new LikeFormData();\r\n * formData.getContentTypeHeader(); //return \"multipart/form-data; charset=utf-8; boundary=SpiralFormData-988681384595111\"\r\n * @example\r\n * var formData = new LikeFormData({key:\"val2\"},\"testBoundary\");\r\n * formData.getContentTypeHeader(); //return \"multipart/form-data; charset=utf-8; boundary=testBoundary\"\r\n */\nLikeFormData.prototype.getContentTypeHeader = function () {\n    return \"multipart/form-data; charset=utf-8; boundary=\" + this.boundary;\n};\n\nmodule.exports = LikeFormData;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core = {\n    Ajax: __webpack_require__(3),\n    BaseDOMConstructor: __webpack_require__(4),\n    DomMutations: __webpack_require__(5),\n    Events: __webpack_require__(0),\n    InstancesController: __webpack_require__(6)\n};\n\nvar helpers = {\n    DOMEvents: __webpack_require__(7),\n    domTools: __webpack_require__(8),\n    LikeFormData: __webpack_require__(1),\n    tools: __webpack_require__(9)\n};\n\nvar sf = {\n    core: core,\n    helpers: helpers,\n    tools: helpers.tools\n};\n\nmodule.exports = sf;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// var tools = require(\"../helpers/tools\");\n\nvar Events = __webpack_require__(0);\nvar LikeFormData = __webpack_require__(1);\n\n/**\r\n * This is an Ajax transport.\r\n * Supports  XDomainRequest for old IE\r\n * @param {Object} [options]\r\n * @param {Object} [options.headers] Headers to add to the instance\r\n * @fires beforeSend event that will be performed before request is send. Event called with one parameter \"options\", that contains all variables for Ajax\r\n * @constructor\r\n */\nvar Ajax = function (options) {\n    this.currentRequests = 0;\n    this.events = new Events([\"beforeSend\", 'load']);\n\n    if (options && options.headers) {\n        this.headers = Object.assign(this.headers, options.headers);\n    }\n};\n\n/**\r\n * Default headers. You can overwrite it. Look at the event beforeSend\r\n * Please note that on XDomainRequest  we can't send any headers.\r\n * @type Object\r\n */\nAjax.prototype.headers = {\n    'X-Requested-With': 'XMLHttpRequest'\n};\n\n/**\r\n * Send ajax request to server\r\n * Will return promise or array with promise and XMLHttpRequest : {window.Promise|[window.Promise,XMLHttpRequest]}\r\n * @since 0.4.0\r\n * @param {Object} options object with options\r\n * @param {String} options.url url to send data\r\n * @param {Object|String} [options.data] data to send\r\n * @param {String} [options.method]\r\n * @param {Object} [options.headers] headers to add to the request\r\n * @param {Function} [options.onProgress] callback function on progress. Two callback options: current bytes sent,totalBytes\r\n * @param {Function} [options.isReturnXHRToo===false] should method return array instead of Promise. Some times is needed to control ajax (abort, etc).\r\n * If tree then  [window.Promise, XMLHttpRequest ] will be returned\r\n * @return {Promise|Array}\r\n */\nAjax.prototype.send = function (options) {\n    var that = this;\n\n    // TODO why we check here if data === null then reassign to null again?\n    if (options.data === null || options.data === void 0 || options.data === 'undefined') {\n        options.data = null;\n    }\n    if (!options.method) {\n        options.method = \"POST\";\n    }\n\n    options.headers = options.headers ? Object.assign(options.headers, this.headers, options.headers) : Object.assign({}, this.headers);\n    var xhr;\n    var ajaxPromise = new Promise(function (resolve, reject) {\n        // Return a new promise.\n        if (!options.url) {\n            console.error(\"You should provide url\");\n            reject(\"You should provide url\");\n        }\n        that.currentRequests++;\n\n        var oldIE = false;\n\n        if (typeof window !== 'undefined' && window.XDomainRequest && window.XMLHttpRequest && new XMLHttpRequest().responseType === undefined && url.indexOf(\"http\") === 0) {\n            // old IE CORS\n            // TODO maybe we should use XDomainRequest only for cross domain requests? But  Spiral for now works great with XDomainRequest (based on IEJSON)\n            xhr = new XDomainRequest();\n            // @see http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n            oldIE = true;\n            // @see http://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n\n            xhr.onprogress = function (e) {\n                // TODO adjust options\n                options.onProgress && options.onProgress(e);\n            };\n        } else {\n            xhr = new XMLHttpRequest();\n            if (options.onProgress) {\n                xhr.upload.addEventListener(\"progress\", function (event) {\n                    if (event.lengthComputable) {\n                        options.onProgress(event.loaded, event.total);\n                    }\n                }, false);\n            }\n        }\n\n        xhr.open(options.method, options.url);\n\n        xhr.onload = function () {\n            // On loaded\n            that.currentRequests--;\n            var ans = that._parseJSON(xhr);\n\n            if (ans.status) {\n                if (ans.status > 199 && ans.status < 300) {\n                    // 200-299\n                    resolve(ans);\n                } else if (ans.status > 399 && ans.status < 600) {\n                    // 400-599\n                    reject(ans);\n                } else {\n                    console.error(\"unknown status %d. Rejecting\", ans.status);\n                    reject(ans);\n                }\n            } else if (oldIE) {\n                resolve(ans); // OLD IE + downloading file is producing  no status.\n            } else {\n                reject(ans); // reject with the status text\n            }\n            options.response = ans;\n            that.events.trigger(\"load\", options); // for example - used to handle actions\n        };\n\n        xhr.onerror = function () {\n            // Handle network errors\n            that.currentRequests--;\n            reject(Error(\"Network Error\"), xhr);\n        };\n\n        that.events.trigger(\"beforeSend\", options); // you can modify \"options\" object inside event (like adding you headers,data,etc)\n\n        var dataToSend;\n        if (options.data !== null) {\n            // if data to send is not empty\n            if (!oldIE) {\n                if (options.data.toString().indexOf(\"FormData\") !== -1) {\n                    // if form data\n                    dataToSend = options.data;\n                } else {\n                    dataToSend = new LikeFormData(options.data);\n                    options.headers[\"content-type\"] = dataToSend.getContentTypeHeader();\n                }\n                that._setHeaders(xhr, options.headers);\n            } else {\n                dataToSend = \"IEJSON\" + JSON.stringify(options.data);\n            }\n        } else {\n            // else send empty data\n            dataToSend = null;\n        }\n\n        //        if (!oldIE) {\n        //            //xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        //            dataToSend = new spiral.LikeFormData(data, xhr, oldIE);\n        //        } else {\n        //            if (data !==null && data !== void 0 && data !== 'undefined'){\n        //                dataToSend = \"IEJSON\"+JSON.stringify(data);\n        //            } else {\n        //                 dataToSend =data;\n        //            }\n        //\n        //        }\n\n\n        try {\n            // working around FF bug\n            xhr.send(dataToSend); // Make the request\n        } catch (e) {\n            // console.error(\"error sending trying another method\");\n            xhr.send(dataToSend.toString());\n        }\n\n        return xhr;\n    });\n\n    if (options.isReturnXHRToo) {\n        // return xhr too\n        return [ajaxPromise, xhr];\n    }\n    return ajaxPromise;\n};\n\n/**\r\n * Iterate over headers object and call xhr.setRequestHeader\r\n * @param {XMLHttpRequest} xhr\r\n * @param {Object} headers object with headers to set\r\n */\nAjax.prototype._setHeaders = function (xhr, headers) {\n    for (var header in headers) {\n        if (headers.hasOwnProperty(header)) {\n            xhr.setRequestHeader(header, headers[header]);\n        }\n    }\n};\n\n/**\r\n * Try to parse and normalize answer\r\n * @param {XHR} xhr\r\n * @return {*}\r\n * @private\r\n */\nAjax.prototype._parseJSON = function (xhr) {\n    if (!xhr.response) {\n        xhr.response = xhr.responseText;\n    }\n\n    var ret = {};\n    var contentType = false;\n\n    if (xhr.getResponseHeader) {\n        contentType = xhr.getResponseHeader(\"Content-Type\");\n    }\n\n    if (!contentType || contentType.toLowerCase() === 'application/json' || contentType.toLowerCase() === 'text/json' || contentType.toLowerCase() === 'inode/symlink') {\n        // application/json or inode/symlink  (AmazonS3 bug? )\n        try {\n            ret = JSON.parse(xhr.response);\n        } catch (e) {\n            console.error(\"Not a JSON!\", xhr.response);\n            ret = { data: xhr.response };\n        }\n    } else {\n        ret = { data: xhr.response };\n    }\n\n    if (!ret.status) {\n        ret.status = xhr.status;\n    }\n    // Some servers can answer status in JSON as \"HTTP/1.1 200 OK\"  but we need a status number\n    if (typeof ret.status === 'string' && ret.status.indexOf(\"HTTP/\") === 0 && ret.status.match(/ (\\d\\d\\d)/)) {\n        ret.status = parseInt(ret.status.match(/ (\\d\\d\\d)/)[1]); // TODO check this code\n    }\n\n    if (!ret.statusText) {\n        ret.statusText = xhr.statusText;\n    }\n    if (xhr.status && xhr.status != ret.status) {\n        console.warn(\"Status from request %d, but response contains status %d\", xhr.status, ret.status);\n    }\n\n    return ret;\n};\n\nmodule.exports = Ajax;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * This a base constructor (class) for any DOM based instance.\r\n * This constructor just grab all node attributes and generates options. All processed options stored at this.options\r\n * @example\r\n * We have html like this:\r\n * <div data-test=\"testValue\" data-value=\"value123\">.....</div>\r\n * this.options will be:\r\n * {\r\n *  test:\"testValue\",\r\n *  value:\"value\"\r\n * }\r\n * Note: data-test and data-value should be described in attributesToGrab\r\n * @constructor\r\n */\n\nvar BaseDOMConstructor = function () {};\n/**\r\n * Init method. Call after construct instance\r\n * @param {Object} sf\r\n * @param {Object} node  DomNode of form\r\n * @param {Object} [options] all options to override default\r\n */\nBaseDOMConstructor.prototype.init = function (sf, node, options) {\n    // TODO data-spiral-JSON\n    this.sf = sf;\n    this.node = node;\n    // if (sf.options && sf.options.instances && sf.options.instances[this.name]) {\n    //    options = Object.assign(options || {}, sf.options.instances[this.name]);\n    // }\n    this.options = Object.assign(this.grabOptions(node), options);\n};\n\n/**\r\n * This is a options to generate.\r\n * You should provide processor or value.\r\n * @type {Object}\r\n * @property {Object} propertyKey - object of property\r\n * @property {String} propertyKey.value - default value to return\r\n * @property {String} [propertyKey.domAttr] - dom attribute to grab data\r\n * @property {Function} [propertyKey.processor] -  processor to process data before return\r\n * @property {Object}  ... - Another object of one property\r\n * @type {{}}\r\n *  @example\r\n * \"someAttribute\": {// key\r\n *      value: true, //default Value\r\n *      domAttr: \"data-some-attribute\", // attribute from node to grab\r\n *      processor: function (node,val,self) { //processor to process values before return\r\n *          //some calculations\r\n *      return someValue;\r\n *      }\r\n *  },\r\n *  \"anotherAttribute\":{...},\r\n *  \"...\"\r\n *\r\n *  @example\r\n *  //return node as value\r\n *  \"context\": {\r\n *      \"processor\": function (node,val,key) { //processor\r\n *          return node;\r\n *      }\r\n *  },\r\n *  \"Another-key\":{...},\r\n *  \"...\"\r\n * @example\r\n * //Grab attribute \"data-attribute\" as \"MyAttribute\" if attribute not provided return \"DefaultValue\"\r\n * // Dom node <div data-attribute=\"someValue\"></div>\r\n * \"MyAttribute\": {\r\n *      value: \"DefaultValue\",\r\n *      domAttr: \"data-attribute\"\r\n *  }\r\n *  //after processing we should have\r\n *  {\"MyAttribute\":\"someValue\"}\r\n *\r\n *  @example\r\n * //Grab attribute \"data-attribute\" as \"MyAttribute\" and return some value instead\r\n * //Dom node  <div data-attribute=\"someValue\"></div>\r\n * \"MyAttribute\": {\r\n *      domAttr: \"data-attribute\",\r\n *      processor: function (node,val,self) {\r\n *          return val+\"SomeCalculation\";\r\n *      }\r\n *  }\r\n *  //after processing we should have\r\n *  {\"MyAttribute\":\"someValueSomeCalculation\"}\r\n *\r\n * @example\r\n * //return function as value\r\n * processAnswer: {\r\n *      \"value\": function (options) {\r\n *         return \"someVal\";\r\n *      }\r\n *  //after processing we should have\r\n *  {\"processAnswer\":function (options) {\r\n *         return \"someVal\";\r\n *      }\r\n *   }\r\n *\r\n * @example\r\n * //return init time as value\r\n * initTime: {\r\n *      \"processor\": function (node,val,self) {\r\n *         return new Date().getTime;\r\n *      }\r\n *  //after processing we should have\r\n *  {\"initTime\":1429808977404}\r\n * @example\r\n * //return other value instead of real one\r\n * processAnswer: {\r\n *      \"processor\": function (node,val,self) {\r\n *         return \"someVal\";\r\n *      }\r\n *  //after processing we should have\r\n *  {\"processAnswer\":\"someVal\"}\r\n */\nBaseDOMConstructor.prototype.optionsToGrab = {};\n\n/**\r\n * Grab all options that described in optionsToGrab\r\n * @param {Object} node domNode\r\n * @return {Object}\r\n */\nBaseDOMConstructor.prototype.grabOptions = function (node) {\n    var options = {};\n    var currentOptionValue;\n    var currentOption;\n    for (var option in this.optionsToGrab) {\n        if (this.optionsToGrab.hasOwnProperty(option)) {\n            currentOptionValue = null;\n            if (this.optionsToGrab.hasOwnProperty(option)) {\n                // if this is own option\n                currentOption = this.optionsToGrab[option];\n                if (currentOption.hasOwnProperty(\"value\")) {\n                    // we have default option. Let's grab it for first\n                    currentOptionValue = currentOption.value;\n                }\n\n                if (this.sf.options.instances[this.name] && this.sf.options.instances[this.name].hasOwnProperty(option)) {\n                    currentOptionValue = this.sf.options.instances[this.name][option];\n                }\n\n                if (currentOption.hasOwnProperty(\"domAttr\") && node.attributes.hasOwnProperty(currentOption.domAttr)) {\n                    // we can grab the attribute of node\n                    currentOptionValue = node.attributes[currentOption.domAttr].value;\n                }\n\n                if (currentOption.hasOwnProperty(\"processor\")) {\n                    // we have processor. Let's execute it\n                    currentOptionValue = currentOption.processor.call(this, node, currentOptionValue, currentOption);\n                }\n\n                if (currentOptionValue !== null) {\n                    options[option] = currentOptionValue;\n                }\n            }\n        }\n    }\n    return options;\n};\n\nmodule.exports = BaseDOMConstructor;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * Dom mutation. Listening to the DOM and add or remove instances based on classes.\r\n * @param {Object} instancesController  spiral instancesController.\r\n * @param {Function} instancesController.getClasses  get all registered modules classes.\r\n * @param {Function} instancesController.addInstance  add instance method.\r\n * @param {Function} instancesController.removeInstance  remove instance method\r\n * @constructor\r\n */\n\nvar DomMutations = function (instancesController) {\n    if (!instancesController) {\n        console.error(\"You should provide instancesController  for DOM Mutation. Because DOM Mutation  should known all classes and\");\n        return;\n    }\n    if (!this.constructor) {\n        console.error(\"Please call DomMutations with new  - 'new DomMutations()' \");\n        return;\n    }\n    this.instancesController = instancesController;\n    var config = { // config for MutationObserver\n        attributes: true,\n        childList: true,\n        characterData: true,\n        characterDataOldValue: true,\n        subtree: true,\n        attributeOldValue: true,\n        attributeFilter: [\"class\"]\n    };\n    var that = this;\n\n    this.observer = new MutationObserver(function () {\n        // call function when dom mutated.\n        // eslint-disable-next-line\n        that.onDomMutate.apply(that, arguments);\n    });\n    this.observer.observe(document, config); // start observer\n};\n\n/**\r\n * When dom mutated this function id executed.\r\n * @param {Array} mutations array of mutations\r\n * @return {boolean}\r\n */\nDomMutations.prototype.onDomMutate = function (mutations) {\n    var classArray = this.instancesController.getClasses(); // get all registered classes\n    var classSelector = \".\" + classArray.join(\",.\"); // convert for querySelectorAll()\n    if (classSelector.length === 1) {\n        // if not registered any instanceTypes\n        return false;\n    }\n    mutations.forEach(function (mutation) {\n        // loop over mutation array\n        switch (mutation.type) {\n            case \"attributes\":\n                this.processMutationAttributes(mutation, classArray);\n                break;\n\n            case \"characterData\":\n\n                break;\n\n            case \"childList\":\n                this.processMutationChildList(mutation.addedNodes, \"addInstance\", classSelector, classArray);\n                this.processMutationChildList(mutation.removedNodes, \"removeInstance\", classSelector, classArray);\n                break;\n\n            case \"default\":\n                console.error(\"Something wrong. Contact tech support\");\n        }\n    }, this);\n    return true;\n};\n\nDomMutations.prototype.processMutationAttributes = function (mutation, classArray) {\n    var that = this;\n    var currentClasses = mutation.target.className.split(\" \");\n    var oldClasses = mutation.oldValue ? mutation.oldValue.split(\" \") : [];\n    var addedClasses = currentClasses.filter(function (val) {\n        return oldClasses.indexOf(val) === -1;\n    });\n    var removedClasses = oldClasses.filter(function (val) {\n        return currentClasses.indexOf(val) === -1;\n    });\n    var addedRegisteredClasses = addedClasses.filter(function (val) {\n        return classArray.indexOf(val) !== -1;\n    });\n    var removedRegisteredClasses = removedClasses.filter(function (val) {\n        return classArray.indexOf(val) !== -1;\n    });\n    removedRegisteredClasses.forEach(function (val) {\n        that.instancesController.removeInstance(that.instancesController.getInstanceNameByCssClass(val), mutation.target);\n    });\n    addedRegisteredClasses.forEach(function (val) {\n        that.instancesController.addInstance(that.instancesController.getInstanceNameByCssClass(val), mutation.target);\n    });\n};\n/**\r\n * Process mutation on ChildList\r\n * @param {NodeList} nodesList array with nodes\r\n * @param {String} action action to call (add or remove nodes)\r\n * @param {String} classSelector - string selector for querySelectorAll\r\n * @param {Array} classArray - array of all registered classes\r\n */\nDomMutations.prototype.processMutationChildList = function (nodesList, action, classSelector, classArray) {\n    var that = this;\n\n    /**\r\n     * Internal function for checking node class\r\n     * @param {Object} node dom node\r\n     */\n    function checkNode(node) {\n        classArray.forEach(function (className) {\n            // loop over registered classes\n            if (node.classList.contains(className)) {\n                // if class match try to add or remove instance for this node\n                that.instancesController[action](that.instancesController.getInstanceNameByCssClass(className), node);\n            }\n        });\n    }\n\n    [].forEach.call(nodesList, function (val) {\n        // loop over mutation nodes\n        if (val.nodeType !== 1 || val.nodeName === \"SCRIPT\" || val.nodeName === \"LINK\") {\n            // do not process other nodes then ELEMENT_NODE https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType also ignore SCRIPT and LINK tag\n            return false;\n        }\n        checkNode(val); // check mutation node\n        [].forEach.call(val.querySelectorAll(classSelector), checkNode); // query all nodes with required classes and check it\n        return true;\n    });\n};\n\n/**\r\n * Stop listening the dom changes\r\n */\nDomMutations.prototype.stopObserve = function () {\n    this.observer.disconnect();\n};\n\nmodule.exports = DomMutations;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Instance controller\r\n * @param {*} spiral\r\n * @constructor\r\n */\n\nvar InstancesController = function (spiral) {\n    this.spiral = spiral;\n    if (!this.constructor) {\n        console.error(\"Please call InstancesController with new  - 'new InstancesController()' \");\n        return;\n    }\n    this._storage = {\n        instancesConstructors: {\n            cssClasses: {},\n            jsConstructors: {}\n        },\n        addons: {},\n        instances: {}\n    };\n\n    // todo decide if we need this\n    // [\"onAddInstance\", \"onRemoveInstance\"]\n    // this.events = new spiral.modules.core.Events();\n};\n\n/**\r\n * Register new instance type\r\n * @param {Function} constructorFunction - constructor function of instance\r\n * @param {String} [cssClassName] - css class name of instance. If class not provided that it can't be automatically\r\n * controlled by DomMutation. But you still can use it from JS.\r\n * @param {Boolean} [isSkipInitialization=false]  - skip component initialization, just adding, no init nodes.\r\n */\nInstancesController.prototype.registerInstanceType = function (constructorFunction, cssClassName, isSkipInitialization) {\n    var instanceName = constructorFunction.prototype.name;\n\n    if (!instanceName) {\n        console.error(\"Instance constructor should have name inside it\");\n    }\n\n    if (this._storage.instancesConstructors.jsConstructors.hasOwnProperty(instanceName)) {\n        console.error(\"Instance Constructor for type '%s' already added. Skipping\", instanceName);\n        return;\n    }\n\n    if (cssClassName) {\n        // add link (cssClassName->instanceName)\n        this._storage.instancesConstructors.cssClasses[cssClassName] = instanceName;\n    }\n\n    this._storage.instancesConstructors.jsConstructors[instanceName] = constructorFunction;\n\n    // if (this._storage.instancesConstructors.hasOwnProperty(className)){\n    //    console.error(\"Instance Constructor for type %s already added. Skipping\",constructorFunction.prototype.name);\n    //    return;\n    // }\n    // this._storage.instancesConstructors[className] = {//init storage fields\n    //    \"typeName\": constructorFunction.prototype.name,\n    //    \"constructor\": constructorFunction\n    // };\n    this._storage.instances[instanceName] = [];\n    if (!isSkipInitialization) {\n        var nodes = document.getElementsByClassName(cssClassName); // init add nodes with this class\n        for (var i = 0, max = nodes.length; i < max; i++) {\n            this.addInstance(instanceName, nodes[i]);\n        }\n    }\n};\n\n/**\r\n * Old method to register instance type\r\n * @param {*} className\r\n * @param {*} constructorFunction\r\n * @param {*} isSkipInitialization\r\n * @return {*}\r\n * @deprecated\r\n */\nInstancesController.prototype.addInstanceType = function (className, constructorFunction, isSkipInitialization) {\n    console.warn(\"addInstanceType is deprecated. Please use registerInstanceType instead\");\n    return this.registerInstanceType(constructorFunction, isSkipInitialization);\n};\n\n/**\r\n * Add instance\r\n * @param {String} instanceName - name of instance\r\n * @param {Object} node - dom node\r\n * @param {Object} [options] all options for send to the constructor\r\n * @return {boolean}\r\n */\nInstancesController.prototype.addInstance = function (instanceName, node, options) {\n    var InstanceConstructor = this._storage.instancesConstructors.jsConstructors[instanceName];\n    var isAlreadyAdded = this.getInstance(instanceName, node);\n\n    if (!instanceConstructor || isAlreadyAdded) {\n        // if not found this type  or already added - return\n        return false;\n    }\n\n    var instance = new InstanceConstructor(this.spiral, node, options);\n    this._storage.instances[instanceName].push({ // add new instance of this type\n        \"node\": node,\n        \"instance\": instance\n    });\n\n    // this.events.trigger(\"onAddInstance\", instance);\n\n    return instance;\n};\n\n/**\r\n * Remove instance.\r\n * @param {String} instanceName - name of instance class\r\n * @param {Object|String} node - dom node ID\r\n * @return {boolean}\r\n */\nInstancesController.prototype.removeInstance = function (instanceName, node) {\n    var instanceObj = this.getInstance(instanceName, node, true);\n    var key;\n\n    if (!instanceObj) {\n        return false;\n    }\n    instanceObj.instance.die(); // avoid memory leak\n    key = this._storage.instances[instanceName].indexOf(instanceObj);\n    if (key !== -1) {\n        // remove key\n        this._storage.instances[instanceName].splice(key, 1);\n    }\n    return true;\n};\n\n/**\r\n * Get instance. Return instance object of this dom node\r\n * @param {String} instanceName - name of instance\r\n * @param {Object|String} node - dom node o dome node ID\r\n * @param {boolean} [isReturnObject] - return object or instance\r\n * @return {boolean}\r\n */\nInstancesController.prototype.getInstance = function (instanceName, node, isReturnObject) {\n    // TODO isReturnObject not needed. Refactor and remove\n\n    var typeArr = this._storage.instances[instanceName];\n    var ret = false;\n    if (!typeArr) {\n        return false;\n    }\n    node = node instanceof HTMLElement ? node : document.getElementById(node);\n    if (!node) {\n        return false;\n    }\n    for (var key = 0, l = typeArr.length; key < l; key++) {\n        // iterate storage and try to find instance\n        if (typeArr[key].node === node) {\n            ret = isReturnObject ? typeArr[key] : typeArr[key].instance;\n            break;\n        }\n    }\n    return ret;\n};\n\n/**\r\n * Get instances. Return array of instances objects\r\n * @param {String} instanceName - name of instance\r\n * @return {array|boolean}\r\n */\nInstancesController.prototype.getInstances = function (instanceName) {\n    return this._storage.instances[instanceName] || false;\n};\n\n/**\r\n * Register addon for instance\r\n * @param {Function|Object} addon\r\n * @param {String} instanceName name of instance to register addon\r\n * @param {String} addonType type of addon (message,fill,etc)\r\n * @param {String} addonName name of addon (spiral, bootstrap,etc)\r\n */\nInstancesController.prototype.registerAddon = function (addon, instanceName, addonType, addonName) {\n    if (!this._storage.addons.hasOwnProperty(instanceName)) {\n        this._storage.addons[instanceName] = {};\n    }\n    if (!this._storage.addons[instanceName].hasOwnProperty(addonType)) {\n        this._storage.addons[instanceName][addonType] = {};\n    }\n    if (this._storage.addons[instanceName][addonType].hasOwnProperty(addonName)) {\n        console.error(\"The %s addon type %s already registered for instance %s! Skipping registration.\", addonName, addonType, instanceName);\n        return;\n    }\n    this._storage.addons[instanceName][addonType][addonName] = addon;\n};\n\n/**\r\n * Get registered addon\r\n * @param {String} instanceName name of instance to register addon\r\n * @param {String} addonType type of addon (message,fill,etc)\r\n * @param {String} addonName name of addon (spiral, bootstrap,etc)\r\n * @return {*}\r\n */\nInstancesController.prototype.getInstanceAddon = function (instanceName, addonType, addonName) {\n    if (!this._storage.addons.hasOwnProperty(instanceName) || !this._storage.addons[instanceName].hasOwnProperty(addonType) || !this._storage.addons[instanceName][addonType].hasOwnProperty(addonName)) {\n        return false;\n    }\n    return this._storage.addons[instanceName][addonType][addonName];\n};\n\n/**\r\n * Get all registered classes\r\n * @return {Array}\r\n */\nInstancesController.prototype.getClasses = function () {\n    return Object.keys(this._storage.instancesConstructors.cssClasses);\n};\n\n/**\r\n * For given cssClass return name of instance\r\n * @param {String} cssClass\r\n * @return {*}\r\n */\nInstancesController.prototype.getInstanceNameByCssClass = function (cssClass) {\n    return this._storage.instancesConstructors.cssClasses[cssClass];\n};\n\n/**\r\n * Get constructor by name or class name\r\n * @param {*} name\r\n */\nInstancesController.prototype.getInstanceConstructors = function (name) {\n    // TODO\n};\n\nmodule.exports = InstancesController;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * Helper to manipulate DOM Events. It's a simple wrapper around \"addEventListener\" but it's store all functions and allow us to remove it all.\r\n * It's very helpful for die() method of instances\r\n * @TODO add to many nodes\r\n * @TODO new method like addEventListener  DOMEvents.on(node(s),event,callback,useCapture);\r\n * @constructor\r\n */\n\nvar DOMEvents = function () {\n    /**\r\n     * Internal storage for events\r\n     * @property {Array.<Object>} DOMEvents - dom events array\r\n     * @property {Object} DOMEvents.DOMNode -   DOM node\r\n     * @property {String} DOMEvents.eventType -   Event type\r\n     * @property {Function} DOMEvents.eventFunction -   Function\r\n     * @property {Boolean} DOMEvents.useCapture=false -   useCapture\r\n     * @property {Object} ... -   another object\r\n     * @private\r\n     */\n    this._DOMEventsStorage = [];\n};\n/**\r\n * Add event(s) to node(s).\r\n * @TODO add to many nodes\r\n * @param {Array.<Object>|Object} eventArray - event array or event itself\r\n * @param {Object} eventArray.DOMNode -   DOM node\r\n * @param {String} eventArray.eventType -   Event type\r\n * @param {Function} eventArray.eventFunction -   Function\r\n * @param {Boolean} [eventArray.useCapture=false] -   useCapture\r\n * @example\r\n * var DOMEventsInstance = new DOMEvents();\r\n * var eventOne = {\r\n *      DOMNode: document.getElementById(\"example\"),\r\n *      eventType: \"click\",\r\n *      eventFunction: function (e) {\r\n *          console.log(\"Hi there. Native  DOM events is:\",e);\r\n *      }\r\n * }\r\n *  var eventTwo = {\r\n *      DOMNode: document.getElementById(\"example2\"),\r\n *      eventType: \"mousedown\",\r\n *      eventFunction: function (e) {\r\n *          console.log(\"Hi there. mousedown event. Native  DOM events is:\",e);\r\n *      }\r\n * }\r\n *  DOMEventsInstance.add([eventOne,eventTwo]);\r\n */\nDOMEvents.prototype.add = function (eventArray) {\n    if (Object.prototype.toString.call([]) !== \"[object Array]\") {\n        eventArray = [eventArray];\n    }\n    eventArray.forEach(function (val) {\n        val.useCapture = !!val.useCapture;\n        val.DOMNode.addEventListener(val.eventType, val.eventFunction, val.useCapture);\n        this._DOMEventsStorage.push(val);\n    }, this);\n};\n\n/**\r\n * Remove events\r\n * @param {Array.<Object>} eventArray - event array\r\n * @param {Object} eventArray.DOMNode -   DOM node\r\n * @param {String} eventArray.eventType -   Event type\r\n * @param {Function} eventArray.eventFunction -   Function\r\n * @param {Boolean} [eventArray.useCapture=false] -   useCapture\r\n */\nDOMEvents.prototype.remove = function (eventArray) {\n    // TODO IMPLEMENT\n    // TODO не уверен что этот метод необходим. если надо часто убирать какието обработчики, то лучше поставить обработчки на родителя\n    console.warn(\"TODO IMPLEMENT\");\n};\n\n/**\r\n * Remove all dom events registered with this instance (added by method add)\r\n * @example\r\n * //look at add method as first part of this code\r\n * DOMEventsInstance.removeAll();\r\n */\nDOMEvents.prototype.removeAll = function () {\n    this._DOMEventsStorage.forEach(function (val) {\n        val.DOMNode.removeEventListener(val.eventType, val.eventFunction, val.useCapture);\n    });\n    this._DOMEventsStorage = [];\n};\n\nmodule.exports = DOMEvents;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/**\r\n This is a collection of useful DOM tools.\r\n */\n\nmodule.exports = {\n\n    /**\r\n     * Found first parent node with matched selector(s)\r\n     * @param {Object} elem - dom node\r\n     * @param {String|Array} selectors - selector or array of selectors\r\n     * @returns {Object| Boolean} - node or false\r\n     */\n\n    closest: function (elem, selectors) {\n        selectors = typeof selectors === 'string' ? [selectors] : selectors;\n        var key;\n        var l = selectors.length;\n        var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n        while (elem && elem.parentNode) {\n            for (key = 0; key < l; key++) {\n                if (matchesSelector.call(elem, selectors[key])) {\n                    return elem;\n                }\n            }\n            elem = elem.parentNode;\n        }\n        return false;\n    },\n    /**\r\n     * Found first parent node with matched className(s).\r\n     * TODO Why this? Because old IE....\r\n     * TODO It's not good, because it's a copy of closest @see closest. Refactor\r\n     * @param {Object} elem - dom node\r\n     * @param {String|Array} className - className or array of classNames\r\n     * @returns {Object| Boolean} - node or false\r\n     */\n\n    closestByClassName: function (elem, className) {\n        className = typeof className === 'string' ? [className] : className;\n        var key;\n        var l = className.length;\n\n        while (elem && elem.parentNode) {\n            for (key = 0; key < l; key++) {\n                var reg = new RegExp(\"(\\\\s|^)\" + className[key] + \"(\\\\s|$)\");\n                if (elem.className.match(reg)) {\n                    return elem;\n                }\n            }\n            elem = elem.parentNode;\n        }\n        return false;\n    }\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * @module tools\r\n * @namespace\r\n */\n\nvar tools = {\n    resolveKeyPath: function (path, obj, safe) {\n        return path.split('.').reduce(function (prev, curr) {\n            return !safe ? prev[curr] : prev ? prev[curr] : void 0;\n        }, obj || self);\n    }\n};\n\nmodule.exports = tools;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// sf.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 72090103696b88ed0d7e","\"use strict\";\r\n\r\n/**\r\n * Events system.\r\n * @param {Array} allowedEvents array of allowed events.\r\n * @constructs Events\r\n * @example\r\n * //allow to work with all events\r\n * var events = new Events();\r\n * events.on(\"myBestEvent\",function(e){console.log(e)});\r\n * @example\r\n * //Allow to serve only limited events\r\n *  var events = new Events([\"beforeSubmit\",\"onDataReady\"]);\r\n *  events.on(\"myBestEvent\",function(e){console.log(e)});//will not works\r\n *  events.on(\"beforeSubmit\",function(e){console.log(e)});//will work\r\n */\r\nvar Events = function (allowedEvents) {\r\n    this._storage = {};\r\n    this._allowedEvents = allowedEvents;\r\n};\r\n\r\n/**\r\n * Add event(s)\r\n * @param {String} events event or space separated event list\r\n * @param {Function} callback callback function\r\n * @example\r\n * var events = new Events();\r\n * events.on(\"myBestEvent myBestEvent2 myBestEvent3\",function(e){console.log(e)});\r\n * events.on(\"myBestEvent\",function(e){console.log(e)});\r\n */\r\nEvents.prototype.on = function (events, callback) {\r\n    var eventArr = events.replace(/\\s{2,}/g, \" \").split(\" \");\r\n    eventArr.forEach(function (event) {\r\n        if (this._allowedEvents && this._allowedEvents.indexOf(event) === -1) {// event not inside allowed events\r\n            console.warn(\"Events. Try to register event %s, but event is not allowed\", event);\r\n            return;\r\n        }\r\n        if (!this._storage.hasOwnProperty(events)) {\r\n            this._storage[event] = [];\r\n        }\r\n        this._storage[event].push(callback);\r\n    }, this);\r\n};\r\n\r\n/**\r\n * Add action\r\n * @param {String} action\r\n * @param {Function} func\r\n * @deprecated  use \"on\" instead\r\n */\r\nEvents.prototype.registerAction = Events.prototype.on;\r\n\r\n\r\n/**\r\n * remove event\r\n * @param {String} event\r\n * @param {Function} callback\r\n */\r\nEvents.prototype.off = function (event, callback) {\r\n    alert(\"You try to remove action. This part is incomplete\");\r\n    // TODO\r\n};\r\n\r\n/**\r\n * Trigger event.\r\n * @param {String} event event name\r\n * @param {Object} [options] options to pass to the callback\r\n * @example\r\n * var events = new Events();\r\n * events.on(\"myBestEvent\",function(e){console.log(e.bestKey)});\r\n * events.trigger(\"myBestEvent\",{bestKey:42}); //will show in log\r\n */\r\nEvents.prototype.trigger = function (event, options) {\r\n    if (this._allowedEvents && this._allowedEvents.indexOf(event) === -1) {// event not inside allowed events\r\n        console.warn(\"Events. Try to trigger event %s, but event is not allowed\", event);\r\n        return;\r\n    }\r\n    if (this._storage.hasOwnProperty(event)) {\r\n        for (var n = 0, l = this._storage[event].length; n < l; n++) {\r\n            this._storage[event][n](options);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Perform action\r\n * @param {String} action\r\n * @param {Object} [actionParams] object with all action data from server\r\n * @param {Object} [options] ajax options\r\n * @deprecated use \"trigger\" instead\r\n */\r\nEvents.prototype.performAction = Events.prototype.trigger;\r\n\r\nmodule.exports = Events;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Events.js","\"use strict\";\r\n\r\n/**\r\n * This object try to be easy as FormData.\r\n * Please note this is not(!) a shim for Form data, because it's impossible (you should set headers for Ajax by hands)\r\n * It take object and can convert it string like FormData do. Then you can send this string by Ajax or do some other staff.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FormData\r\n * @param {Object} [data] object with data (supports nested objects)\r\n * @param {String} [boundary] boundary  for Form Data\r\n * @constructor\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"},\"testBoundary\");\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--testBoundary\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--testBoundary--\r\n * //\"\r\n *\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--SpiralFormData-4935309085994959\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--SpiralFormData-4935309085994959--\r\n * //\"\r\n *\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.append(\"key2\",\"val2\");\r\n * formData.toString();\r\n * // Returns:\r\n * //--SpiralFormData-988681384595111\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * //testValue\r\n * //--SpiralFormData-988681384595111\r\n * //Content-Disposition: form-data; name=key2\r\n * //\r\n * //val2\r\n * //--SpiralFormData-988681384595111--\r\n * //\"\r\n */\r\nvar LikeFormData = function (data, boundary) {\r\n    this.data = {};\r\n    if (data) {\r\n        if (Object.prototype.toString.call(data) !== \"[object Object]\") { // non object/ Alert developer\r\n            console.warn(\"LikeFormData can't accept non Object. Please reefer to documentation. Problem parameter is:\", data);\r\n        } else {\r\n            this.data = data;\r\n        }\r\n    }\r\n    this.boundary = (boundary) ? boundary : (\"SpiralFormData-\" + Math.random().toString().substr(2));\r\n\r\n\r\n    // if (!isOldIE) {\r\n    //    this.boundary = \"SpiralAjax-\" + Math.random().toString().substr(2);\r\n    //    //xhr.setRequestHeader(\"content-type\", \"multipart/form-data; charset=utf-8; boundary=\" + this.boundary);\r\n    // } else {\r\n    //    this.boundary = \"SpiralAjax-oldIE9876gsloiHGldowu\";\r\n    // }\r\n};\r\n\r\n/**\r\n * Append data to storage. Like standart FormData do.\r\n * @param {String} key\r\n * @param {String} val\r\n * @example\r\n * var formData = new FormData();\r\n * formData.append(\"key2\",\"val2\");\r\n */\r\nLikeFormData.prototype.append = function (key, val) {\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/FormData\r\n    // TODO ***Appends a new value**** onto an existing key inside a FormData object, or adds the key if it does not already exist.\r\n    this.data[key] = val;\r\n};\r\n\r\n/**\r\n * convert to string\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--SpiralFormData-4935309085994959\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--SpiralFormData-4935309085994959--\r\n * //\"\r\n * @return {string}\r\n */\r\nLikeFormData.prototype.toString = function () {\r\n    var retString = \"\";\r\n    var boundary = this.boundary;\r\n    var iterate = function (data, partOfKey) {\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key) && (typeof data[key] !== \"undefined\" )) {\r\n                if (typeof data[key] === \"object\") {\r\n                    iterate(data[key], ((partOfKey.length === 0) ? key : (partOfKey + \"[\" + key + \"]\")));\r\n                } else {\r\n                    retString += \"--\" + boundary\r\n                        + \"\\r\\nContent-Disposition: form-data; name=\" + ((partOfKey.length === 0) ? key : (partOfKey + \"[\" + key + \"]\"))\r\n                        + \"\\r\\n\\r\\n\" + data[key] + \"\\r\\n\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    if (typeof this.data !== \"object\") {\r\n        this.data = {\r\n            data: this.data\r\n        };\r\n    }\r\n    iterate(this.data, \"\");\r\n\r\n    retString += \"--\" + this.boundary + \"--\\r\\n\";\r\n    return retString;\r\n};\r\n\r\n/**\r\n * The delete() method of the FormData interface deletes a key/value pair from a FormData object.\r\n * @param {string} key\r\n * @return {*}\r\n */\r\nLikeFormData.prototype.delete = function (key) {\r\n    return delete(this.data[key]);\r\n};\r\n\r\n/**\r\n *The get() method of the FormData interface returns the first value associated with a given key from within a FormData object.\r\n * @param {string} key\r\n * @return {*}\r\n */\r\nLikeFormData.prototype.get = function (key) {\r\n    return this.data[key];\r\n};\r\n\r\n/**\r\n * The getAll() method of the FormData interface returns the first value associated with a given key from within a FormData object.\r\n * @return {*}\r\n */\r\nLikeFormData.prototype.getAll = function () {\r\n    return this.data;\r\n};\r\n\r\n/**\r\n * The has() method of the FormData interface returns a boolean stating whether a FormData object contains a certain key/value pair.\r\n * @param {string} key\r\n * @return {*}\r\n */\r\nLikeFormData.prototype.has = function (key) {\r\n    return this.data.hasOwnProperty(key);\r\n};\r\n\r\n/**\r\n * The difference between set() and FormData.append is that if the specified header does already exist, set() will\r\n * overwrite the existing value with the new one, whereas FormData.append will append the new value onto the end of the\r\n * set of values.\r\n * @param {string} key\r\n * @param {*} val\r\n */\r\nLikeFormData.prototype.set = function (key, val) {\r\n    this.data[key] = val;\r\n};\r\n\r\n/**\r\n * Get content header to set for Ajax. Not a part of standart FormData object. But for sending Like FormData over Ajax you should know header.\r\n * @return {string}\r\n * @example\r\n * var formData = new LikeFormData();\r\n * formData.getContentTypeHeader(); //return \"multipart/form-data; charset=utf-8; boundary=SpiralFormData-988681384595111\"\r\n * @example\r\n * var formData = new LikeFormData({key:\"val2\"},\"testBoundary\");\r\n * formData.getContentTypeHeader(); //return \"multipart/form-data; charset=utf-8; boundary=testBoundary\"\r\n */\r\nLikeFormData.prototype.getContentTypeHeader = function () {\r\n    return \"multipart/form-data; charset=utf-8; boundary=\" + this.boundary;\r\n};\r\n\r\nmodule.exports = LikeFormData;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/LikeFormData.js","var core = {\r\n    Ajax: require(\"./core/Ajax\"),\r\n    BaseDOMConstructor: require(\"./core/BaseDOMConstructor\"),\r\n    DomMutations: require(\"./core/DomMutations\"),\r\n    Events: require(\"./core/Events\"),\r\n    InstancesController: require(\"./core/InstancesController\")\r\n};\r\n\r\nvar helpers = {\r\n    DOMEvents: require(\"./helpers/DOMEvents\"),\r\n    domTools: require(\"./helpers/domTools\"),\r\n    LikeFormData: require(\"./helpers/LikeFormData\"),\r\n    tools: require(\"./helpers/tools\")\r\n};\r\n\r\nvar sf = {\r\n    core: core,\r\n    helpers: helpers,\r\n    tools: helpers.tools\r\n};\r\n\r\nmodule.exports = sf;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/sf.js","\"use strict\";\r\n\r\n// var tools = require(\"../helpers/tools\");\r\nvar Events = require(\"../core/Events\");\r\nvar LikeFormData = require(\"../helpers/LikeFormData\");\r\n\r\n/**\r\n * This is an Ajax transport.\r\n * Supports  XDomainRequest for old IE\r\n * @param {Object} [options]\r\n * @param {Object} [options.headers] Headers to add to the instance\r\n * @fires beforeSend event that will be performed before request is send. Event called with one parameter \"options\", that contains all variables for Ajax\r\n * @constructor\r\n */\r\nvar Ajax = function (options) {\r\n    this.currentRequests = 0;\r\n    this.events = new Events([\"beforeSend\", 'load']);\r\n\r\n    if (options && options.headers) {\r\n        this.headers = Object.assign(this.headers, options.headers);\r\n    }\r\n};\r\n\r\n/**\r\n * Default headers. You can overwrite it. Look at the event beforeSend\r\n * Please note that on XDomainRequest  we can't send any headers.\r\n * @type Object\r\n */\r\nAjax.prototype.headers = {\r\n    'X-Requested-With': 'XMLHttpRequest'\r\n};\r\n\r\n/**\r\n * Send ajax request to server\r\n * Will return promise or array with promise and XMLHttpRequest : {window.Promise|[window.Promise,XMLHttpRequest]}\r\n * @since 0.4.0\r\n * @param {Object} options object with options\r\n * @param {String} options.url url to send data\r\n * @param {Object|String} [options.data] data to send\r\n * @param {String} [options.method]\r\n * @param {Object} [options.headers] headers to add to the request\r\n * @param {Function} [options.onProgress] callback function on progress. Two callback options: current bytes sent,totalBytes\r\n * @param {Function} [options.isReturnXHRToo===false] should method return array instead of Promise. Some times is needed to control ajax (abort, etc).\r\n * If tree then  [window.Promise, XMLHttpRequest ] will be returned\r\n * @return {Promise|Array}\r\n */\r\nAjax.prototype.send = function (options) {\r\n    var that = this;\r\n\r\n    // TODO why we check here if data === null then reassign to null again?\r\n    if (options.data === null || options.data === void 0 || options.data === 'undefined') {\r\n        options.data = null;\r\n    }\r\n    if (!options.method) {\r\n        options.method = \"POST\";\r\n    }\r\n\r\n    options.headers = options.headers ? Object.assign(options.headers, this.headers, options.headers) : Object.assign({}, this.headers);\r\n    var xhr;\r\n    var ajaxPromise = new Promise(function (resolve, reject) {    // Return a new promise.\r\n        if (!options.url) {\r\n            console.error(\"You should provide url\");\r\n            reject(\"You should provide url\");\r\n        }\r\n        that.currentRequests++;\r\n\r\n        var oldIE = false;\r\n\r\n        if ((typeof window !== 'undefined')\r\n            && window.XDomainRequest && (window.XMLHttpRequest && new XMLHttpRequest().responseType === undefined)\r\n            && (url.indexOf(\"http\") === 0)) { // old IE CORS\r\n            // TODO maybe we should use XDomainRequest only for cross domain requests? But  Spiral for now works great with XDomainRequest (based on IEJSON)\r\n            xhr = new XDomainRequest();\r\n            // @see http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\r\n            oldIE = true;\r\n            // @see http://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\r\n\r\n            xhr.onprogress = function (e) {\r\n                // TODO adjust options\r\n                options.onProgress && options.onProgress(e);\r\n            };\r\n        } else {\r\n            xhr = new XMLHttpRequest();\r\n            if (options.onProgress) {\r\n                xhr.upload.addEventListener(\"progress\", function (event) {\r\n                    if (event.lengthComputable) {\r\n                        options.onProgress(event.loaded, event.total);\r\n                    }\r\n                }, false);\r\n            }\r\n        }\r\n\r\n        xhr.open(options.method, options.url);\r\n\r\n        xhr.onload = function () { // On loaded\r\n            that.currentRequests--;\r\n            var ans = that._parseJSON(xhr);\r\n\r\n            if (ans.status) {\r\n                if (ans.status > 199 && ans.status < 300) {// 200-299\r\n                    resolve(ans);\r\n                } else if (ans.status > 399 && ans.status < 600) {// 400-599\r\n                    reject(ans);\r\n                } else {\r\n                    console.error(\"unknown status %d. Rejecting\", ans.status);\r\n                    reject(ans);\r\n                }\r\n            } else if (oldIE) {\r\n                resolve(ans); // OLD IE + downloading file is producing  no status.\r\n            } else {\r\n                reject(ans); // reject with the status text\r\n            }\r\n            options.response = ans;\r\n            that.events.trigger(\"load\", options); // for example - used to handle actions\r\n        };\r\n\r\n        xhr.onerror = function () {// Handle network errors\r\n            that.currentRequests--;\r\n            reject(Error(\"Network Error\"), xhr);\r\n        };\r\n\r\n        that.events.trigger(\"beforeSend\", options); // you can modify \"options\" object inside event (like adding you headers,data,etc)\r\n\r\n        var dataToSend;\r\n        if (options.data !== null) { // if data to send is not empty\r\n            if (!oldIE) {\r\n                if (options.data.toString().indexOf(\"FormData\") !== -1) { // if form data\r\n                    dataToSend = options.data;\r\n                } else {\r\n                    dataToSend = new LikeFormData(options.data);\r\n                    options.headers[\"content-type\"] = dataToSend.getContentTypeHeader();\r\n                }\r\n                that._setHeaders(xhr, options.headers);\r\n            } else {\r\n                dataToSend = \"IEJSON\" + JSON.stringify(options.data);\r\n            }\r\n        } else { // else send empty data\r\n            dataToSend = null;\r\n        }\r\n\r\n//        if (!oldIE) {\r\n//            //xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n//            dataToSend = new spiral.LikeFormData(data, xhr, oldIE);\r\n//        } else {\r\n//            if (data !==null && data !== void 0 && data !== 'undefined'){\r\n//                dataToSend = \"IEJSON\"+JSON.stringify(data);\r\n//            } else {\r\n//                 dataToSend =data;\r\n//            }\r\n//\r\n//        }\r\n\r\n\r\n        try { // working around FF bug\r\n            xhr.send(dataToSend);// Make the request\r\n        } catch (e) {\r\n            // console.error(\"error sending trying another method\");\r\n            xhr.send(dataToSend.toString());\r\n        }\r\n\r\n        return xhr;\r\n    });\r\n\r\n    if (options.isReturnXHRToo) { // return xhr too\r\n        return [ajaxPromise, xhr];\r\n    }\r\n    return ajaxPromise;\r\n};\r\n\r\n/**\r\n * Iterate over headers object and call xhr.setRequestHeader\r\n * @param {XMLHttpRequest} xhr\r\n * @param {Object} headers object with headers to set\r\n */\r\nAjax.prototype._setHeaders = function (xhr, headers) {\r\n    for(var header in headers) {\r\n        if(headers.hasOwnProperty(header)) {\r\n            xhr.setRequestHeader(header, headers[header]);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Try to parse and normalize answer\r\n * @param {XHR} xhr\r\n * @return {*}\r\n * @private\r\n */\r\nAjax.prototype._parseJSON = function (xhr) {\r\n    if (!xhr.response) {\r\n        xhr.response = xhr.responseText;\r\n    }\r\n\r\n    var ret = {};\r\n    var contentType = false;\r\n\r\n    if (xhr.getResponseHeader) {\r\n        contentType = xhr.getResponseHeader(\"Content-Type\");\r\n    }\r\n\r\n    if (!contentType\r\n        || contentType.toLowerCase() === 'application/json'\r\n        || contentType.toLowerCase() === 'text/json'\r\n        || contentType.toLowerCase() === 'inode/symlink') { // application/json or inode/symlink  (AmazonS3 bug? )\r\n        try {\r\n            ret = JSON.parse(xhr.response);\r\n        } catch (e) {\r\n            console.error(\"Not a JSON!\", xhr.response);\r\n            ret = {data: xhr.response};\r\n        }\r\n    } else {\r\n        ret = {data: xhr.response};\r\n    }\r\n\r\n    if (!ret.status) {\r\n        ret.status = xhr.status;\r\n    }\r\n    // Some servers can answer status in JSON as \"HTTP/1.1 200 OK\"  but we need a status number\r\n    if (typeof ret.status === 'string' && ret.status.indexOf(\"HTTP/\") === 0 && ret.status.match(/ (\\d\\d\\d)/)) {\r\n        ret.status = parseInt(ret.status.match(/ (\\d\\d\\d)/)[1]);// TODO check this code\r\n    }\r\n\r\n    if (!ret.statusText) {\r\n        ret.statusText = xhr.statusText;\r\n    }\r\n    if (xhr.status && xhr.status != ret.status) {\r\n        console.warn(\"Status from request %d, but response contains status %d\", xhr.status, ret.status);\r\n    }\r\n\r\n    return ret;\r\n};\r\n\r\nmodule.exports = Ajax;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Ajax.js","\"use strict\";\r\n\r\n/**\r\n * This a base constructor (class) for any DOM based instance.\r\n * This constructor just grab all node attributes and generates options. All processed options stored at this.options\r\n * @example\r\n * We have html like this:\r\n * <div data-test=\"testValue\" data-value=\"value123\">.....</div>\r\n * this.options will be:\r\n * {\r\n *  test:\"testValue\",\r\n *  value:\"value\"\r\n * }\r\n * Note: data-test and data-value should be described in attributesToGrab\r\n * @constructor\r\n */\r\nvar BaseDOMConstructor = function () {\r\n};\r\n/**\r\n * Init method. Call after construct instance\r\n * @param {Object} sf\r\n * @param {Object} node  DomNode of form\r\n * @param {Object} [options] all options to override default\r\n */\r\nBaseDOMConstructor.prototype.init = function (sf, node, options) {\r\n    // TODO data-spiral-JSON\r\n    this.sf = sf;\r\n    this.node = node;\r\n    // if (sf.options && sf.options.instances && sf.options.instances[this.name]) {\r\n    //    options = Object.assign(options || {}, sf.options.instances[this.name]);\r\n    // }\r\n    this.options = Object.assign(this.grabOptions(node), options);\r\n};\r\n\r\n/**\r\n * This is a options to generate.\r\n * You should provide processor or value.\r\n * @type {Object}\r\n * @property {Object} propertyKey - object of property\r\n * @property {String} propertyKey.value - default value to return\r\n * @property {String} [propertyKey.domAttr] - dom attribute to grab data\r\n * @property {Function} [propertyKey.processor] -  processor to process data before return\r\n * @property {Object}  ... - Another object of one property\r\n * @type {{}}\r\n *  @example\r\n * \"someAttribute\": {// key\r\n *      value: true, //default Value\r\n *      domAttr: \"data-some-attribute\", // attribute from node to grab\r\n *      processor: function (node,val,self) { //processor to process values before return\r\n *          //some calculations\r\n *      return someValue;\r\n *      }\r\n *  },\r\n *  \"anotherAttribute\":{...},\r\n *  \"...\"\r\n *\r\n *  @example\r\n *  //return node as value\r\n *  \"context\": {\r\n *      \"processor\": function (node,val,key) { //processor\r\n *          return node;\r\n *      }\r\n *  },\r\n *  \"Another-key\":{...},\r\n *  \"...\"\r\n * @example\r\n * //Grab attribute \"data-attribute\" as \"MyAttribute\" if attribute not provided return \"DefaultValue\"\r\n * // Dom node <div data-attribute=\"someValue\"></div>\r\n * \"MyAttribute\": {\r\n *      value: \"DefaultValue\",\r\n *      domAttr: \"data-attribute\"\r\n *  }\r\n *  //after processing we should have\r\n *  {\"MyAttribute\":\"someValue\"}\r\n *\r\n *  @example\r\n * //Grab attribute \"data-attribute\" as \"MyAttribute\" and return some value instead\r\n * //Dom node  <div data-attribute=\"someValue\"></div>\r\n * \"MyAttribute\": {\r\n *      domAttr: \"data-attribute\",\r\n *      processor: function (node,val,self) {\r\n *          return val+\"SomeCalculation\";\r\n *      }\r\n *  }\r\n *  //after processing we should have\r\n *  {\"MyAttribute\":\"someValueSomeCalculation\"}\r\n *\r\n * @example\r\n * //return function as value\r\n * processAnswer: {\r\n *      \"value\": function (options) {\r\n *         return \"someVal\";\r\n *      }\r\n *  //after processing we should have\r\n *  {\"processAnswer\":function (options) {\r\n *         return \"someVal\";\r\n *      }\r\n *   }\r\n *\r\n * @example\r\n * //return init time as value\r\n * initTime: {\r\n *      \"processor\": function (node,val,self) {\r\n *         return new Date().getTime;\r\n *      }\r\n *  //after processing we should have\r\n *  {\"initTime\":1429808977404}\r\n * @example\r\n * //return other value instead of real one\r\n * processAnswer: {\r\n *      \"processor\": function (node,val,self) {\r\n *         return \"someVal\";\r\n *      }\r\n *  //after processing we should have\r\n *  {\"processAnswer\":\"someVal\"}\r\n */\r\nBaseDOMConstructor.prototype.optionsToGrab = {};\r\n\r\n/**\r\n * Grab all options that described in optionsToGrab\r\n * @param {Object} node domNode\r\n * @return {Object}\r\n */\r\nBaseDOMConstructor.prototype.grabOptions = function (node) {\r\n    var options = {};\r\n    var currentOptionValue;\r\n    var currentOption;\r\n    for(var option in this.optionsToGrab) {\r\n        if(this.optionsToGrab.hasOwnProperty(option)) {\r\n            currentOptionValue = null;\r\n            if (this.optionsToGrab.hasOwnProperty(option)) {// if this is own option\r\n                currentOption = this.optionsToGrab[option];\r\n                if (currentOption.hasOwnProperty(\"value\")) {// we have default option. Let's grab it for first\r\n                    currentOptionValue = currentOption.value;\r\n                }\r\n\r\n                if (this.sf.options.instances[this.name] && this.sf.options.instances[this.name].hasOwnProperty(option)) {\r\n                    currentOptionValue = this.sf.options.instances[this.name][option];\r\n                }\r\n\r\n                if (currentOption.hasOwnProperty(\"domAttr\") && node.attributes.hasOwnProperty(currentOption.domAttr)) {// we can grab the attribute of node\r\n                    currentOptionValue = node.attributes[currentOption.domAttr].value;\r\n                }\r\n\r\n                if (currentOption.hasOwnProperty(\"processor\")) {// we have processor. Let's execute it\r\n                    currentOptionValue = currentOption.processor.call(this, node, currentOptionValue, currentOption);\r\n                }\r\n\r\n                if (currentOptionValue !== null) {\r\n                    options[option] = currentOptionValue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return options;\r\n};\r\n\r\nmodule.exports = BaseDOMConstructor;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/BaseDOMConstructor.js","\"use strict\";\r\n/**\r\n * Dom mutation. Listening to the DOM and add or remove instances based on classes.\r\n * @param {Object} instancesController  spiral instancesController.\r\n * @param {Function} instancesController.getClasses  get all registered modules classes.\r\n * @param {Function} instancesController.addInstance  add instance method.\r\n * @param {Function} instancesController.removeInstance  remove instance method\r\n * @constructor\r\n */\r\nvar DomMutations = function (instancesController) {\r\n    if (!instancesController) {\r\n        console.error(\"You should provide instancesController  for DOM Mutation. Because DOM Mutation  should known all classes and\");\r\n        return;\r\n    }\r\n    if (!this.constructor) {\r\n        console.error(\"Please call DomMutations with new  - 'new DomMutations()' \");\r\n        return;\r\n    }\r\n    this.instancesController = instancesController;\r\n    var config = {// config for MutationObserver\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true,\r\n            characterDataOldValue: true,\r\n            subtree: true,\r\n            attributeOldValue: true,\r\n            attributeFilter: [\"class\"]\r\n        };\r\n    var that = this;\r\n\r\n    this.observer = new MutationObserver(function () {// call function when dom mutated.\r\n        // eslint-disable-next-line\r\n        that.onDomMutate.apply(that, arguments);\r\n    });\r\n    this.observer.observe(document, config);// start observer\r\n};\r\n\r\n/**\r\n * When dom mutated this function id executed.\r\n * @param {Array} mutations array of mutations\r\n * @return {boolean}\r\n */\r\nDomMutations.prototype.onDomMutate = function (mutations) {\r\n    var classArray = this.instancesController.getClasses();// get all registered classes\r\n    var classSelector = \".\" + classArray.join(\",.\");// convert for querySelectorAll()\r\n    if (classSelector.length === 1) {// if not registered any instanceTypes\r\n        return false;\r\n    }\r\n    mutations.forEach(function (mutation) {// loop over mutation array\r\n        switch (mutation.type) {\r\n            case \"attributes\":\r\n                this.processMutationAttributes(mutation, classArray);\r\n                break;\r\n\r\n            case \"characterData\":\r\n\r\n                break;\r\n\r\n            case \"childList\":\r\n                this.processMutationChildList(mutation.addedNodes, \"addInstance\", classSelector, classArray);\r\n                this.processMutationChildList(mutation.removedNodes, \"removeInstance\", classSelector, classArray);\r\n                break;\r\n\r\n            case \"default\":\r\n                console.error(\"Something wrong. Contact tech support\");\r\n        }\r\n    }, this);\r\n    return true;\r\n};\r\n\r\n\r\nDomMutations.prototype.processMutationAttributes = function (mutation, classArray) {\r\n    var that = this;\r\n    var currentClasses = mutation.target.className.split(\" \");\r\n    var oldClasses = (mutation.oldValue) ? mutation.oldValue.split(\" \") : [];\r\n    var addedClasses = currentClasses.filter(function (val) {\r\n        return (oldClasses.indexOf(val) === -1);\r\n    });\r\n    var removedClasses = oldClasses.filter(function (val) {\r\n        return (currentClasses.indexOf(val) === -1);\r\n    });\r\n    var addedRegisteredClasses = addedClasses.filter(function (val) {\r\n        return (classArray.indexOf(val) !== -1);\r\n    });\r\n    var removedRegisteredClasses = removedClasses.filter(function (val) {\r\n        return (classArray.indexOf(val) !== -1);\r\n    });\r\n    removedRegisteredClasses.forEach(function (val) {\r\n        that.instancesController.removeInstance(that.instancesController.getInstanceNameByCssClass(val), mutation.target);\r\n    });\r\n    addedRegisteredClasses.forEach(function (val) {\r\n        that.instancesController.addInstance(that.instancesController.getInstanceNameByCssClass(val), mutation.target);\r\n    });\r\n};\r\n/**\r\n * Process mutation on ChildList\r\n * @param {NodeList} nodesList array with nodes\r\n * @param {String} action action to call (add or remove nodes)\r\n * @param {String} classSelector - string selector for querySelectorAll\r\n * @param {Array} classArray - array of all registered classes\r\n */\r\nDomMutations.prototype.processMutationChildList = function (nodesList, action, classSelector, classArray) {\r\n    var that = this;\r\n\r\n    /**\r\n     * Internal function for checking node class\r\n     * @param {Object} node dom node\r\n     */\r\n    function checkNode(node) {\r\n        classArray.forEach(function (className) {// loop over registered classes\r\n            if (node.classList.contains(className)) {// if class match try to add or remove instance for this node\r\n                that.instancesController[action](that.instancesController.getInstanceNameByCssClass(className), node);\r\n            }\r\n        });\r\n    }\r\n\r\n    [].forEach.call(nodesList, function (val) {// loop over mutation nodes\r\n        if (val.nodeType !== 1 || val.nodeName === \"SCRIPT\" || val.nodeName === \"LINK\") {// do not process other nodes then ELEMENT_NODE https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType also ignore SCRIPT and LINK tag\r\n            return false;\r\n        }\r\n        checkNode(val);// check mutation node\r\n        [].forEach.call(val.querySelectorAll(classSelector), checkNode);// query all nodes with required classes and check it\r\n        return true;\r\n    });\r\n};\r\n\r\n/**\r\n * Stop listening the dom changes\r\n */\r\nDomMutations.prototype.stopObserve = function () {\r\n    this.observer.disconnect();\r\n};\r\n\r\nmodule.exports = DomMutations;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/DomMutations.js","\"use strict\";\r\n\r\n/**\r\n * Instance controller\r\n * @param {*} spiral\r\n * @constructor\r\n */\r\nvar InstancesController = function (spiral) {\r\n    this.spiral = spiral;\r\n    if (!this.constructor) {\r\n        console.error(\"Please call InstancesController with new  - 'new InstancesController()' \");\r\n        return;\r\n    }\r\n    this._storage = {\r\n        instancesConstructors: {\r\n            cssClasses: {},\r\n            jsConstructors: {}\r\n        },\r\n        addons: {},\r\n        instances: {}\r\n    };\r\n\r\n    // todo decide if we need this\r\n    // [\"onAddInstance\", \"onRemoveInstance\"]\r\n    // this.events = new spiral.modules.core.Events();\r\n};\r\n\r\n/**\r\n * Register new instance type\r\n * @param {Function} constructorFunction - constructor function of instance\r\n * @param {String} [cssClassName] - css class name of instance. If class not provided that it can't be automatically\r\n * controlled by DomMutation. But you still can use it from JS.\r\n * @param {Boolean} [isSkipInitialization=false]  - skip component initialization, just adding, no init nodes.\r\n */\r\nInstancesController.prototype.registerInstanceType = function (constructorFunction, cssClassName, isSkipInitialization) {\r\n    var instanceName = constructorFunction.prototype.name;\r\n\r\n    if (!instanceName) {\r\n        console.error(\"Instance constructor should have name inside it\");\r\n    }\r\n\r\n    if (this._storage.instancesConstructors.jsConstructors.hasOwnProperty(instanceName)) {\r\n        console.error(\"Instance Constructor for type '%s' already added. Skipping\", instanceName);\r\n        return;\r\n    }\r\n\r\n    if (cssClassName) {// add link (cssClassName->instanceName)\r\n        this._storage.instancesConstructors.cssClasses[cssClassName] = instanceName;\r\n    }\r\n\r\n    this._storage.instancesConstructors.jsConstructors[instanceName] = constructorFunction;\r\n\r\n    // if (this._storage.instancesConstructors.hasOwnProperty(className)){\r\n    //    console.error(\"Instance Constructor for type %s already added. Skipping\",constructorFunction.prototype.name);\r\n    //    return;\r\n    // }\r\n    // this._storage.instancesConstructors[className] = {//init storage fields\r\n    //    \"typeName\": constructorFunction.prototype.name,\r\n    //    \"constructor\": constructorFunction\r\n    // };\r\n    this._storage.instances[instanceName] = [];\r\n    if (!isSkipInitialization) {\r\n        var nodes = document.getElementsByClassName(cssClassName);// init add nodes with this class\r\n        for (var i = 0, max = nodes.length; i < max; i++) {\r\n            this.addInstance(instanceName, nodes[i]);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Old method to register instance type\r\n * @param {*} className\r\n * @param {*} constructorFunction\r\n * @param {*} isSkipInitialization\r\n * @return {*}\r\n * @deprecated\r\n */\r\nInstancesController.prototype.addInstanceType = function (className, constructorFunction, isSkipInitialization) {\r\n    console.warn(\"addInstanceType is deprecated. Please use registerInstanceType instead\");\r\n    return this.registerInstanceType(constructorFunction, isSkipInitialization);\r\n};\r\n\r\n\r\n/**\r\n * Add instance\r\n * @param {String} instanceName - name of instance\r\n * @param {Object} node - dom node\r\n * @param {Object} [options] all options for send to the constructor\r\n * @return {boolean}\r\n */\r\nInstancesController.prototype.addInstance = function (instanceName, node, options) {\r\n    var InstanceConstructor = this._storage.instancesConstructors.jsConstructors[instanceName];\r\n    var isAlreadyAdded = this.getInstance(instanceName, node);\r\n\r\n    if (!instanceConstructor || isAlreadyAdded) {// if not found this type  or already added - return\r\n        return false;\r\n    }\r\n\r\n    var instance = new InstanceConstructor(this.spiral, node, options);\r\n    this._storage.instances[instanceName].push({// add new instance of this type\r\n        \"node\": node,\r\n        \"instance\": instance\r\n    });\r\n\r\n    // this.events.trigger(\"onAddInstance\", instance);\r\n\r\n    return instance;\r\n};\r\n\r\n/**\r\n * Remove instance.\r\n * @param {String} instanceName - name of instance class\r\n * @param {Object|String} node - dom node ID\r\n * @return {boolean}\r\n */\r\nInstancesController.prototype.removeInstance = function (instanceName, node) {\r\n    var instanceObj = this.getInstance(instanceName, node, true);\r\n    var key;\r\n\r\n    if (!instanceObj) {\r\n        return false;\r\n    }\r\n    instanceObj.instance.die();// avoid memory leak\r\n    key = this._storage.instances[instanceName].indexOf(instanceObj);\r\n    if (key !== -1) {// remove key\r\n        this._storage.instances[instanceName].splice(key, 1);\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Get instance. Return instance object of this dom node\r\n * @param {String} instanceName - name of instance\r\n * @param {Object|String} node - dom node o dome node ID\r\n * @param {boolean} [isReturnObject] - return object or instance\r\n * @return {boolean}\r\n */\r\nInstancesController.prototype.getInstance = function (instanceName, node, isReturnObject) {\r\n    // TODO isReturnObject not needed. Refactor and remove\r\n\r\n    var typeArr = this._storage.instances[instanceName];\r\n    var ret = false;\r\n    if (!typeArr) {\r\n        return false;\r\n    }\r\n    node = (node instanceof HTMLElement) ? node : document.getElementById(node);\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    for (var key = 0, l = typeArr.length; key < l; key++) {// iterate storage and try to find instance\r\n        if (typeArr[key].node === node) {\r\n            ret = (isReturnObject) ? typeArr[key] : typeArr[key].instance;\r\n            break;\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\n/**\r\n * Get instances. Return array of instances objects\r\n * @param {String} instanceName - name of instance\r\n * @return {array|boolean}\r\n */\r\nInstancesController.prototype.getInstances = function (instanceName) {\r\n    return this._storage.instances[instanceName] || false;\r\n};\r\n\r\n\r\n/**\r\n * Register addon for instance\r\n * @param {Function|Object} addon\r\n * @param {String} instanceName name of instance to register addon\r\n * @param {String} addonType type of addon (message,fill,etc)\r\n * @param {String} addonName name of addon (spiral, bootstrap,etc)\r\n */\r\nInstancesController.prototype.registerAddon = function (addon, instanceName, addonType, addonName) {\r\n    if (!this._storage.addons.hasOwnProperty(instanceName)) {\r\n        this._storage.addons[instanceName] = {};\r\n    }\r\n    if (!this._storage.addons[instanceName].hasOwnProperty(addonType)) {\r\n        this._storage.addons[instanceName][addonType] = {};\r\n    }\r\n    if (this._storage.addons[instanceName][addonType].hasOwnProperty(addonName)) {\r\n        console.error(\"The %s addon type %s already registered for instance %s! Skipping registration.\", addonName, addonType, instanceName);\r\n        return;\r\n    }\r\n    this._storage.addons[instanceName][addonType][addonName] = addon;\r\n};\r\n\r\n/**\r\n * Get registered addon\r\n * @param {String} instanceName name of instance to register addon\r\n * @param {String} addonType type of addon (message,fill,etc)\r\n * @param {String} addonName name of addon (spiral, bootstrap,etc)\r\n * @return {*}\r\n */\r\nInstancesController.prototype.getInstanceAddon = function (instanceName, addonType, addonName) {\r\n    if(!this._storage.addons.hasOwnProperty(instanceName)\r\n        || !this._storage.addons[instanceName].hasOwnProperty(addonType)\r\n        || !this._storage.addons[instanceName][addonType].hasOwnProperty(addonName)) {\r\n        return false;\r\n    }\r\n    return this._storage.addons[instanceName][addonType][addonName];\r\n};\r\n\r\n\r\n/**\r\n * Get all registered classes\r\n * @return {Array}\r\n */\r\nInstancesController.prototype.getClasses = function () {\r\n    return Object.keys(this._storage.instancesConstructors.cssClasses);\r\n};\r\n\r\n/**\r\n * For given cssClass return name of instance\r\n * @param {String} cssClass\r\n * @return {*}\r\n */\r\nInstancesController.prototype.getInstanceNameByCssClass = function (cssClass) {\r\n    return this._storage.instancesConstructors.cssClasses[cssClass];\r\n};\r\n\r\n/**\r\n * Get constructor by name or class name\r\n * @param {*} name\r\n */\r\nInstancesController.prototype.getInstanceConstructors = function (name) {\r\n    // TODO\r\n};\r\n\r\nmodule.exports = InstancesController;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/InstancesController.js","\"use strict\";\r\n/**\r\n * Helper to manipulate DOM Events. It's a simple wrapper around \"addEventListener\" but it's store all functions and allow us to remove it all.\r\n * It's very helpful for die() method of instances\r\n * @TODO add to many nodes\r\n * @TODO new method like addEventListener  DOMEvents.on(node(s),event,callback,useCapture);\r\n * @constructor\r\n */\r\nvar DOMEvents = function () {\r\n    /**\r\n     * Internal storage for events\r\n     * @property {Array.<Object>} DOMEvents - dom events array\r\n     * @property {Object} DOMEvents.DOMNode -   DOM node\r\n     * @property {String} DOMEvents.eventType -   Event type\r\n     * @property {Function} DOMEvents.eventFunction -   Function\r\n     * @property {Boolean} DOMEvents.useCapture=false -   useCapture\r\n     * @property {Object} ... -   another object\r\n     * @private\r\n     */\r\n    this._DOMEventsStorage = [];\r\n};\r\n/**\r\n * Add event(s) to node(s).\r\n * @TODO add to many nodes\r\n * @param {Array.<Object>|Object} eventArray - event array or event itself\r\n * @param {Object} eventArray.DOMNode -   DOM node\r\n * @param {String} eventArray.eventType -   Event type\r\n * @param {Function} eventArray.eventFunction -   Function\r\n * @param {Boolean} [eventArray.useCapture=false] -   useCapture\r\n * @example\r\n * var DOMEventsInstance = new DOMEvents();\r\n * var eventOne = {\r\n *      DOMNode: document.getElementById(\"example\"),\r\n *      eventType: \"click\",\r\n *      eventFunction: function (e) {\r\n *          console.log(\"Hi there. Native  DOM events is:\",e);\r\n *      }\r\n * }\r\n *  var eventTwo = {\r\n *      DOMNode: document.getElementById(\"example2\"),\r\n *      eventType: \"mousedown\",\r\n *      eventFunction: function (e) {\r\n *          console.log(\"Hi there. mousedown event. Native  DOM events is:\",e);\r\n *      }\r\n * }\r\n *  DOMEventsInstance.add([eventOne,eventTwo]);\r\n */\r\nDOMEvents.prototype.add = function (eventArray) {\r\n    if (Object.prototype.toString.call([]) !== \"[object Array]\") {\r\n        eventArray = [eventArray];\r\n    }\r\n    eventArray.forEach(function (val) {\r\n        val.useCapture = !!(val.useCapture);\r\n        val.DOMNode.addEventListener(val.eventType, val.eventFunction, val.useCapture);\r\n        this._DOMEventsStorage.push(val);\r\n    }, this);\r\n};\r\n\r\n/**\r\n * Remove events\r\n * @param {Array.<Object>} eventArray - event array\r\n * @param {Object} eventArray.DOMNode -   DOM node\r\n * @param {String} eventArray.eventType -   Event type\r\n * @param {Function} eventArray.eventFunction -   Function\r\n * @param {Boolean} [eventArray.useCapture=false] -   useCapture\r\n */\r\nDOMEvents.prototype.remove = function (eventArray) {\r\n    // TODO IMPLEMENT\r\n    // TODO не уверен что этот метод необходим. если надо часто убирать какието обработчики, то лучше поставить обработчки на родителя\r\n    console.warn(\"TODO IMPLEMENT\");\r\n};\r\n\r\n/**\r\n * Remove all dom events registered with this instance (added by method add)\r\n * @example\r\n * //look at add method as first part of this code\r\n * DOMEventsInstance.removeAll();\r\n */\r\nDOMEvents.prototype.removeAll = function () {\r\n    this._DOMEventsStorage.forEach(function (val) {\r\n        val.DOMNode.removeEventListener(val.eventType, val.eventFunction, val.useCapture);\r\n    });\r\n    this._DOMEventsStorage = [];\r\n};\r\n\r\nmodule.exports = DOMEvents;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/DOMEvents.js","/**\r\n This is a collection of useful DOM tools.\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    /**\r\n     * Found first parent node with matched selector(s)\r\n     * @param {Object} elem - dom node\r\n     * @param {String|Array} selectors - selector or array of selectors\r\n     * @returns {Object| Boolean} - node or false\r\n     */\r\n\r\n    closest: function (elem, selectors) {\r\n        selectors = (typeof selectors === 'string') ? [selectors] : selectors;\r\n        var key;\r\n        var l = selectors.length;\r\n        var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\r\n\r\n        while (elem && elem.parentNode) {\r\n            for (key = 0; key < l; key++) {\r\n                if (matchesSelector.call(elem, selectors[key])) {\r\n                    return elem;\r\n                }\r\n            }\r\n            elem = elem.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Found first parent node with matched className(s).\r\n     * TODO Why this? Because old IE....\r\n     * TODO It's not good, because it's a copy of closest @see closest. Refactor\r\n     * @param {Object} elem - dom node\r\n     * @param {String|Array} className - className or array of classNames\r\n     * @returns {Object| Boolean} - node or false\r\n     */\r\n\r\n    closestByClassName: function (elem, className) {\r\n        className = (typeof className === 'string') ? [className] : className;\r\n        var key;\r\n        var l = className.length;\r\n\r\n        while (elem && elem.parentNode) {\r\n            for (key = 0; key < l; key++) {\r\n                var reg = new RegExp(\"(\\\\s|^)\" + className[key] + \"(\\\\s|$)\");\r\n                if (elem.className.match(reg)) {\r\n                    return elem;\r\n                }\r\n            }\r\n            elem = elem.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/domTools.js","\"use strict\";\r\n\r\n/**\r\n * @module tools\r\n * @namespace\r\n */\r\nvar tools = {\r\n    resolveKeyPath: function (path, obj, safe) {\r\n        return path.split('.').reduce(function (prev, curr) {\r\n            return !safe ? prev[curr] : (prev ? prev[curr] : void 0);\r\n        }, obj || self);\r\n    }\r\n};\r\n\r\nmodule.exports = tools;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/tools.js"],"sourceRoot":""}