{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sf.js","webpack:///webpack/bootstrap 83bed04e6b51e0584a66","webpack:///./src/core/Events.js","webpack:///./src/helpers/LikeFormData.js","webpack:///./src/sf-wrapper.js","webpack:///./src/core/Ajax.js","webpack:///./src/core/BaseDOMConstructor.js","webpack:///./src/core/DomMutations.js","webpack:///./src/core/InstancesController.js","webpack:///./src/core/ajax/baseActions.js","webpack:///./src/core/events/baseEvents.js","webpack:///./src/helpers/DOMEvents.js","webpack:///./src/helpers/domTools.js","webpack:///./src/helpers/tools.js","webpack:///./src/sf.js","webpack:///./src/shim/Object.assign.js","webpack:///./src/shim/console.js","webpack:///lib/es6-promise/utils.js","webpack:///lib/es6-promise/asap.js","webpack:///lib/es6-promise/then.js","webpack:///lib/es6-promise/promise/resolve.js","webpack:///lib/es6-promise/-internal.js","webpack:///lib/es6-promise/enumerator.js","webpack:///lib/es6-promise/promise/all.js","webpack:///lib/es6-promise/promise/race.js","webpack:///lib/es6-promise/promise/reject.js","webpack:///lib/es6-promise/promise.js","webpack:///lib/es6-promise/polyfill.js","webpack:///lib/es6-promise.js","webpack:///./~/process/browser.js","webpack:///(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","Events","allowedEvents","_storage","_allowedEvents","on","events","callback","replace","split","forEach","event","indexOf","console","warn","push","registerAction","off","alert","trigger","options","length","performAction","LikeFormData","data","boundary","toString","Math","random","substr","append","key","val","retString","iterate","partOfKey","delete","getAll","has","set","getContentTypeHeader","sf","sfWrapper","core","helpers","tools","Promise","instances","window","instancesController","InstancesController","domMutation","DomMutations","ajax","Ajax","csrfToken","headers","X-CSRF-Token","createModulePrototype","create","BaseDOMConstructor","registerInstanceType","bind","addInstance","removeInstance","getInstance","getInstances","closest","domTools","resolveKeyPath","currentRequests","assign","X-Requested-With","send","that","method","xhr","ajaxPromise","resolve","reject","url","error","oldIE","XDomainRequest","XMLHttpRequest","undefined","responseType","onprogress","e","onProgress","upload","addEventListener","lengthComputable","loaded","total","open","onload","ans","_parseJSON","status","response","onerror","Error","dataToSend","JSON","stringify","_setHeaders","isReturnXHRToo","header","setRequestHeader","responseText","ret","contentType","getResponseHeader","toLowerCase","parse","match","parseInt","statusText","init","node","grabOptions","optionsToGrab","currentOptionValue","currentOption","option","attributes","domAttr","processor","constructor","config","childList","characterData","characterDataOldValue","subtree","attributeOldValue","attributeFilter","observer","MutationObserver","onDomMutate","apply","arguments","observe","document","mutations","classArray","getClasses","classSelector","join","mutation","type","processMutationAttributes","processMutationChildList","addedNodes","removedNodes","currentClasses","target","className","oldClasses","oldValue","addedClasses","filter","removedClasses","addedRegisteredClasses","getInstanceNameByCssClass","nodesList","action","checkNode","classList","contains","nodeType","nodeName","querySelectorAll","stopObserve","disconnect","spiral","instancesConstructors","cssClasses","jsConstructors","addons","constructorFunction","cssClassName","isSkipInitialization","instanceName","nodes","getElementsByClassName","max","addInstanceType","InstanceConstructor","isAlreadyAdded","instanceConstructor","instance","instanceObj","die","splice","isReturnObject","typeArr","HTMLElement","getElementById","registerAddon","addon","addonType","addonName","getInstanceAddon","keys","cssClass","getInstanceConstructors","flash","timestamp","Date","now","sfFlashMessage","message","sessionStorage","setItem","setTimeout","redirect","delay","nodeWrapper","flashClass","createElement","add","innerHTML","body","appendChild","remove","timeout","removeItem","getItem","self","location","test","reload","close","DOMEvents","_DOMEventsStorage","eventArray","useCapture","DOMNode","eventType","eventFunction","removeAll","removeEventListener","elem","selectors","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","parentNode","closestByClassName","reg","RegExp","path","obj","safe","reduce","prev","curr","TypeError","output","index","source","nextKey","noop","methods","process","global","objectOrFunction","x","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useVertxTimer","vertxNext","flush","useSetTimeout","globalSetTimeout","len","queue","then","onFulfillment","onRejection","_arguments","parent","child","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","Constructor","promise","_resolve","selfFulfillment","cannotReturnOwn","getThen","GET_THEN_ERROR","tryThen","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","originalThen","originalResolve","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","failed","initializePromise","resolver","nextId","id","Enumerator","input","_instanceConstructor","isArray","_input","_remaining","Array","_enumerate","validationError","all","entries","race","_","_reject","needsResolver","needsNew","polyfill","local","Function","P","promiseToString","cast","_isArray","arg","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","MessageChannel","nextTick","iterations","createTextNode","channel","port1","onmessage","port2","postMessage","vertx","runOnLoop","runOnContext","substring","_eachEntry","entry","_then","_settledAt","_willSettleAt","state","enumerator","Resolve","Reject","_setScheduler","_setAsap","_asap","catch","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","run","Item","array","args","title","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","g","eval"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,aAAAH,GACA,gBAAAC,SACAA,QAAA,WAAAD,IAEAD,EAAA,WAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAE,EAAAF,EACAG,KACAV,WAUA,OANAK,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,KAGAT,EAAAD,QAvBA,GAAAQ,KA+DA,OAnCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAG,EAAA,SAAAK,GAA2C,MAAAA,IAG3CR,EAAAS,EAAA,SAAAf,EAAAgB,EAAAC,GACAX,EAAAY,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,gBACAC,cACAC,IAAAN,KAMAX,EAAAkB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAAyB,SAC3B,WAAiC,MAAAzB,GAEjC,OADAK,GAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAS,EAAAC,GAAsD,MAAAT,QAAAU,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,IAGAzB,IAAA0B,EAAA,MDgBM,SAAU/B,EAAQD,EAASM,GAEjC,YElEA,IAAI2B,GAAS,SAAUC,GACnB9B,KAAK+B,YACL/B,KAAKgC,eAAiBF,EAY1BD,GAAOJ,UAAUQ,GAAK,SAAUC,EAAQC,GACrBD,EAAOE,QAAQ,UAAW,KAAKC,MAAM,KAC3CC,QAAQ,SAAUC,GACvB,GAAIvC,KAAKgC,gBAAkBhC,KAAKgC,eAAeQ,QAAQD,MAAY,EAE/D,WADAE,SAAQC,KAAK,6DAA8DH,EAG1EvC,MAAK+B,SAASL,eAAeQ,KAC9BlC,KAAK+B,SAASQ,OAElBvC,KAAK+B,SAASQ,GAAOI,KAAKR,IAC3BnC,OASP6B,EAAOJ,UAAUmB,eAAiBf,EAAOJ,UAAUQ,GAQnDJ,EAAOJ,UAAUoB,IAAM,SAAUN,EAAOJ,GACpCW,MAAM,sDAaVjB,EAAOJ,UAAUsB,QAAU,SAAUR,EAAOS,GACxC,GAAIhD,KAAKgC,gBAAkBhC,KAAKgC,eAAeQ,QAAQD,MAAY,EAE/D,WADAE,SAAQC,KAAK,4DAA6DH,EAG9E,IAAIvC,KAAK+B,SAASL,eAAea,GAC7B,IAAK,GAAInB,GAAI,EAAGd,EAAIN,KAAK+B,SAASQ,GAAOU,OAAQ7B,EAAId,EAAGc,IACpDpB,KAAK+B,SAASQ,GAAOnB,GAAG4B,IAYpCnB,EAAOJ,UAAUyB,cAAgBrB,EAAOJ,UAAUsB,QAElDlD,EAAOD,QAAUiC,GFyFX,SAAUhC,EAAQD,EAASM,GAEjC,YGxIA,IAAIiD,GAAe,SAAUC,EAAMC,GAC/BrD,KAAKoD,QACDA,IAC6C,oBAAzCrC,OAAOU,UAAU6B,SAAS/C,KAAK6C,GAC/BX,QAAQC,KAAK,8FAA+FU,GAE5GpD,KAAKoD,KAAOA,GAGpBpD,KAAKqD,SAAYA,EAAYA,EAAY,kBAAoBE,KAAKC,SAASF,WAAWG,OAAO,GAmBjGN,GAAa1B,UAAUiC,OAAS,SAAUC,EAAKC,GAG3C5D,KAAKoD,KAAKO,GAAOC,GAiBrBT,EAAa1B,UAAU6B,SAAW,WAC9B,GAAIO,GAAY,GACZR,EAAWrD,KAAKqD,SAChBS,EAAU,SAAUV,EAAMW,GAC1B,IAAK,GAAIJ,KAAOP,GACRA,EAAK1B,eAAeiC,IAA8B,SAAdP,EAAKO,KAChB,gBAAdP,GAAKO,GACZG,EAAQV,EAAKO,GAA6B,IAArBI,EAAUd,OAAgBU,EAAOI,EAAY,IAAMJ,EAAM,KAE9EE,GAAa,KAAOR,EACd,6CAAqE,IAArBU,EAAUd,OAAgBU,EAAOI,EAAY,IAAMJ,EAAM,KACzG,WAAaP,EAAKO,GAAO,QAa/C,OARyB,gBAAd3D,MAAKoD,OACZpD,KAAKoD,MACDA,KAAMpD,KAAKoD,OAGnBU,EAAQ9D,KAAKoD,KAAM,IAEnBS,GAAa,KAAO7D,KAAKqD,SAAW,UASxCF,EAAa1B,UAAUuC,OAAS,SAAUL,GACtC,aAAc3D,MAAKoD,KAAKO,IAQ5BR,EAAa1B,UAAUN,IAAM,SAAUwC,GACnC,MAAO3D,MAAKoD,KAAKO,IAOrBR,EAAa1B,UAAUwC,OAAS,WAC5B,MAAOjE,MAAKoD,MAQhBD,EAAa1B,UAAUyC,IAAM,SAAUP,GACnC,MAAO3D,MAAKoD,KAAK1B,eAAeiC,IAUpCR,EAAa1B,UAAU0C,IAAM,SAAUR,EAAKC,GACxC5D,KAAKoD,KAAKO,GAAOC,GAarBT,EAAa1B,UAAU2C,qBAAuB,WAC1C,MAAO,gDAAkDpE,KAAKqD,UAGlExD,EAAOD,QAAUuD,GH4LX,SAAUtD,EAAQD,EAASM,GAEjC,YI/WA,IAAImE,GAAKnE,EAAQ,IAEboE,GACAC,KAAMF,EAAGE,KACTC,QAASH,EAAGG,QACZC,MAAOJ,EAAGI,MAOd,IAHAvE,EAAQ,IACRA,EAAQ,IAEc,kBAAXwE,GACP,GAAIA,GAAUxE,EAAQ,IAAewE,OAGpCJ,GAAU5C,eAAe,aAAY4C,EAAUtB,SAAW2B,eAC1DL,EAAUtB,QAAQtB,eAAe,eAAc4C,EAAUtB,QAAQ2B,cAGlEC,SAAWA,OAAOlD,eAAe,QACjCkD,OAAOP,GAAKC,GAGhBA,EAAUO,oBAAsB,GAAIP,GAAUC,KAAKO,oBAAoBT,GACvEC,EAAUS,YAAc,GAAIT,GAAUC,KAAKS,aAAaV,EAAUO,qBAGlEP,EAAUpC,OAAS,GAAIoC,GAAUC,KAAK1C,OACtC3B,EAAQ,GAA+BoE,EAAUpC,QAGjDoC,EAAUW,KAAO,GAAIX,GAAUC,KAAKW,KAAKN,QAAUA,OAAOO,WAEtDC,SACIC,eAAgBT,OAAOO,YAE3B,MAEJjF,EAAQ,GAA8BoE,GAGtCA,EAAUgB,sBAAwB,WAC9B,MAAOvE,QAAOwE,OAAOjB,EAAUC,KAAKiB,mBAAmB/D,YAG3D6C,EAAUmB,qBAAuBnB,EAAUO,oBAAoBY,qBAAqBC,KAAKpB,EAAUO,qBACnGP,EAAUqB,YAAcrB,EAAUO,oBAAoBc,YAAYD,KAAKpB,EAAUO,qBACjFP,EAAUsB,eAAiBtB,EAAUO,oBAAoBe,eAAeF,KAAKpB,EAAUO,qBACvFP,EAAUuB,YAAcvB,EAAUO,oBAAoBgB,YAAYH,KAAKpB,EAAUO,qBACjFP,EAAUwB,aAAexB,EAAUO,oBAAoBiB,aAAaJ,KAAKpB,EAAUO,qBAEnFP,EAAUyB,QAAU1B,EAAGG,QAAQwB,SAASD,QACxCzB,EAAU2B,eAAiB5B,EAAGI,MAAMwB,eAEpCpG,EAAOD,QAAU0E,GJ4XX,SAAUzE,EAAQD,EAASM,GAEjC,YKxbA,IAAI2B,GAAS3B,EAAQ,GACjBiD,EAAejD,EAAQ,GAUvBgF,EAAO,SAAUlC,GACjBhD,KAAKkG,gBAAkB,EACvBlG,KAAKkC,OAAS,GAAIL,IAAQ,aAAc,SAEpCmB,GAAWA,EAAQoC,UACnBpF,KAAKoF,QAAUrE,OAAOoF,OAAOnG,KAAKoF,QAASpC,EAAQoC,UAS3DF,GAAKzD,UAAU2D,SACXgB,mBAAoB,kBAiBxBlB,EAAKzD,UAAU4E,KAAO,SAAUrD,GAC5B,GAAIsD,GAAOtG,IAGU,QAAjBgD,EAAQI,MAAkC,SAAjBJ,EAAQI,MAAoC,cAAjBJ,EAAQI,OAC5DJ,EAAQI,KAAO,MAEdJ,EAAQuD,SACTvD,EAAQuD,OAAS,QAGrBvD,EAAQoC,QAAUpC,EAAQoC,QAAUrE,OAAOoF,OAAOnD,EAAQoC,QAASpF,KAAKoF,QAASpC,EAAQoC,SAAWrE,OAAOoF,UAAWnG,KAAKoF,QAC3H,IAAIoB,GACAC,EAAc,GAAI/B,SAAQ,SAAUgC,EAASC,GACxC3D,EAAQ4D,MACTnE,QAAQoE,MAAM,0BACdF,EAAO,2BAEXL,EAAKJ,iBAEL,IAAIY,KAEmB,oBAAXlC,SACLA,OAAOmC,gBAAmBnC,OAAOoC,gBAAwDC,aAAlCD,iBAAiBE,cAC/C,IAAxBN,IAAIpE,QAAQ,SAEhBgE,EAAM,GAAIO,gBAEVD,KAGAN,EAAIW,WAAa,SAAUC,GAEvBpE,EAAQqE,YAAcrE,EAAQqE,WAAWD,MAG7CZ,EAAM,GAAIQ,gBACNhE,EAAQqE,YACRb,EAAIc,OAAOC,iBAAiB,WAAY,SAAUhF,GAC1CA,EAAMiF,kBACNxE,EAAQqE,WAAW9E,EAAMkF,OAAQlF,EAAMmF,aAMvDlB,EAAImB,KAAK3E,EAAQuD,OAAQvD,EAAQ4D,KAEjCJ,EAAIoB,OAAS,WACTtB,EAAKJ,iBACL,IAAI2B,GAAMvB,EAAKwB,WAAWtB,EAEtBqB,GAAIE,OACAF,EAAIE,OAAS,KAAOF,EAAIE,OAAS,IACjCrB,EAAQmB,GACDA,EAAIE,OAAS,KAAOF,EAAIE,OAAS,IACxCpB,EAAOkB,IAEPpF,QAAQoE,MAAM,+BAAgCgB,EAAIE,QAClDpB,EAAOkB,IAEJf,EACPJ,EAAQmB,GAERlB,EAAOkB,GAEX7E,EAAQgF,SAAWH,EACnBvB,EAAKpE,OAAOa,QAAQ,OAAQC,IAGhCwD,EAAIyB,QAAU,WACV3B,EAAKJ,kBACLS,EAAOuB,MAAM,iBAAkB1B,IAGnCF,EAAKpE,OAAOa,QAAQ,aAAcC,EAElC,IAAImF,EACiB,QAAjBnF,EAAQI,KACH0D,EASDqB,EAAa,SAAWC,KAAKC,UAAUrF,EAAQI,OAR3CJ,EAAQI,KAAKE,WAAWd,QAAQ,eAAiB,EACjD2F,EAAanF,EAAQI,MAErB+E,EAAa,GAAIhF,GAAaH,EAAQI,MACtCJ,EAAQoC,QAAQ,gBAAkB+C,EAAW/D,wBAEjDkC,EAAKgC,YAAY9B,EAAKxD,EAAQoC,UAKlC+C,EAAa,IAgBjB,KACI3B,EAAIH,KAAK8B,GACX,MAAOf,GAELZ,EAAIH,KAAK8B,EAAW7E,YAGxB,MAAOkD,IAGX,OAAIxD,GAAQuF,gBACA9B,EAAaD,GAElBC,GAQXvB,EAAKzD,UAAU6G,YAAc,SAAU9B,EAAKpB,GACxC,IAAI,GAAIoD,KAAUpD,GACXA,EAAQ1D,eAAe8G,IACtBhC,EAAIiC,iBAAiBD,EAAQpD,EAAQoD,KAWjDtD,EAAKzD,UAAUqG,WAAa,SAAUtB,GAC7BA,EAAIwB,WACLxB,EAAIwB,SAAWxB,EAAIkC,aAGvB,IAAIC,MACAC,IAMJ,IAJIpC,EAAIqC,oBACJD,EAAcpC,EAAIqC,kBAAkB,iBAGnCD,GACgC,qBAA9BA,EAAYE,eACkB,cAA9BF,EAAYE,eACkB,kBAA9BF,EAAYE,cAQfH,GAAOvF,KAAMoD,EAAIwB,cAPjB,KACIW,EAAMP,KAAKW,MAAMvC,EAAIwB,UACvB,MAAOZ,GACL3E,QAAQoE,MAAM,cAAeL,EAAIwB,UACjCW,GAAOvF,KAAMoD,EAAIwB,UAqBzB,MAfKW,GAAIZ,SACLY,EAAIZ,OAASvB,EAAIuB,QAGK,gBAAfY,GAAIZ,QAAuD,IAAhCY,EAAIZ,OAAOvF,QAAQ,UAAkBmG,EAAIZ,OAAOiB,MAAM,eACxFL,EAAIZ,OAASkB,SAASN,EAAIZ,OAAOiB,MAAM,aAAa,KAGnDL,EAAIO,aACLP,EAAIO,WAAa1C,EAAI0C,YAErB1C,EAAIuB,QAAUvB,EAAIuB,QAAUY,EAAIZ,QAChCtF,QAAQC,KAAK,0DAA2D8D,EAAIuB,OAAQY,EAAIZ,QAGrFY,GAGX9I,EAAOD,QAAUsF,GLwcX,SAAUrF,EAAQD,EAASM,GAEjC,YMlqBA,IAAIsF,GAAqB,YAQzBA,GAAmB/D,UAAU0H,KAAO,SAAU9E,EAAI+E,EAAMpG,GAEpDhD,KAAKqE,GAAKA,EACVrE,KAAKoJ,KAAOA,EAIZpJ,KAAKgD,QAAUjC,OAAOoF,OAAOnG,KAAKqJ,YAAYD,GAAOpG,IAqFzDwC,EAAmB/D,UAAU6H,iBAO7B9D,EAAmB/D,UAAU4H,YAAc,SAAUD,GACjD,GACIG,GACAC,EAFAxG,IAGJ,KAAI,GAAIyG,KAAUzJ,MAAKsJ,cAChBtJ,KAAKsJ,cAAc5H,eAAe+H,KACjCF,EAAqB,KACjBvJ,KAAKsJ,cAAc5H,eAAe+H,KAClCD,EAAgBxJ,KAAKsJ,cAAcG,GAC/BD,EAAc9H,eAAe,WAC7B6H,EAAqBC,EAAc9I,OAGnCV,KAAKqE,GAAGrB,QAAQ2B,UAAU3E,KAAKY,OAASZ,KAAKqE,GAAGrB,QAAQ2B,UAAU3E,KAAKY,MAAMc,eAAe+H,KAC5FF,EAAqBvJ,KAAKqE,GAAGrB,QAAQ2B,UAAU3E,KAAKY,MAAM6I,IAG1DD,EAAc9H,eAAe,YAAc0H,EAAKM,WAAWhI,eAAe8H,EAAcG,WACxFJ,EAAqBH,EAAKM,WAAWF,EAAcG,SAASjJ,OAG5D8I,EAAc9H,eAAe,eAC7B6H,EAAqBC,EAAcI,UAAUrJ,KAAKP,KAAMoJ,EAAMG,EAAoBC,IAG3D,OAAvBD,IACAvG,EAAQyG,GAAUF,IAKlC,OAAOvG,IAGXnD,EAAOD,QAAU4F,GN2rBX,SAAU3F,EAAQD,EAASM,GAEjC,YOj1BA,IAAI8E,GAAe,SAAUH,GACzB,IAAKA,EAED,WADApC,SAAQoE,MAAM,+GAGlB,KAAK7G,KAAK6J,YAEN,WADApH,SAAQoE,MAAM,6DAGlB7G,MAAK6E,oBAAsBA,CAC3B,IAAIiF,IACIJ,cACAK,aACAC,iBACAC,yBACAC,WACAC,qBACAC,iBAAkB,UAEtB9D,EAAOtG,IAEXA,MAAKqK,SAAW,GAAIC,kBAAiB,WAEjChE,EAAKiE,YAAYC,MAAMlE,EAAMmE,aAEjCzK,KAAKqK,SAASK,QAAQC,SAAUb,GAQpC9E,GAAavD,UAAU8I,YAAc,SAAUK,GAC3C,GAAIC,GAAa7K,KAAK6E,oBAAoBiG,aACtCC,EAAgB,IAAMF,EAAWG,KAAK,KAC1C,OAA6B,KAAzBD,EAAc9H,SAGlB2H,EAAUtI,QAAQ,SAAU2I,GACxB,OAAQA,EAASC,MACb,IAAK,aACDlL,KAAKmL,0BAA0BF,EAAUJ,EACzC,MAEJ,KAAK,gBAED,KAEJ,KAAK,YACD7K,KAAKoL,yBAAyBH,EAASI,WAAY,cAAeN,EAAeF,GACjF7K,KAAKoL,yBAAyBH,EAASK,aAAc,iBAAkBP,EAAeF,EACtF,MAEJ,KAAK,UACDpI,QAAQoE,MAAM,2CAEvB7G,WAKPgF,EAAavD,UAAU0J,0BAA4B,SAAUF,EAAUJ,GACnE,GAAIvE,GAAOtG,KACPuL,EAAiBN,EAASO,OAAOC,UAAUpJ,MAAM,KACjDqJ,EAAcT,EAASU,SAAYV,EAASU,SAAStJ,MAAM,QAC3DuJ,EAAeL,EAAeM,OAAO,SAAUjI,GAC/C,MAAQ8H,GAAWlJ,QAAQoB,MAAU,IAErCkI,EAAiBJ,EAAWG,OAAO,SAAUjI,GAC7C,MAAQ2H,GAAe/I,QAAQoB,MAAU,IAEzCmI,EAAyBH,EAAaC,OAAO,SAAUjI,GACvD,MAAQiH,GAAWrI,QAAQoB,MAAU,GAEVkI,GAAeD,OAAO,SAAUjI,GAC3D,MAAQiH,GAAWrI,QAAQoB,MAAU,IAEhBtB,QAAQ,SAAUsB,GACvC0C,EAAKzB,oBAAoBe,eAAeU,EAAKzB,oBAAoBmH,0BAA0BpI,GAAMqH,EAASO,UAE9GO,EAAuBzJ,QAAQ,SAAUsB,GACrC0C,EAAKzB,oBAAoBc,YAAYW,EAAKzB,oBAAoBmH,0BAA0BpI,GAAMqH,EAASO,WAU/GxG,EAAavD,UAAU2J,yBAA2B,SAAUa,EAAWC,EAAQnB,EAAeF,GAO1F,QAASsB,GAAU/C,GACfyB,EAAWvI,QAAQ,SAAUmJ,GACrBrC,EAAKgD,UAAUC,SAASZ,IACxBnF,EAAKzB,oBAAoBqH,GAAQ5F,EAAKzB,oBAAoBmH,0BAA0BP,GAAYrC,KAT5G,GAAI9C,GAAOtG,QAcRsC,QAAQ/B,KAAK0L,EAAW,SAAUrI,GACjC,MAAqB,KAAjBA,EAAI0I,UAAmC,WAAjB1I,EAAI2I,UAA0C,SAAjB3I,EAAI2I,WAG3DJ,EAAUvI,MACPtB,QAAQ/B,KAAKqD,EAAI4I,iBAAiBzB,GAAgBoB,UAQ7DnH,EAAavD,UAAUgL,YAAc,WACjCzM,KAAKqK,SAASqC,cAGlB7M,EAAOD,QAAUoF,GPs2BX,SAAUnF,EAAQD,EAASM,GAEjC,YQt+BA,IAAI4E,GAAsB,SAAU6H,GAEhC,GADA3M,KAAK2M,OAASA,GACT3M,KAAK6J,YAEN,WADApH,SAAQoE,MAAM,2EAGlB7G,MAAK+B,UACD6K,uBACIC,cACAC,mBAEJC,UACApI,cAeRG,GAAoBrD,UAAUgE,qBAAuB,SAAUuH,EAAqBC,EAAcC,GAC9F,GAAIC,GAAeH,EAAoBvL,UAAUb,IAMjD,IAJKuM,GACD1K,QAAQoE,MAAM,mDAGd7G,KAAK+B,SAAS6K,sBAAsBE,eAAepL,eAAeyL,GAElE,WADA1K,SAAQoE,MAAM,6DAA8DsG,EAmBhF,IAfIF,IACAjN,KAAK+B,SAAS6K,sBAAsBC,WAAWI,GAAgBE,GAGnEnN,KAAK+B,SAAS6K,sBAAsBE,eAAeK,GAAgBH,EAUnEhN,KAAK+B,SAAS4C,UAAUwI,OACnBD,EAED,IAAK,GADDE,GAAQzC,SAAS0C,uBAAuBJ,GACnC5M,EAAI,EAAGiN,EAAMF,EAAMnK,OAAQ5C,EAAIiN,EAAKjN,IACzCL,KAAK2F,YAAYwH,EAAcC,EAAM/M,KAajDyE,EAAoBrD,UAAU8L,gBAAkB,SAAU9B,EAAWuB,EAAqBE,GAEtF,MADAzK,SAAQC,KAAK,0EACN1C,KAAKyF,qBAAqBuH,EAAqBE,IAW1DpI,EAAoBrD,UAAUkE,YAAc,SAAUwH,EAAc/D,EAAMpG,GACtE,GAAIwK,GAAsBxN,KAAK+B,SAAS6K,sBAAsBE,eAAeK,GACzEM,EAAiBzN,KAAK6F,YAAYsH,EAAc/D,EAEpD,KAAKsE,qBAAuBD,EACxB,QAGJ,IAAIE,GAAW,GAAIH,GAAoBxN,KAAK2M,OAAQvD,EAAMpG,EAQ1D,OAPAhD,MAAK+B,SAAS4C,UAAUwI,GAAcxK,MAClCyG,KAAQA,EACRuE,SAAYA,IAKTA,GASX7I,EAAoBrD,UAAUmE,eAAiB,SAAUuH,EAAc/D,GACnE,GACIzF,GADAiK,EAAc5N,KAAK6F,YAAYsH,EAAc/D,KAGjD,SAAKwE,IAGLA,EAAYD,SAASE,MACrBlK,EAAM3D,KAAK+B,SAAS4C,UAAUwI,GAAc3K,QAAQoL,GAChDjK,KAAS,GACT3D,KAAK+B,SAAS4C,UAAUwI,GAAcW,OAAOnK,EAAK,QAY1DmB,EAAoBrD,UAAUoE,YAAc,SAAUsH,EAAc/D,EAAM2E,GAGtE,GAAIC,GAAUhO,KAAK+B,SAAS4C,UAAUwI,GAClCxE,IACJ,KAAKqF,EACD,QAGJ,MADA5E,EAAQA,YAAgB6E,aAAe7E,EAAOuB,SAASuD,eAAe9E,IAElE,QAEJ,KAAK,GAAIzF,GAAM,EAAGrD,EAAI0N,EAAQ/K,OAAQU,EAAMrD,EAAGqD,IAC3C,GAAIqK,EAAQrK,GAAKyF,OAASA,EAAM,CAC5BT,EAAOoF,EAAkBC,EAAQrK,GAAOqK,EAAQrK,GAAKgK,QACrD,OAGR,MAAOhF,IAQX7D,EAAoBrD,UAAUqE,aAAe,SAAUqH,GACnD,MAAOnN,MAAK+B,SAAS4C,UAAUwI,QAWnCrI,EAAoBrD,UAAU0M,cAAgB,SAAUC,EAAOjB,EAAckB,EAAWC,GAOpF,GANKtO,KAAK+B,SAASgL,OAAOrL,eAAeyL,KACrCnN,KAAK+B,SAASgL,OAAOI,OAEpBnN,KAAK+B,SAASgL,OAAOI,GAAczL,eAAe2M,KACnDrO,KAAK+B,SAASgL,OAAOI,GAAckB,OAEnCrO,KAAK+B,SAASgL,OAAOI,GAAckB,GAAW3M,eAAe4M,GAE7D,WADA7L,SAAQoE,MAAM,kFAAmFyH,EAAWD,EAAWlB,EAG3HnN,MAAK+B,SAASgL,OAAOI,GAAckB,GAAWC,GAAaF,GAU/DtJ,EAAoBrD,UAAU8M,iBAAmB,SAAUpB,EAAckB,EAAWC,GAChF,SAAItO,KAAK+B,SAASgL,OAAOrL,eAAeyL,IAChCnN,KAAK+B,SAASgL,OAAOI,GAAczL,eAAe2M,IAClDrO,KAAK+B,SAASgL,OAAOI,GAAckB,GAAW3M,eAAe4M,KAG9DtO,KAAK+B,SAASgL,OAAOI,GAAckB,GAAWC,IAQzDxJ,EAAoBrD,UAAUqJ,WAAa,WACvC,MAAO/J,QAAOyN,KAAKxO,KAAK+B,SAAS6K,sBAAsBC,aAQ3D/H,EAAoBrD,UAAUuK,0BAA4B,SAAUyC,GAChE,MAAOzO,MAAK+B,SAAS6K,sBAAsBC,WAAW4B,IAO1D3J,EAAoBrD,UAAUiN,wBAA0B,SAAU9N,KAIlEf,EAAOD,QAAUkF,GRk/BX,SAAUjF,EAAQD,EAASM,GAEjC,YSjtCAL,GAAOD,QAAU,SAAUyE,GACvBA,EAAGY,KAAK/C,OAAOD,GAAG,OAAQ,SAAUe,GAChC,GAAIgF,GAAWhF,EAAQgF,QACvB,IAAIA,EAAStG,eAAe,UACxB,GAA+B,gBAApBsG,GAASkE,OAChB7H,EAAGnC,OAAOa,QAAQiF,EAASkE,YACxB,IAA+B,gBAApBlE,GAASkE,OAAqB,CAC5C,GAAIsC,GAAOzN,OAAOyN,KAAKxG,EAASkE,OAChC,IAAIsC,EAAKhM,QAAQ,YAAc,EAAG,CAC9B,GAAImM,GAAQ3G,EAASkE,OAATyC,MACRC,EAAYC,KAAKC,MACjBC,IAEoC,iBAA7B/G,GAASkE,OAATyC,OACPI,EAAiBJ,EACjBI,EAAeH,UAAYA,GAE3BG,GACIC,QAASL,EACTC,UAAWA,GAInBK,eAAeC,QAAQ,iBAAkB9G,KAAKC,UAAU0G,IAGxDP,EAAKhM,QAAQ,eAAiB,EAC9B2M,WAAW,WACP9K,EAAGnC,OAAOa,QAAQ,WAAYiF,EAASkE,OAATkD,SAA6BpM,IACnC,GAAxBgF,EAASkE,OAAOmD,OACbb,EAAKhM,QAAQ,WAAa,GACjC2M,WAAW,WACP9K,EAAGnC,OAAOa,QAAQiF,EAASkE,OAAOtL,KAAMoH,EAASkE,OAAOtF,OACxDoB,EAASkE,OAAOmD,OAAS,OAoBjC5M,SAAQoE,MAAM,wCAAyCmB,EAASkE,UAK3E,SAAU6C,GACP,GAAKA,EAAL,CAEA,GAEI3F,GACAkG,EACAC,EAJAP,EAAU5G,KAAKW,MAAMgG,EACTF,MAAKC,MAKLE,EAAQJ,UAAY,MAGhCW,EADiB,UAAjBP,EAAQ9D,MAAqC,YAAjB8D,EAAQ9D,KACvB,QACW,SAAjB8D,EAAQ9D,MAAoB8D,EAAQ9D,MAAyB,WAAjB8D,EAAQ9D,KAG9C,SAFA,OAKjB9B,EAAOuB,SAAS6E,cAAc,OAC9BF,EAAc3E,SAAS6E,cAAc,OACrCF,EAAYlD,UAAUqD,IAAI,iBAC1BrG,EAAKgD,UAAUqD,IAAI,QAASF,GAC5BnG,EAAKsG,UAAYV,EAAQA,QACzBrE,SAASgF,KAAKC,YAAYN,GAC1BA,EAAYM,YAAYxG,GAExB+F,WAAW,WACPG,EAAYlD,UAAUqD,IAAI,SAC3B,GAEHN,WAAW,WACPG,EAAYlD,UAAUyD,OAAO,SAC9Bb,EAAQc,SAAW,KAEtBb,eAAec,WAAW,qBAC5Bd,eAAee,QAAQ,qBTmuCvB,SAAUnQ,EAAQD,GU30CxBC,EAAOD,QAAU,SAAUsC,GACvBA,EAAOD,GAAG,WAAY,SAAUM,GAC5B,GAAIqE,GAAgD,oBAA1C7F,OAAOU,UAAU6B,SAAS/C,KAAKgC,GAA+BA,EAAQA,EAAMqE,GAEtFqJ,MAAKC,SAAS,qBAAqBC,KAAKvJ,GAAO,OAAS,YAAcA,IAG1E1E,EAAOD,GAAG,SAAU,WAChBiO,SAASE,WAGblO,EAAOD,GAAG,UAAW,WACjBC,EAAOa,QAAQ,YAGnBb,EAAOD,GAAG,QAAS,WACfgO,KAAKI,YVm1CP,SAAUxQ,EAAQD,EAASM,GAEjC,YW71CA,IAAIoQ,GAAY,WAWZtQ,KAAKuQ,qBA4BTD,GAAU7O,UAAUgO,IAAM,SAAUe,GACW,mBAAvCzP,OAAOU,UAAU6B,SAAS/C,WAC1BiQ,GAAcA,IAElBA,EAAWlO,QAAQ,SAAUsB,GACzBA,EAAI6M,aAAgB7M,EAAI6M,WACxB7M,EAAI8M,QAAQnJ,iBAAiB3D,EAAI+M,UAAW/M,EAAIgN,cAAehN,EAAI6M,YACnEzQ,KAAKuQ,kBAAkB5N,KAAKiB,IAC7B5D,OAWPsQ,EAAU7O,UAAUoO,OAAS,SAAUW,GAGnC/N,QAAQC,KAAK,mBASjB4N,EAAU7O,UAAUoP,UAAY,WAC5B7Q,KAAKuQ,kBAAkBjO,QAAQ,SAAUsB,GACrCA,EAAI8M,QAAQI,oBAAoBlN,EAAI+M,UAAW/M,EAAIgN,cAAehN,EAAI6M,cAE1EzQ,KAAKuQ,sBAGT1Q,EAAOD,QAAU0Q,GX22CX,SAAUzQ,EAAQD,GY57CxBC,EAAOD,SASHmG,QAAS,SAAUgL,EAAMC,GACrBA,EAAkC,gBAAdA,IAA2BA,GAAaA,CAK5D,KAJA,GAAIrN,GACArD,EAAI0Q,EAAU/N,OACdgO,EAAkBF,EAAKG,SAAWH,EAAKI,uBAAyBJ,EAAKK,oBAAsBL,EAAKM,kBAE7FN,GAAQA,EAAKO,YAAY,CAC5B,IAAK3N,EAAM,EAAGA,EAAMrD,EAAGqD,IACnB,GAAIsN,EAAgB1Q,KAAKwQ,EAAMC,EAAUrN,IACrC,MAAOoN,EAGfA,GAAOA,EAAKO,WAEhB,UAWJC,mBAAoB,SAAUR,EAAMtF,GAChCA,EAAkC,gBAAdA,IAA2BA,GAAaA,CAI5D,KAHA,GAAI9H,GACArD,EAAImL,EAAUxI,OAEX8N,GAAQA,EAAKO,YAAY,CAC5B,IAAK3N,EAAM,EAAGA,EAAMrD,EAAGqD,IAAO,CAC1B,GAAI6N,GAAM,GAAIC,QAAO,UAAYhG,EAAU9H,GAAO,UAClD,IAAIoN,EAAKtF,UAAUzC,MAAMwI,GACrB,MAAOT,GAGfA,EAAOA,EAAKO,WAEhB,YZw8CF,SAAUzR,EAAQD,EAASM,GAEjC,Yax/CA,IAAIuE,IACAwB,eAAgB,SAAUyL,EAAMC,EAAKC,GACjC,MAAOF,GAAKrP,MAAM,KAAKwP,OAAO,SAAUC,EAAMC,GAC1C,MAAQH,GAAqBE,EAAOA,EAAKC,GAAQ,OAAlCD,EAAKC,IACrBJ,GAAO1B,OAIlBpQ,GAAOD,QAAU6E,GbogDX,SAAU5E,EAAQD,EAASM,GclhDjC,GAAIqE,IACAW,KAAMhF,EAAQ,GACdsF,mBAAoBtF,EAAQ,GAC5B8E,aAAc9E,EAAQ,GACtB2B,OAAQ3B,EAAQ,GAChB4E,oBAAqB5E,EAAQ,IAG7BsE,GACA8L,UAAWpQ,EAAQ,GACnB8F,SAAU9F,EAAQ,IAClBiD,aAAcjD,EAAQ,GACtBuE,MAAOvE,EAAQ,KAGfmE,GACAE,KAAMA,EACNC,QAASA,EACTC,MAAOD,EAAQC,MAGnB5E,GAAOD,QAAUyE,GdwhDX,SAAUxE,EAAQD,GeziDI,kBAAjBmB,QAAOoF,QACd,WACIpF,OAAOoF,OAAS,SAAUqF,GACtB,YACA,IAAevE,SAAXuE,GAAmC,OAAXA,EACxB,KAAM,IAAIwG,WAAU,6CAIxB,KAAK,GADDC,GAASlR,OAAOyK,GACX0G,EAAQ,EAAGA,EAAQzH,UAAUxH,OAAQiP,IAAS,CAEnD,GAAIC,GAAS1H,UAAUyH,EACvB,IAAejL,SAAXkL,GAAmC,OAAXA,EACxB,IAAK,GAAIC,KAAWD,GACZA,EAAOzQ,eAAe0Q,KACtBH,EAAOG,GAAWD,EAAOC,IAKzC,MAAOH,QfujDb,SAAUpS,EAAQD,IgB5kDvB,WAaG,IAZA,GAAI2G,GACA8L,EAAO,aAEPC,GACI,SAAU,QAAS,QAAS,QAAS,MAAO,SAAU,QACtD,YAAa,QAAS,iBAAkB,WAAY,OAAQ,MAC5D,eAAgB,UAAW,aAAc,QAAS,OAAQ,UAC1D,YAAa,QAAS,QAE1BrP,EAASqP,EAAQrP,OACjBR,EAAWmC,OAAOnC,QAAUmC,OAAOnC,YAEhCQ,KACHsD,EAAS+L,EAAQrP,GAGZR,EAAQ8D,KACT9D,EAAQ8D,GAAU8L,OhBklDxB,SAAUxS,EAAQD,EAASM,aAEIqS,EAASC;;;;;;;CAQ7C,SAAUA,EAAQ7S,GACPE,EAAOD,QAGX,WAAe,YiB/mDvB,SAAS6S,GAAiBC,GACxB,MAAoB,kBAANA,IAAiC,gBAANA,IAAwB,OAANA,EAG7D,QAASC,GAAWD,GAClB,MAAoB,kBAANA,GCehB,QAASE,GAAaC,GACpBC,EAAoBD,EAGtB,QAASE,GAAQC,GACfC,EAAOD,EAqBT,QAASE,KACP,MAAO,YACLC,EAAUC,IAwBd,QAASC,KAGP,GAAIC,GAAmBnE,UACvB,OAAO,YACL,MAAOmE,GAAiBF,EAAO,IAKnC,QAASA,KACP,IAAK,GAAI/S,GAAI,EAAGA,EAAIkT,EAAKlT,GAAK,GAAG,EAChBmT,EAAMnT,IACXmT,EAAMnT,EAAI,IAIpBmT,EAAMnT,GAAK4G,OACXuM,EAAMnT,EAAI,GAAK4G,MAGjBsM,GAAM,EC7FR,QAASE,GAAKC,EAAeC,GAC3B,GAAIC,GAAanJ,UAEboJ,EAAS7T,KAET8T,EAAQ,GAAI9T,MAAK6J,YAAYwI,EAEPpL,UAAtB6M,EAAMC,KACRC,EAAYF,EAGd,IAAIG,GAASJ,EAAOI,MAapB,OAXIA,GACF,WACE,GAAI9R,GAAWyR,EAAWK,EAAS,EACnChB,GAAK,WACH,MAAOiB,GAAeD,EAAQH,EAAO3R,EAAU0R,EAAOM,cAI1DC,EAAUP,EAAQC,EAAOJ,EAAeC,GAGnCG,ECMT,QAASpN,GAAQnF,GAEf,GAAI8S,GAAcrU,IAElB,IAAIuB,GAA4B,gBAAXA,IAAuBA,EAAOsI,cAAgBwK,EACjE,MAAO9S,EAGT,IAAI+S,GAAU,GAAID,GAAYhC,EAE9B,OADAkC,GAASD,EAAS/S,GACX+S,EClCT,QAASjC,MAQT,QAASmC,KACP,MAAO,IAAIxC,WAAU,4CAGvB,QAASyC,KACP,MAAO,IAAIzC,WAAU,wDAGvB,QAAS0C,GAAQJ,GACf,IACE,MAAOA,GAAQb,KACf,MAAO5M,GAEP,MADA8N,IAAe9N,MAAQA,EAChB8N,IAIX,QAASC,GAAQnB,EAAM/S,EAAOmU,EAAoBC,GAChD,IACErB,EAAKlT,KAAKG,EAAOmU,EAAoBC,GACrC,MAAO1N,GACP,MAAOA,IAIX,QAAS2N,GAAsBT,EAASU,EAAUvB,GAChDR,EAAK,SAAUqB,GACb,GAAIW,MACApO,EAAQ+N,EAAQnB,EAAMuB,EAAU,SAAUtU,GACxCuU,IAGJA,KACID,IAAatU,EACfgG,EAAQ4N,EAAS5T,GAEjBwU,EAAQZ,EAAS5T,KAElB,SAAUyU,GACPF,IAGJA,KAEAtO,EAAO2N,EAASa,KACf,YAAcb,EAAQc,QAAU,sBAE9BH,GAAUpO,IACboO,KACAtO,EAAO2N,EAASzN,KAEjByN,GAGL,QAASe,GAAkBf,EAASU,GAC9BA,EAASf,SAAWqB,GACtBJ,EAAQZ,EAASU,EAASb,SACjBa,EAASf,SAAWsB,GAC7B5O,EAAO2N,EAASU,EAASb,SAEzBC,EAAUY,EAAU/N,OAAW,SAAUvG,GACvC,MAAOgG,GAAQ4N,EAAS5T,IACvB,SAAUyU,GACX,MAAOxO,GAAO2N,EAASa,KAK7B,QAASK,GAAoBlB,EAASmB,EAAehC,GAC/CgC,EAAc5L,cAAgByK,EAAQzK,aAAe4J,IAASiC,GAAgBD,EAAc5L,YAAYnD,UAAYiP,EACtHN,EAAkBf,EAASmB,GAEvBhC,IAASkB,GACXhO,EAAO2N,EAASK,GAAe9N,OACbI,SAATwM,EACTyB,EAAQZ,EAASmB,GACR9C,EAAWc,GACpBsB,EAAsBT,EAASmB,EAAehC,GAE9CyB,EAAQZ,EAASmB,GAKvB,QAAS/O,GAAQ4N,EAAS5T,GACpB4T,IAAY5T,EACdiG,EAAO2N,EAASE,KACP/B,EAAiB/R,GAC1B8U,EAAoBlB,EAAS5T,EAAOgU,EAAQhU,IAE5CwU,EAAQZ,EAAS5T,GAIrB,QAASkV,GAAiBtB,GACpBA,EAAQuB,UACVvB,EAAQuB,SAASvB,EAAQH,SAG3B2B,EAAQxB,GAGV,QAASY,GAAQZ,EAAS5T,GACpB4T,EAAQL,SAAW8B,KAIvBzB,EAAQH,QAAUzT,EAClB4T,EAAQL,OAASqB,GAEmB,IAAhChB,EAAQ0B,aAAa/S,QACvBgQ,EAAK6C,EAASxB,IAIlB,QAAS3N,GAAO2N,EAASa,GACnBb,EAAQL,SAAW8B,KAGvBzB,EAAQL,OAASsB,GACjBjB,EAAQH,QAAUgB,EAElBlC,EAAK2C,EAAkBtB,IAGzB,QAASF,GAAUP,EAAQC,EAAOJ,EAAeC,GAC/C,GAAIqC,GAAenC,EAAOmC,aACtB/S,EAAS+S,EAAa/S,MAE1B4Q,GAAOgC,SAAW,KAElBG,EAAa/S,GAAU6Q,EACvBkC,EAAa/S,EAASqS,IAAa5B,EACnCsC,EAAa/S,EAASsS,IAAY5B,EAEnB,IAAX1Q,GAAgB4Q,EAAOI,QACzBhB,EAAK6C,EAASjC,GAIlB,QAASiC,GAAQxB,GACf,GAAI2B,GAAc3B,EAAQ0B,aACtBE,EAAU5B,EAAQL,MAEtB,IAA2B,IAAvBgC,EAAYhT,OAAhB,CAQA,IAAK,GAJD6Q,GAAQ7M,OACR9E,EAAW8E,OACXkP,EAAS7B,EAAQH,QAEZ9T,EAAI,EAAGA,EAAI4V,EAAYhT,OAAQ5C,GAAK,EAC3CyT,EAAQmC,EAAY5V,GACpB8B,EAAW8T,EAAY5V,EAAI6V,GAEvBpC,EACFI,EAAegC,EAASpC,EAAO3R,EAAUgU,GAEzChU,EAASgU,EAIb7B,GAAQ0B,aAAa/S,OAAS,GAGhC,QAASmT,KACPpW,KAAK6G,MAAQ,KAKf,QAASwP,GAASlU,EAAUgU,GAC1B,IACE,MAAOhU,GAASgU,GAChB,MAAO/O,GAEP,MADAkP,IAAgBzP,MAAQO,EACjBkP,IAIX,QAASpC,GAAegC,EAAS5B,EAASnS,EAAUgU,GAClD,GAAII,GAAc5D,EAAWxQ,GACzBzB,EAAQuG,OACRJ,EAAQI,OACRuP,EAAYvP,OACZwP,EAASxP,MAEb,IAAIsP,GAWF,GAVA7V,EAAQ2V,EAASlU,EAAUgU,GAEvBzV,IAAU4V,IACZG,KACA5P,EAAQnG,EAAMmG,MACdnG,EAAQ,MAER8V,KAGElC,IAAY5T,EAEd,WADAiG,GAAO2N,EAASG,SAIlB/T,GAAQyV,EACRK,IAGElC,GAAQL,SAAW8B,KAEZQ,GAAeC,EACtB9P,EAAQ4N,EAAS5T,GACR+V,EACT9P,EAAO2N,EAASzN,GACPqP,IAAYZ,GACrBJ,EAAQZ,EAAS5T,GACRwV,IAAYX,IACrB5O,EAAO2N,EAAS5T,IAItB,QAASgW,GAAkBpC,EAASqC,GAClC,IACEA,EAAS,SAAwBjW,GAC/BgG,EAAQ4N,EAAS5T,IAChB,SAAuByU,GACxBxO,EAAO2N,EAASa,KAElB,MAAO/N,GACPT,EAAO2N,EAASlN,IAKpB,QAASwP,KACP,MAAOC,MAGT,QAAS7C,GAAYM,GACnBA,EAAQP,IAAc8C,KACtBvC,EAAQL,OAAShN,OACjBqN,EAAQH,QAAUlN,OAClBqN,EAAQ0B,gBCzPV,QAASc,GAAWzC,EAAa0C,GAC/B/W,KAAKgX,qBAAuB3C,EAC5BrU,KAAKsU,QAAU,GAAID,GAAYhC,GAE1BrS,KAAKsU,QAAQP,KAChBC,EAAYhU,KAAKsU,SAGf2C,EAAQF,IACV/W,KAAKkX,OAASH,EACd/W,KAAKiD,OAAS8T,EAAM9T,OACpBjD,KAAKmX,WAAaJ,EAAM9T,OAExBjD,KAAKmU,QAAU,GAAIiD,OAAMpX,KAAKiD,QAEV,IAAhBjD,KAAKiD,OACPiS,EAAQlV,KAAKsU,QAAStU,KAAKmU,UAE3BnU,KAAKiD,OAASjD,KAAKiD,QAAU,EAC7BjD,KAAKqX,aACmB,IAApBrX,KAAKmX,YACPjC,EAAQlV,KAAKsU,QAAStU,KAAKmU,WAI/BxN,EAAO3G,KAAKsU,QAASgD,KAIzB,QAASA,KACP,MAAO,IAAIpP,OAAM,2CCSnB,QAASqP,GAAIC,GACX,MAAO,IAAIV,GAAW9W,KAAMwX,GAASlD,QCiBvC,QAASmD,GAAKD,GAEZ,GAAInD,GAAcrU,IAElB,OAKS,IAAIqU,GALR4C,EAAQO,GAKY,SAAU9Q,EAASC,GAExC,IAAK,GADD1D,GAASuU,EAAQvU,OACZ5C,EAAI,EAAGA,EAAI4C,EAAQ5C,IAC1BgU,EAAY3N,QAAQ8Q,EAAQnX,IAAIoT,KAAK/M,EAASC,IAP3B,SAAU+Q,EAAG/Q,GAClC,MAAOA,GAAO,GAAIqL,WAAU,sCCrClC,QAASrL,GAAOwO,GAEd,GAAId,GAAcrU,KACdsU,EAAU,GAAID,GAAYhC,EAE9B,OADAsF,GAAQrD,EAASa,GACVb,EC5BT,QAASsD,KACP,KAAM,IAAI5F,WAAU,sFAGtB,QAAS6F,KACP,KAAM,IAAI7F,WAAU,yHA0GtB,QAAStN,GAAQiS,GACf3W,KAAK+T,IAAc6C,IACnB5W,KAAKmU,QAAUnU,KAAKiU,OAAShN,OAC7BjH,KAAKgW,gBAED3D,IAASsE,IACS,kBAAbA,IAA2BiB,IAClC5X,eAAgB0E,GAAUgS,EAAkB1W,KAAM2W,GAAYkB,KCjIlE,QAASC,KACL,GAAIC,GAAQ9Q,MAEZ,IAAsB,SAAXuL,EACPuF,EAAQvF,MACL,IAAoB,mBAATvC,MACd8H,EAAQ9H,SAER,KACI8H,EAAQC,SAAS,iBACnB,MAAO5Q,GACL,KAAM,IAAIc,OAAM,4EAIxB,GAAI+P,GAAIF,EAAMrT,OAEd,IAAIuT,EAAG,CACH,GAAIC,GAAkB,IACtB,KACIA,EAAkBnX,OAAOU,UAAU6B,SAAS/C,KAAK0X,EAAEvR,WACrD,MAAOU,IAIT,GAAwB,qBAApB8Q,IAA2CD,EAAEE,KAC7C,OAIRJ,EAAMrT,QAAUA,EVjBpB,GAAI0T,GAAWnR,MAMbmR,GALGhB,MAAMH,QAKEG,MAAMH,QAJN,SAAUvE,GACnB,MAA6C,mBAAtC3R,OAAOU,UAAU6B,SAAS/C,KAAKmS,GAM1C,IAAIuE,GAAUmB,ECvBV7E,EAAM,EACNJ,EAAYlM,OACZ6L,EAAoB7L,OAEpBgM,EAAO,SAAc9Q,EAAUkW,GACjC7E,EAAMD,GAAOpR,EACbqR,EAAMD,EAAM,GAAK8E,EAEL,IADZ9E,GAAO,KAKDT,EACFA,EAAkBM,GAElBkF,MAeFC,EAAkC,mBAAX3T,QAAyBA,OAASqC,OACzDuR,EAAgBD,MAChBE,EAA0BD,EAAclO,kBAAoBkO,EAAcE,uBAC1EC,EAAyB,mBAAT1I,OAA2C,SAAZsC,GAA2D,wBAA3BjP,SAAS/C,KAAKgS,GAG7FqG,EAAwC,mBAAtBC,oBAA8D,mBAAlBC,gBAA2D,mBAAnBC,gBA+CtGvF,EAAQ,GAAI4D,OAAM,KA0BlBkB,EAAgBrR,MAGlBqR,GADEK,EAxEJ,WAGE,MAAO,YACL,MAAOpG,GAAQyG,SAAS5F,OAsEjBqF,EA3DX,WACE,GAAIQ,GAAa,EACb5O,EAAW,GAAIoO,GAAwBrF,GACvChK,EAAOuB,SAASuO,eAAe,GAGnC,OAFA7O,GAASK,QAAQtB,GAAQY,mBAElB,WACLZ,EAAKhG,KAAO6V,IAAeA,EAAa,MAsDjCL,EAjDX,WACE,GAAIO,GAAU,GAAIJ,eAElB,OADAI,GAAQC,MAAMC,UAAYjG,EACnB,WACL,MAAO+F,GAAQG,MAAMC,YAAY,OA+CRtS,SAAlBsR,EAnBX,WACE,IACE,GACIiB,GAAQtZ,EAAE,GAEd,OADAiT,GAAYqG,EAAMC,WAAaD,EAAME,aAC9BxG,IACP,MAAO9L,GACP,MAAOiM,SAeOA,GGnHlB,IAAIU,IAAaxQ,KAAKC,SAASF,SAAS,IAAIqW,UAAU,IAKlD5D,GAAU,OACVT,GAAY,EACZC,GAAW,EAEXZ,GAAiB,GAAIyB,GA4KrBE,GAAkB,GAAIF,GA+DtBS,GAAK,CrB0+ET,OsBzrFAC,GAAWrV,UAAU4V,WAAa,WAIhC,IAAK,GAHDpU,GAASjD,KAAKiD,OACdiU,EAASlX,KAAKkX,OAET7W,EAAI,EAAGL,KAAKiU,SAAW8B,IAAW1V,EAAI4C,EAAQ5C,IACrDL,KAAK4Z,WAAW1C,EAAO7W,GAAIA,IAI/ByW,EAAWrV,UAAUmY,WAAa,SAAUC,EAAOxZ,GACjD,GAAII,GAAIT,KAAKgX,qBACTtQ,EAAUjG,EAAEiG,OAEhB,IAAIA,IAAYiP,EAAiB,CAC/B,GAAImE,GAAQpF,EAAQmF,EAEpB,IAAIC,IAAUpE,GAAgBmE,EAAM5F,SAAW8B,GAC7C/V,KAAK+Z,WAAWF,EAAM5F,OAAQ5T,EAAGwZ,EAAM1F,aAClC,IAAqB,kBAAV2F,GAChB9Z,KAAKmX,aACLnX,KAAKmU,QAAQ9T,GAAKwZ,MACb,IAAIpZ,IAAMiE,EAAS,CACxB,GAAI4P,GAAU,GAAI7T,GAAE4R,EACpBmD,GAAoBlB,EAASuF,EAAOC,GACpC9Z,KAAKga,cAAc1F,EAASjU,OAE5BL,MAAKga,cAAc,GAAIvZ,GAAE,SAAUiG,GACjC,MAAOA,GAAQmT,KACbxZ,OAGNL,MAAKga,cAActT,EAAQmT,GAAQxZ,IAIvCyW,EAAWrV,UAAUsY,WAAa,SAAUE,EAAO5Z,EAAGK,GACpD,GAAI4T,GAAUtU,KAAKsU,OAEfA,GAAQL,SAAW8B,KACrB/V,KAAKmX,aAED8C,IAAU1E,GACZ5O,EAAO2N,EAAS5T,GAEhBV,KAAKmU,QAAQ9T,GAAKK,GAIE,IAApBV,KAAKmX,YACPjC,EAAQZ,EAAStU,KAAKmU,UAI1B2C,EAAWrV,UAAUuY,cAAgB,SAAU1F,EAASjU,GACtD,GAAI6Z,GAAala,IAEjBoU,GAAUE,EAASrN,OAAW,SAAUvG,GACtC,MAAOwZ,GAAWH,WAAWzE,GAAWjV,EAAGK,IAC1C,SAAUyU,GACX,MAAO+E,GAAWH,WAAWxE,GAAUlV,EAAG8U,MIiC9CzQ,EAAQ6S,IAAMA,EACd7S,EAAQ+S,KAAOA,EACf/S,EAAQgC,QAAUyT,EAClBzV,EAAQiC,OAASyT,EACjB1V,EAAQ2V,cAAgBzH,EACxBlO,EAAQ4V,SAAWvH,EACnBrO,EAAQ6V,MAAQtH,EAEhBvO,EAAQjD,WACNoI,YAAanF,EAmMb+O,KAAMA,EA6BN+G,MAAS,SAAgB7G,GACvB,MAAO3T,MAAKyT,KAAK,KAAME,KE/W3BmE,IAEApT,EAAQoT,SAAWA,EACnBpT,EAAQA,QAAUA,E5B+tFXA,UAIsBnE,KAAKX,EAASM,EAAoB,IAAKA,EAAoB,MAIlF,SAAUL,EAAQD,G6BpuFxB,QAAA6a,KACA,SAAAvS,OAAA,mCAEA,QAAAwS,KACA,SAAAxS,OAAA,qCAsBA,QAAAyS,GAAAC,GACA,GAAAC,IAAA1L,WAEA,MAAAA,YAAAyL,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAA1L,WAEA,MADA0L,GAAA1L,WACAA,WAAAyL,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAAxT,GACL,IAEA,MAAAyT,GAAAta,KAAA,KAAAqa,EAAA,GACS,MAAAxT,GAET,MAAAyT,GAAAta,KAAAP,KAAA4a,EAAA,KAMA,QAAAE,GAAAC,GACA,GAAAC,IAAAC,aAEA,MAAAA,cAAAF,EAGA,KAAAC,IAAAN,IAAAM,IAAAC,aAEA,MADAD,GAAAC,aACAA,aAAAF,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAA3T,GACL,IAEA,MAAA4T,GAAAza,KAAA,KAAAwa,GACS,MAAA3T,GAGT,MAAA4T,GAAAza,KAAAP,KAAA+a,KAYA,QAAAG,KACAC,GAAAC,IAGAD,KACAC,EAAAnY,OACAuQ,EAAA4H,EAAAC,OAAA7H,GAEA8H,GAAA,EAEA9H,EAAAvQ,QACAsY,KAIA,QAAAA,KACA,IAAAJ,EAAA,CAGA,GAAArL,GAAA6K,EAAAO,EACAC,KAGA,KADA,GAAA5H,GAAAC,EAAAvQ,OACAsQ,GAAA,CAGA,IAFA6H,EAAA5H,EACAA,OACA8H,EAAA/H,GACA6H,GACAA,EAAAE,GAAAE,KAGAF,IAAA,EACA/H,EAAAC,EAAAvQ,OAEAmY,EAAA,KACAD,KACAL,EAAAhL,IAiBA,QAAA2L,GAAAb,EAAAc,GACA1b,KAAA4a,MACA5a,KAAA0b,QAYA,QAAArJ,MAhKA,GAOAwI,GACAG,EARAzI,EAAA1S,EAAAD,YAgBA,WACA,IAEAib,EADA,kBAAA1L,YACAA,WAEAsL,EAEK,MAAArT,GACLyT,EAAAJ,EAEA,IAEAO,EADA,kBAAAC,cACAA,aAEAP,EAEK,MAAAtT,GACL4T,EAAAN,KAuDA,IAEAU,GAFA5H,KACA2H,KAEAG,GAAA,CAyCA/I,GAAAyG,SAAA,SAAA4B,GACA,GAAAe,GAAA,GAAAvE,OAAA3M,UAAAxH,OAAA,EACA,IAAAwH,UAAAxH,OAAA,EACA,OAAA5C,GAAA,EAAuBA,EAAAoK,UAAAxH,OAAsB5C,IAC7Csb,EAAAtb,EAAA,GAAAoK,UAAApK,EAGAmT,GAAA7Q,KAAA,GAAA8Y,GAAAb,EAAAe,IACA,IAAAnI,EAAAvQ,QAAAkY,GACAR,EAAAY,IASAE,EAAAha,UAAA+Z,IAAA,WACAxb,KAAA4a,IAAApQ,MAAA,KAAAxK,KAAA0b,QAEAnJ,EAAAqJ,MAAA,UACArJ,EAAAsJ,WACAtJ,EAAAuJ,OACAvJ,EAAAwJ,QACAxJ,EAAAyJ,QAAA,GACAzJ,EAAA0J,YAIA1J,EAAAtQ,GAAAoQ,EACAE,EAAA2J,YAAA7J,EACAE,EAAA4J,KAAA9J,EACAE,EAAA1P,IAAAwP,EACAE,EAAA6J,eAAA/J,EACAE,EAAA8J,mBAAAhK,EACAE,EAAA+J,KAAAjK,EAEAE,EAAAgK,QAAA,SAAA3b,GACA,SAAAsH,OAAA,qCAGAqK,EAAAiK,IAAA,WAA2B,WAC3BjK,EAAAkK,MAAA,SAAAC,GACA,SAAAxU,OAAA,mCAEAqK,EAAAoK,MAAA,WAA4B,W7BsvFtB,SAAU9c,EAAQD,G8Bz6FxB,GAAAgd,EAGAA,GAAA,WACA,MAAA5c,QAGA,KAEA4c,KAAA5E,SAAA,qBAAA6E,MAAA,QACC,MAAAzV,GAED,gBAAAxC,UACAgY,EAAAhY,QAOA/E,EAAAD,QAAAgd,G9Bg7FM,SAAU/c,EAAQD,KAMlB,SAAUC,EAAQD,EAASM,GAEjCL,EAAOD,QAAUM,EAAoB","file":"sf.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"sf-core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sf-core\"] = factory();\n\telse\n\t\troot[\"sf-core\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"sf-core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sf-core\"] = factory();\n\telse\n\t\troot[\"sf-core\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 19);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Events system.\r\n * @param {Array} allowedEvents array of allowed events.\r\n * @constructs Events\r\n * @example\r\n * //allow to work with all events\r\n * var events = new Events();\r\n * events.on(\"myBestEvent\",function(e){console.log(e)});\r\n * @example\r\n * //Allow to serve only limited events\r\n *  var events = new Events([\"beforeSubmit\",\"onDataReady\"]);\r\n *  events.on(\"myBestEvent\",function(e){console.log(e)});//will not works\r\n *  events.on(\"beforeSubmit\",function(e){console.log(e)});//will work\r\n */\n\nvar Events = function (allowedEvents) {\n    this._storage = {};\n    this._allowedEvents = allowedEvents;\n};\n\n/**\r\n * Add event(s)\r\n * @param {String} events event or space separated event list\r\n * @param {Function} callback callback function\r\n * @example\r\n * var events = new Events();\r\n * events.on(\"myBestEvent myBestEvent2 myBestEvent3\",function(e){console.log(e)});\r\n * events.on(\"myBestEvent\",function(e){console.log(e)});\r\n */\nEvents.prototype.on = function (events, callback) {\n    var eventArr = events.replace(/\\s{2,}/g, \" \").split(\" \");\n    eventArr.forEach(function (event) {\n        if (this._allowedEvents && this._allowedEvents.indexOf(event) === -1) {\n            // event not inside allowed events\n            console.warn(\"Events. Try to register event %s, but event is not allowed\", event);\n            return;\n        }\n        if (!this._storage.hasOwnProperty(events)) {\n            this._storage[event] = [];\n        }\n        this._storage[event].push(callback);\n    }, this);\n};\n\n/**\r\n * Add action\r\n * @param {String} action\r\n * @param {Function} func\r\n * @deprecated  use \"on\" instead\r\n */\nEvents.prototype.registerAction = Events.prototype.on;\n\n/**\r\n * remove event\r\n * @param {String} event\r\n * @param {Function} callback\r\n */\nEvents.prototype.off = function (event, callback) {\n    alert(\"You try to remove action. This part is incomplete\");\n    // TODO\n};\n\n/**\r\n * Trigger event.\r\n * @param {String} event event name\r\n * @param {Object} [options] options to pass to the callback\r\n * @example\r\n * var events = new Events();\r\n * events.on(\"myBestEvent\",function(e){console.log(e.bestKey)});\r\n * events.trigger(\"myBestEvent\",{bestKey:42}); //will show in log\r\n */\nEvents.prototype.trigger = function (event, options) {\n    if (this._allowedEvents && this._allowedEvents.indexOf(event) === -1) {\n        // event not inside allowed events\n        console.warn(\"Events. Try to trigger event %s, but event is not allowed\", event);\n        return;\n    }\n    if (this._storage.hasOwnProperty(event)) {\n        for (var n = 0, l = this._storage[event].length; n < l; n++) {\n            this._storage[event][n](options);\n        }\n    }\n};\n\n/**\r\n * Perform action\r\n * @param {String} action\r\n * @param {Object} [actionParams] object with all action data from server\r\n * @param {Object} [options] ajax options\r\n * @deprecated use \"trigger\" instead\r\n */\nEvents.prototype.performAction = Events.prototype.trigger;\n\nmodule.exports = Events;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * This object try to be easy as FormData.\r\n * Please note this is not(!) a shim for Form data, because it's impossible (you should set headers for Ajax by hands)\r\n * It take object and can convert it string like FormData do. Then you can send this string by Ajax or do some other staff.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FormData\r\n * @param {Object} [data] object with data (supports nested objects)\r\n * @param {String} [boundary] boundary  for Form Data\r\n * @constructor\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"},\"testBoundary\");\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--testBoundary\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--testBoundary--\r\n * //\"\r\n *\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--SpiralFormData-4935309085994959\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--SpiralFormData-4935309085994959--\r\n * //\"\r\n *\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.append(\"key2\",\"val2\");\r\n * formData.toString();\r\n * // Returns:\r\n * //--SpiralFormData-988681384595111\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * //testValue\r\n * //--SpiralFormData-988681384595111\r\n * //Content-Disposition: form-data; name=key2\r\n * //\r\n * //val2\r\n * //--SpiralFormData-988681384595111--\r\n * //\"\r\n */\n\nvar LikeFormData = function (data, boundary) {\n    this.data = {};\n    if (data) {\n        if (Object.prototype.toString.call(data) !== \"[object Object]\") {\n            // non object/ Alert developer\n            console.warn(\"LikeFormData can't accept non Object. Please reefer to documentation. Problem parameter is:\", data);\n        } else {\n            this.data = data;\n        }\n    }\n    this.boundary = boundary ? boundary : \"SpiralFormData-\" + Math.random().toString().substr(2);\n\n    // if (!isOldIE) {\n    //    this.boundary = \"SpiralAjax-\" + Math.random().toString().substr(2);\n    //    //xhr.setRequestHeader(\"content-type\", \"multipart/form-data; charset=utf-8; boundary=\" + this.boundary);\n    // } else {\n    //    this.boundary = \"SpiralAjax-oldIE9876gsloiHGldowu\";\n    // }\n};\n\n/**\r\n * Append data to storage. Like standart FormData do.\r\n * @param {String} key\r\n * @param {String} val\r\n * @example\r\n * var formData = new FormData();\r\n * formData.append(\"key2\",\"val2\");\r\n */\nLikeFormData.prototype.append = function (key, val) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/FormData\n    // TODO ***Appends a new value**** onto an existing key inside a FormData object, or adds the key if it does not already exist.\n    this.data[key] = val;\n};\n\n/**\r\n * convert to string\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--SpiralFormData-4935309085994959\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--SpiralFormData-4935309085994959--\r\n * //\"\r\n * @return {string}\r\n */\nLikeFormData.prototype.toString = function () {\n    var retString = \"\";\n    var boundary = this.boundary;\n    var iterate = function (data, partOfKey) {\n        for (var key in data) {\n            if (data.hasOwnProperty(key) && typeof data[key] !== \"undefined\") {\n                if (typeof data[key] === \"object\") {\n                    iterate(data[key], partOfKey.length === 0 ? key : partOfKey + \"[\" + key + \"]\");\n                } else {\n                    retString += \"--\" + boundary + \"\\r\\nContent-Disposition: form-data; name=\" + (partOfKey.length === 0 ? key : partOfKey + \"[\" + key + \"]\") + \"\\r\\n\\r\\n\" + data[key] + \"\\r\\n\";\n                }\n            }\n        }\n    };\n    if (typeof this.data !== \"object\") {\n        this.data = {\n            data: this.data\n        };\n    }\n    iterate(this.data, \"\");\n\n    retString += \"--\" + this.boundary + \"--\\r\\n\";\n    return retString;\n};\n\n/**\r\n * The delete() method of the FormData interface deletes a key/value pair from a FormData object.\r\n * @param {string} key\r\n * @return {*}\r\n */\nLikeFormData.prototype.delete = function (key) {\n    return delete this.data[key];\n};\n\n/**\r\n *The get() method of the FormData interface returns the first value associated with a given key from within a FormData object.\r\n * @param {string} key\r\n * @return {*}\r\n */\nLikeFormData.prototype.get = function (key) {\n    return this.data[key];\n};\n\n/**\r\n * The getAll() method of the FormData interface returns the first value associated with a given key from within a FormData object.\r\n * @return {*}\r\n */\nLikeFormData.prototype.getAll = function () {\n    return this.data;\n};\n\n/**\r\n * The has() method of the FormData interface returns a boolean stating whether a FormData object contains a certain key/value pair.\r\n * @param {string} key\r\n * @return {*}\r\n */\nLikeFormData.prototype.has = function (key) {\n    return this.data.hasOwnProperty(key);\n};\n\n/**\r\n * The difference between set() and FormData.append is that if the specified header does already exist, set() will\r\n * overwrite the existing value with the new one, whereas FormData.append will append the new value onto the end of the\r\n * set of values.\r\n * @param {string} key\r\n * @param {*} val\r\n */\nLikeFormData.prototype.set = function (key, val) {\n    this.data[key] = val;\n};\n\n/**\r\n * Get content header to set for Ajax. Not a part of standart FormData object. But for sending Like FormData over Ajax you should know header.\r\n * @return {string}\r\n * @example\r\n * var formData = new LikeFormData();\r\n * formData.getContentTypeHeader(); //return \"multipart/form-data; charset=utf-8; boundary=SpiralFormData-988681384595111\"\r\n * @example\r\n * var formData = new LikeFormData({key:\"val2\"},\"testBoundary\");\r\n * formData.getContentTypeHeader(); //return \"multipart/form-data; charset=utf-8; boundary=testBoundary\"\r\n */\nLikeFormData.prototype.getContentTypeHeader = function () {\n    return \"multipart/form-data; charset=utf-8; boundary=\" + this.boundary;\n};\n\nmodule.exports = LikeFormData;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Provides a spiral-specific sf bundle\r\n * TODO: This wrapping looks very fishy, why we need it? Move to toolkit may be?\r\n */\n\nvar sf = __webpack_require__(12);\n\nvar sfWrapper = {\n    core: sf.core,\n    helpers: sf.helpers,\n    tools: sf.tools\n};\n\n// Add console shim for old IE\n__webpack_require__(14);\n__webpack_require__(13);\n\nif (typeof Promise != 'function') {\n    var Promise = __webpack_require__(15).Promise;\n}\n\nif (!sfWrapper.hasOwnProperty('options')) sfWrapper.options = { instances: {} };\nif (!sfWrapper.options.hasOwnProperty('instances')) sfWrapper.options.instances = {};\n\n// TODO delete this in future\nif (window && !window.hasOwnProperty(\"sf\")) {\n    // bind only if  window.sf is empty to avoid conflicts with other libs\n    window.sf = sfWrapper;\n}\n\nsfWrapper.instancesController = new sfWrapper.core.InstancesController(sf);\nsfWrapper.domMutation = new sfWrapper.core.DomMutations(sfWrapper.instancesController);\n\n// Events system\nsfWrapper.events = new sfWrapper.core.Events();\n__webpack_require__(8)(sfWrapper.events);\n\n// AJAX\nsfWrapper.ajax = new sfWrapper.core.Ajax(window && window.csrfToken ? {\n    // TODO move to spiral bindings\n    headers: {\n        \"X-CSRF-Token\": window.csrfToken\n    }\n} : null);\n\n__webpack_require__(7)(sfWrapper);\n\n// API\nsfWrapper.createModulePrototype = function () {\n    return Object.create(sfWrapper.core.BaseDOMConstructor.prototype);\n};\n\nsfWrapper.registerInstanceType = sfWrapper.instancesController.registerInstanceType.bind(sfWrapper.instancesController);\nsfWrapper.addInstance = sfWrapper.instancesController.addInstance.bind(sfWrapper.instancesController);\nsfWrapper.removeInstance = sfWrapper.instancesController.removeInstance.bind(sfWrapper.instancesController);\nsfWrapper.getInstance = sfWrapper.instancesController.getInstance.bind(sfWrapper.instancesController);\nsfWrapper.getInstances = sfWrapper.instancesController.getInstances.bind(sfWrapper.instancesController);\n\nsfWrapper.closest = sf.helpers.domTools.closest;\nsfWrapper.resolveKeyPath = sf.tools.resolveKeyPath;\n\nmodule.exports = sfWrapper;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// var tools = require(\"../helpers/tools\");\n\nvar Events = __webpack_require__(0);\nvar LikeFormData = __webpack_require__(1);\n\n/**\r\n * This is an Ajax transport.\r\n * Supports  XDomainRequest for old IE\r\n * @param {Object} [options]\r\n * @param {Object} [options.headers] Headers to add to the instance\r\n * @fires beforeSend event that will be performed before request is send. Event called with one parameter \"options\", that contains all variables for Ajax\r\n * @constructor\r\n */\nvar Ajax = function (options) {\n    this.currentRequests = 0;\n    this.events = new Events([\"beforeSend\", 'load']);\n\n    if (options && options.headers) {\n        this.headers = Object.assign(this.headers, options.headers);\n    }\n};\n\n/**\r\n * Default headers. You can overwrite it. Look at the event beforeSend\r\n * Please note that on XDomainRequest  we can't send any headers.\r\n * @type Object\r\n */\nAjax.prototype.headers = {\n    'X-Requested-With': 'XMLHttpRequest'\n};\n\n/**\r\n * Send ajax request to server\r\n * Will return promise or array with promise and XMLHttpRequest : {window.Promise|[window.Promise,XMLHttpRequest]}\r\n * @since 0.4.0\r\n * @param {Object} options object with options\r\n * @param {String} options.url url to send data\r\n * @param {Object|String} [options.data] data to send\r\n * @param {String} [options.method]\r\n * @param {Object} [options.headers] headers to add to the request\r\n * @param {Function} [options.onProgress] callback function on progress. Two callback options: current bytes sent,totalBytes\r\n * @param {Function} [options.isReturnXHRToo===false] should method return array instead of Promise. Some times is needed to control ajax (abort, etc).\r\n * If tree then  [window.Promise, XMLHttpRequest ] will be returned\r\n * @return {Promise|Array}\r\n */\nAjax.prototype.send = function (options) {\n    var that = this;\n\n    // TODO why we check here if data === null then reassign to null again?\n    if (options.data === null || options.data === void 0 || options.data === 'undefined') {\n        options.data = null;\n    }\n    if (!options.method) {\n        options.method = \"POST\";\n    }\n\n    options.headers = options.headers ? Object.assign(options.headers, this.headers, options.headers) : Object.assign({}, this.headers);\n    var xhr;\n    var ajaxPromise = new Promise(function (resolve, reject) {\n        // Return a new promise.\n        if (!options.url) {\n            console.error(\"You should provide url\");\n            reject(\"You should provide url\");\n        }\n        that.currentRequests++;\n\n        var oldIE = false;\n\n        if (typeof window !== 'undefined' && window.XDomainRequest && window.XMLHttpRequest && new XMLHttpRequest().responseType === undefined && url.indexOf(\"http\") === 0) {\n            // old IE CORS\n            // TODO maybe we should use XDomainRequest only for cross domain requests? But  Spiral for now works great with XDomainRequest (based on IEJSON)\n            xhr = new XDomainRequest();\n            // @see http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n            oldIE = true;\n            // @see http://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n\n            xhr.onprogress = function (e) {\n                // TODO adjust options\n                options.onProgress && options.onProgress(e);\n            };\n        } else {\n            xhr = new XMLHttpRequest();\n            if (options.onProgress) {\n                xhr.upload.addEventListener(\"progress\", function (event) {\n                    if (event.lengthComputable) {\n                        options.onProgress(event.loaded, event.total);\n                    }\n                }, false);\n            }\n        }\n\n        xhr.open(options.method, options.url);\n\n        xhr.onload = function () {\n            // On loaded\n            that.currentRequests--;\n            var ans = that._parseJSON(xhr);\n\n            if (ans.status) {\n                if (ans.status > 199 && ans.status < 300) {\n                    // 200-299\n                    resolve(ans);\n                } else if (ans.status > 399 && ans.status < 600) {\n                    // 400-599\n                    reject(ans);\n                } else {\n                    console.error(\"unknown status %d. Rejecting\", ans.status);\n                    reject(ans);\n                }\n            } else if (oldIE) {\n                resolve(ans); // OLD IE + downloading file is producing  no status.\n            } else {\n                reject(ans); // reject with the status text\n            }\n            options.response = ans;\n            that.events.trigger(\"load\", options); // for example - used to handle actions\n        };\n\n        xhr.onerror = function () {\n            // Handle network errors\n            that.currentRequests--;\n            reject(Error(\"Network Error\"), xhr);\n        };\n\n        that.events.trigger(\"beforeSend\", options); // you can modify \"options\" object inside event (like adding you headers,data,etc)\n\n        var dataToSend;\n        if (options.data !== null) {\n            // if data to send is not empty\n            if (!oldIE) {\n                if (options.data.toString().indexOf(\"FormData\") !== -1) {\n                    // if form data\n                    dataToSend = options.data;\n                } else {\n                    dataToSend = new LikeFormData(options.data);\n                    options.headers[\"content-type\"] = dataToSend.getContentTypeHeader();\n                }\n                that._setHeaders(xhr, options.headers);\n            } else {\n                dataToSend = \"IEJSON\" + JSON.stringify(options.data);\n            }\n        } else {\n            // else send empty data\n            dataToSend = null;\n        }\n\n        //        if (!oldIE) {\n        //            //xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        //            dataToSend = new spiral.LikeFormData(data, xhr, oldIE);\n        //        } else {\n        //            if (data !==null && data !== void 0 && data !== 'undefined'){\n        //                dataToSend = \"IEJSON\"+JSON.stringify(data);\n        //            } else {\n        //                 dataToSend =data;\n        //            }\n        //\n        //        }\n\n\n        try {\n            // working around FF bug\n            xhr.send(dataToSend); // Make the request\n        } catch (e) {\n            // console.error(\"error sending trying another method\");\n            xhr.send(dataToSend.toString());\n        }\n\n        return xhr;\n    });\n\n    if (options.isReturnXHRToo) {\n        // return xhr too\n        return [ajaxPromise, xhr];\n    }\n    return ajaxPromise;\n};\n\n/**\r\n * Iterate over headers object and call xhr.setRequestHeader\r\n * @param {XMLHttpRequest} xhr\r\n * @param {Object} headers object with headers to set\r\n */\nAjax.prototype._setHeaders = function (xhr, headers) {\n    for (var header in headers) {\n        if (headers.hasOwnProperty(header)) {\n            xhr.setRequestHeader(header, headers[header]);\n        }\n    }\n};\n\n/**\r\n * Try to parse and normalize answer\r\n * @param {XHR} xhr\r\n * @return {*}\r\n * @private\r\n */\nAjax.prototype._parseJSON = function (xhr) {\n    if (!xhr.response) {\n        xhr.response = xhr.responseText;\n    }\n\n    var ret = {};\n    var contentType = false;\n\n    if (xhr.getResponseHeader) {\n        contentType = xhr.getResponseHeader(\"Content-Type\");\n    }\n\n    if (!contentType || contentType.toLowerCase() === 'application/json' || contentType.toLowerCase() === 'text/json' || contentType.toLowerCase() === 'inode/symlink') {\n        // application/json or inode/symlink  (AmazonS3 bug? )\n        try {\n            ret = JSON.parse(xhr.response);\n        } catch (e) {\n            console.error(\"Not a JSON!\", xhr.response);\n            ret = { data: xhr.response };\n        }\n    } else {\n        ret = { data: xhr.response };\n    }\n\n    if (!ret.status) {\n        ret.status = xhr.status;\n    }\n    // Some servers can answer status in JSON as \"HTTP/1.1 200 OK\"  but we need a status number\n    if (typeof ret.status === 'string' && ret.status.indexOf(\"HTTP/\") === 0 && ret.status.match(/ (\\d\\d\\d)/)) {\n        ret.status = parseInt(ret.status.match(/ (\\d\\d\\d)/)[1]); // TODO check this code\n    }\n\n    if (!ret.statusText) {\n        ret.statusText = xhr.statusText;\n    }\n    if (xhr.status && xhr.status != ret.status) {\n        console.warn(\"Status from request %d, but response contains status %d\", xhr.status, ret.status);\n    }\n\n    return ret;\n};\n\nmodule.exports = Ajax;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * This a base constructor (class) for any DOM based instance.\r\n * This constructor just grab all node attributes and generates options. All processed options stored at this.options\r\n * @example\r\n * We have html like this:\r\n * <div data-test=\"testValue\" data-value=\"value123\">.....</div>\r\n * this.options will be:\r\n * {\r\n *  test:\"testValue\",\r\n *  value:\"value\"\r\n * }\r\n * Note: data-test and data-value should be described in attributesToGrab\r\n * @constructor\r\n */\n\nvar BaseDOMConstructor = function () {};\n/**\r\n * Init method. Call after construct instance\r\n * @param {Object} sf\r\n * @param {Object} node  DomNode of form\r\n * @param {Object} [options] all options to override default\r\n */\nBaseDOMConstructor.prototype.init = function (sf, node, options) {\n    // TODO data-spiral-JSON\n    this.sf = sf;\n    this.node = node;\n    // if (sf.options && sf.options.instances && sf.options.instances[this.name]) {\n    //    options = Object.assign(options || {}, sf.options.instances[this.name]);\n    // }\n    this.options = Object.assign(this.grabOptions(node), options);\n};\n\n/**\r\n * This is a options to generate.\r\n * You should provide processor or value.\r\n * @type {Object}\r\n * @property {Object} propertyKey - object of property\r\n * @property {String} propertyKey.value - default value to return\r\n * @property {String} [propertyKey.domAttr] - dom attribute to grab data\r\n * @property {Function} [propertyKey.processor] -  processor to process data before return\r\n * @property {Object}  ... - Another object of one property\r\n * @type {{}}\r\n *  @example\r\n * \"someAttribute\": {// key\r\n *      value: true, //default Value\r\n *      domAttr: \"data-some-attribute\", // attribute from node to grab\r\n *      processor: function (node,val,self) { //processor to process values before return\r\n *          //some calculations\r\n *      return someValue;\r\n *      }\r\n *  },\r\n *  \"anotherAttribute\":{...},\r\n *  \"...\"\r\n *\r\n *  @example\r\n *  //return node as value\r\n *  \"context\": {\r\n *      \"processor\": function (node,val,key) { //processor\r\n *          return node;\r\n *      }\r\n *  },\r\n *  \"Another-key\":{...},\r\n *  \"...\"\r\n * @example\r\n * //Grab attribute \"data-attribute\" as \"MyAttribute\" if attribute not provided return \"DefaultValue\"\r\n * // Dom node <div data-attribute=\"someValue\"></div>\r\n * \"MyAttribute\": {\r\n *      value: \"DefaultValue\",\r\n *      domAttr: \"data-attribute\"\r\n *  }\r\n *  //after processing we should have\r\n *  {\"MyAttribute\":\"someValue\"}\r\n *\r\n *  @example\r\n * //Grab attribute \"data-attribute\" as \"MyAttribute\" and return some value instead\r\n * //Dom node  <div data-attribute=\"someValue\"></div>\r\n * \"MyAttribute\": {\r\n *      domAttr: \"data-attribute\",\r\n *      processor: function (node,val,self) {\r\n *          return val+\"SomeCalculation\";\r\n *      }\r\n *  }\r\n *  //after processing we should have\r\n *  {\"MyAttribute\":\"someValueSomeCalculation\"}\r\n *\r\n * @example\r\n * //return function as value\r\n * processAnswer: {\r\n *      \"value\": function (options) {\r\n *         return \"someVal\";\r\n *      }\r\n *  //after processing we should have\r\n *  {\"processAnswer\":function (options) {\r\n *         return \"someVal\";\r\n *      }\r\n *   }\r\n *\r\n * @example\r\n * //return init time as value\r\n * initTime: {\r\n *      \"processor\": function (node,val,self) {\r\n *         return new Date().getTime;\r\n *      }\r\n *  //after processing we should have\r\n *  {\"initTime\":1429808977404}\r\n * @example\r\n * //return other value instead of real one\r\n * processAnswer: {\r\n *      \"processor\": function (node,val,self) {\r\n *         return \"someVal\";\r\n *      }\r\n *  //after processing we should have\r\n *  {\"processAnswer\":\"someVal\"}\r\n */\nBaseDOMConstructor.prototype.optionsToGrab = {};\n\n/**\r\n * Grab all options that described in optionsToGrab\r\n * @param {Object} node domNode\r\n * @return {Object}\r\n */\nBaseDOMConstructor.prototype.grabOptions = function (node) {\n    var options = {};\n    var currentOptionValue;\n    var currentOption;\n    for (var option in this.optionsToGrab) {\n        if (this.optionsToGrab.hasOwnProperty(option)) {\n            currentOptionValue = null;\n            if (this.optionsToGrab.hasOwnProperty(option)) {\n                // if this is own option\n                currentOption = this.optionsToGrab[option];\n                if (currentOption.hasOwnProperty(\"value\")) {\n                    // we have default option. Let's grab it for first\n                    currentOptionValue = currentOption.value;\n                }\n\n                if (this.sf.options.instances[this.name] && this.sf.options.instances[this.name].hasOwnProperty(option)) {\n                    currentOptionValue = this.sf.options.instances[this.name][option];\n                }\n\n                if (currentOption.hasOwnProperty(\"domAttr\") && node.attributes.hasOwnProperty(currentOption.domAttr)) {\n                    // we can grab the attribute of node\n                    currentOptionValue = node.attributes[currentOption.domAttr].value;\n                }\n\n                if (currentOption.hasOwnProperty(\"processor\")) {\n                    // we have processor. Let's execute it\n                    currentOptionValue = currentOption.processor.call(this, node, currentOptionValue, currentOption);\n                }\n\n                if (currentOptionValue !== null) {\n                    options[option] = currentOptionValue;\n                }\n            }\n        }\n    }\n    return options;\n};\n\nmodule.exports = BaseDOMConstructor;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * Dom mutation. Listening to the DOM and add or remove instances based on classes.\r\n * @param {Object} instancesController  spiral instancesController.\r\n * @param {Function} instancesController.getClasses  get all registered modules classes.\r\n * @param {Function} instancesController.addInstance  add instance method.\r\n * @param {Function} instancesController.removeInstance  remove instance method\r\n * @constructor\r\n */\n\nvar DomMutations = function (instancesController) {\n    if (!instancesController) {\n        console.error(\"You should provide instancesController  for DOM Mutation. Because DOM Mutation  should known all classes and\");\n        return;\n    }\n    if (!this.constructor) {\n        console.error(\"Please call DomMutations with new  - 'new DomMutations()' \");\n        return;\n    }\n    this.instancesController = instancesController;\n    var config = { // config for MutationObserver\n        attributes: true,\n        childList: true,\n        characterData: true,\n        characterDataOldValue: true,\n        subtree: true,\n        attributeOldValue: true,\n        attributeFilter: [\"class\"]\n    };\n    var that = this;\n\n    this.observer = new MutationObserver(function () {\n        // call function when dom mutated.\n        // eslint-disable-next-line\n        that.onDomMutate.apply(that, arguments);\n    });\n    this.observer.observe(document, config); // start observer\n};\n\n/**\r\n * When dom mutated this function id executed.\r\n * @param {Array} mutations array of mutations\r\n * @return {boolean}\r\n */\nDomMutations.prototype.onDomMutate = function (mutations) {\n    var classArray = this.instancesController.getClasses(); // get all registered classes\n    var classSelector = \".\" + classArray.join(\",.\"); // convert for querySelectorAll()\n    if (classSelector.length === 1) {\n        // if not registered any instanceTypes\n        return false;\n    }\n    mutations.forEach(function (mutation) {\n        // loop over mutation array\n        switch (mutation.type) {\n            case \"attributes\":\n                this.processMutationAttributes(mutation, classArray);\n                break;\n\n            case \"characterData\":\n\n                break;\n\n            case \"childList\":\n                this.processMutationChildList(mutation.addedNodes, \"addInstance\", classSelector, classArray);\n                this.processMutationChildList(mutation.removedNodes, \"removeInstance\", classSelector, classArray);\n                break;\n\n            case \"default\":\n                console.error(\"Something wrong. Contact tech support\");\n        }\n    }, this);\n    return true;\n};\n\nDomMutations.prototype.processMutationAttributes = function (mutation, classArray) {\n    var that = this;\n    var currentClasses = mutation.target.className.split(\" \");\n    var oldClasses = mutation.oldValue ? mutation.oldValue.split(\" \") : [];\n    var addedClasses = currentClasses.filter(function (val) {\n        return oldClasses.indexOf(val) === -1;\n    });\n    var removedClasses = oldClasses.filter(function (val) {\n        return currentClasses.indexOf(val) === -1;\n    });\n    var addedRegisteredClasses = addedClasses.filter(function (val) {\n        return classArray.indexOf(val) !== -1;\n    });\n    var removedRegisteredClasses = removedClasses.filter(function (val) {\n        return classArray.indexOf(val) !== -1;\n    });\n    removedRegisteredClasses.forEach(function (val) {\n        that.instancesController.removeInstance(that.instancesController.getInstanceNameByCssClass(val), mutation.target);\n    });\n    addedRegisteredClasses.forEach(function (val) {\n        that.instancesController.addInstance(that.instancesController.getInstanceNameByCssClass(val), mutation.target);\n    });\n};\n/**\r\n * Process mutation on ChildList\r\n * @param {NodeList} nodesList array with nodes\r\n * @param {String} action action to call (add or remove nodes)\r\n * @param {String} classSelector - string selector for querySelectorAll\r\n * @param {Array} classArray - array of all registered classes\r\n */\nDomMutations.prototype.processMutationChildList = function (nodesList, action, classSelector, classArray) {\n    var that = this;\n\n    /**\r\n     * Internal function for checking node class\r\n     * @param {Object} node dom node\r\n     */\n    function checkNode(node) {\n        classArray.forEach(function (className) {\n            // loop over registered classes\n            if (node.classList.contains(className)) {\n                // if class match try to add or remove instance for this node\n                that.instancesController[action](that.instancesController.getInstanceNameByCssClass(className), node);\n            }\n        });\n    }\n\n    [].forEach.call(nodesList, function (val) {\n        // loop over mutation nodes\n        if (val.nodeType !== 1 || val.nodeName === \"SCRIPT\" || val.nodeName === \"LINK\") {\n            // do not process other nodes then ELEMENT_NODE https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType also ignore SCRIPT and LINK tag\n            return false;\n        }\n        checkNode(val); // check mutation node\n        [].forEach.call(val.querySelectorAll(classSelector), checkNode); // query all nodes with required classes and check it\n        return true;\n    });\n};\n\n/**\r\n * Stop listening the dom changes\r\n */\nDomMutations.prototype.stopObserve = function () {\n    this.observer.disconnect();\n};\n\nmodule.exports = DomMutations;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Instance controller\r\n * @param {*} spiral\r\n * @constructor\r\n */\n\nvar InstancesController = function (spiral) {\n    this.spiral = spiral;\n    if (!this.constructor) {\n        console.error(\"Please call InstancesController with new  - 'new InstancesController()' \");\n        return;\n    }\n    this._storage = {\n        instancesConstructors: {\n            cssClasses: {},\n            jsConstructors: {}\n        },\n        addons: {},\n        instances: {}\n    };\n\n    // todo decide if we need this\n    // [\"onAddInstance\", \"onRemoveInstance\"]\n    // this.events = new spiral.modules.core.Events();\n};\n\n/**\r\n * Register new instance type\r\n * @param {Function} constructorFunction - constructor function of instance\r\n * @param {String} [cssClassName] - css class name of instance. If class not provided that it can't be automatically\r\n * controlled by DomMutation. But you still can use it from JS.\r\n * @param {Boolean} [isSkipInitialization=false]  - skip component initialization, just adding, no init nodes.\r\n */\nInstancesController.prototype.registerInstanceType = function (constructorFunction, cssClassName, isSkipInitialization) {\n    var instanceName = constructorFunction.prototype.name;\n\n    if (!instanceName) {\n        console.error(\"Instance constructor should have name inside it\");\n    }\n\n    if (this._storage.instancesConstructors.jsConstructors.hasOwnProperty(instanceName)) {\n        console.error(\"Instance Constructor for type '%s' already added. Skipping\", instanceName);\n        return;\n    }\n\n    if (cssClassName) {\n        // add link (cssClassName->instanceName)\n        this._storage.instancesConstructors.cssClasses[cssClassName] = instanceName;\n    }\n\n    this._storage.instancesConstructors.jsConstructors[instanceName] = constructorFunction;\n\n    // if (this._storage.instancesConstructors.hasOwnProperty(className)){\n    //    console.error(\"Instance Constructor for type %s already added. Skipping\",constructorFunction.prototype.name);\n    //    return;\n    // }\n    // this._storage.instancesConstructors[className] = {//init storage fields\n    //    \"typeName\": constructorFunction.prototype.name,\n    //    \"constructor\": constructorFunction\n    // };\n    this._storage.instances[instanceName] = [];\n    if (!isSkipInitialization) {\n        var nodes = document.getElementsByClassName(cssClassName); // init add nodes with this class\n        for (var i = 0, max = nodes.length; i < max; i++) {\n            this.addInstance(instanceName, nodes[i]);\n        }\n    }\n};\n\n/**\r\n * Old method to register instance type\r\n * @param {*} className\r\n * @param {*} constructorFunction\r\n * @param {*} isSkipInitialization\r\n * @return {*}\r\n * @deprecated\r\n */\nInstancesController.prototype.addInstanceType = function (className, constructorFunction, isSkipInitialization) {\n    console.warn(\"addInstanceType is deprecated. Please use registerInstanceType instead\");\n    return this.registerInstanceType(constructorFunction, isSkipInitialization);\n};\n\n/**\r\n * Add instance\r\n * @param {String} instanceName - name of instance\r\n * @param {Object} node - dom node\r\n * @param {Object} [options] all options for send to the constructor\r\n * @return {boolean}\r\n */\nInstancesController.prototype.addInstance = function (instanceName, node, options) {\n    var InstanceConstructor = this._storage.instancesConstructors.jsConstructors[instanceName];\n    var isAlreadyAdded = this.getInstance(instanceName, node);\n\n    if (!instanceConstructor || isAlreadyAdded) {\n        // if not found this type  or already added - return\n        return false;\n    }\n\n    var instance = new InstanceConstructor(this.spiral, node, options);\n    this._storage.instances[instanceName].push({ // add new instance of this type\n        \"node\": node,\n        \"instance\": instance\n    });\n\n    // this.events.trigger(\"onAddInstance\", instance);\n\n    return instance;\n};\n\n/**\r\n * Remove instance.\r\n * @param {String} instanceName - name of instance class\r\n * @param {Object|String} node - dom node ID\r\n * @return {boolean}\r\n */\nInstancesController.prototype.removeInstance = function (instanceName, node) {\n    var instanceObj = this.getInstance(instanceName, node, true);\n    var key;\n\n    if (!instanceObj) {\n        return false;\n    }\n    instanceObj.instance.die(); // avoid memory leak\n    key = this._storage.instances[instanceName].indexOf(instanceObj);\n    if (key !== -1) {\n        // remove key\n        this._storage.instances[instanceName].splice(key, 1);\n    }\n    return true;\n};\n\n/**\r\n * Get instance. Return instance object of this dom node\r\n * @param {String} instanceName - name of instance\r\n * @param {Object|String} node - dom node o dome node ID\r\n * @param {boolean} [isReturnObject] - return object or instance\r\n * @return {boolean}\r\n */\nInstancesController.prototype.getInstance = function (instanceName, node, isReturnObject) {\n    // TODO isReturnObject not needed. Refactor and remove\n\n    var typeArr = this._storage.instances[instanceName];\n    var ret = false;\n    if (!typeArr) {\n        return false;\n    }\n    node = node instanceof HTMLElement ? node : document.getElementById(node);\n    if (!node) {\n        return false;\n    }\n    for (var key = 0, l = typeArr.length; key < l; key++) {\n        // iterate storage and try to find instance\n        if (typeArr[key].node === node) {\n            ret = isReturnObject ? typeArr[key] : typeArr[key].instance;\n            break;\n        }\n    }\n    return ret;\n};\n\n/**\r\n * Get instances. Return array of instances objects\r\n * @param {String} instanceName - name of instance\r\n * @return {array|boolean}\r\n */\nInstancesController.prototype.getInstances = function (instanceName) {\n    return this._storage.instances[instanceName] || false;\n};\n\n/**\r\n * Register addon for instance\r\n * @param {Function|Object} addon\r\n * @param {String} instanceName name of instance to register addon\r\n * @param {String} addonType type of addon (message,fill,etc)\r\n * @param {String} addonName name of addon (spiral, bootstrap,etc)\r\n */\nInstancesController.prototype.registerAddon = function (addon, instanceName, addonType, addonName) {\n    if (!this._storage.addons.hasOwnProperty(instanceName)) {\n        this._storage.addons[instanceName] = {};\n    }\n    if (!this._storage.addons[instanceName].hasOwnProperty(addonType)) {\n        this._storage.addons[instanceName][addonType] = {};\n    }\n    if (this._storage.addons[instanceName][addonType].hasOwnProperty(addonName)) {\n        console.error(\"The %s addon type %s already registered for instance %s! Skipping registration.\", addonName, addonType, instanceName);\n        return;\n    }\n    this._storage.addons[instanceName][addonType][addonName] = addon;\n};\n\n/**\r\n * Get registered addon\r\n * @param {String} instanceName name of instance to register addon\r\n * @param {String} addonType type of addon (message,fill,etc)\r\n * @param {String} addonName name of addon (spiral, bootstrap,etc)\r\n * @return {*}\r\n */\nInstancesController.prototype.getInstanceAddon = function (instanceName, addonType, addonName) {\n    if (!this._storage.addons.hasOwnProperty(instanceName) || !this._storage.addons[instanceName].hasOwnProperty(addonType) || !this._storage.addons[instanceName][addonType].hasOwnProperty(addonName)) {\n        return false;\n    }\n    return this._storage.addons[instanceName][addonType][addonName];\n};\n\n/**\r\n * Get all registered classes\r\n * @return {Array}\r\n */\nInstancesController.prototype.getClasses = function () {\n    return Object.keys(this._storage.instancesConstructors.cssClasses);\n};\n\n/**\r\n * For given cssClass return name of instance\r\n * @param {String} cssClass\r\n * @return {*}\r\n */\nInstancesController.prototype.getInstanceNameByCssClass = function (cssClass) {\n    return this._storage.instancesConstructors.cssClasses[cssClass];\n};\n\n/**\r\n * Get constructor by name or class name\r\n * @param {*} name\r\n */\nInstancesController.prototype.getInstanceConstructors = function (name) {\n    // TODO\n};\n\nmodule.exports = InstancesController;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * This plugin adds ability to perform actions from the server.\r\n * @param {Object} sf\r\n * \"action\":\"reload\"\r\n * \"action\":{\"redirect\":\"/account\"}\r\n * \"action\":{\"redirect\":\"/account\",\"delay\":3000}\r\n * \"action\":{\"name\":\"redirect\",\"url\":\"/account\",\"delay\":3000}\r\n */\n\nmodule.exports = function (sf) {\n    sf.ajax.events.on('load', function (options) {\n        var response = options.response;\n        if (response.hasOwnProperty('action')) {\n            if (typeof response.action === 'string') {\n                // \"action\":\"reload\"\n                sf.events.trigger(response.action);\n            } else if (typeof response.action === 'object') {\n                var keys = Object.keys(response.action);\n                if (keys.indexOf('flash') !== -1) {\n                    var flash = response.action['flash'];\n                    var timestamp = Date.now();\n                    var sfFlashMessage = {};\n\n                    if (typeof response.action['flash'] === 'object') {\n                        sfFlashMessage = flash;\n                        sfFlashMessage.timestamp = timestamp;\n                    } else {\n                        sfFlashMessage = {\n                            message: flash,\n                            timestamp: timestamp\n                        };\n                    }\n\n                    sessionStorage.setItem('sfFlashMessage', JSON.stringify(sfFlashMessage));\n                }\n\n                if (keys.indexOf('redirect') !== -1) {\n                    setTimeout(function () {\n                        sf.events.trigger('redirect', response.action['redirect'], options);\n                    }, +response.action.delay | 0);\n                } else if (keys.indexOf('name') !== -1) {\n                    setTimeout(function () {\n                        sf.events.trigger(response.action.name, response.action.url);\n                    }, +response.action.delay || 0);\n                }\n\n                // if (keys.length === 1) {//\"action\":{\"redirect\":\"/account\"}\n                //    sf.events.trigger(keys[0], response.action[keys[0]], options);\n                // } else if (keys.length === 2 && response.action.delay) {//\"action\":{\"redirect\":\"/account\",\"delay\":3000}\n                //    setTimeout(function () {\n                //        var action = keys.filter(function (value) {\n                //            return value !== 'delay';\n                //        })[0];\n                //        sf.events.trigger(action, response.action[action], options);\n                //    }, +response.action.delay);\n                // } else if (keys.length > 1) {//\"action\":{\"name\":\"redirect\",\"url\":\"/account\",\"delay\":3000}\n                //    setTimeout(function () {\n                //        sf.events.trigger(response.action.name, response.action, options);\n                //    }, +response.action.delay || 0);\n                // } else {\n                //    console.error(\"Action from server. Object doesn't have keys. \", response.action);\n                // }\n            } else {\n                console.error(\"Action from server. Something wrong. \", response.action);\n            }\n        }\n    });\n\n    (function (sfFlashMessage) {\n        if (!sfFlashMessage) return;\n\n        var message = JSON.parse(sfFlashMessage);\n        var timestamp = Date.now();\n        var node;\n        var nodeWrapper;\n        var flashClass;\n\n        if (timestamp - message.timestamp > 10000) return;\n\n        if (message.type === 'debug' || message.type === 'success') {\n            flashClass = 'debug';\n        } else if (message.type === 'info' || !message.type || message.type === 'notice') {\n            flashClass = 'info';\n        } else {\n            flashClass = 'danger';\n        }\n\n        node = document.createElement('div');\n        nodeWrapper = document.createElement('div');\n        nodeWrapper.classList.add('flash-wrapper');\n        node.classList.add('flash', flashClass);\n        node.innerHTML = message.message;\n        document.body.appendChild(nodeWrapper);\n        nodeWrapper.appendChild(node);\n\n        setTimeout(function () {\n            nodeWrapper.classList.add('show');\n        }, 1);\n\n        setTimeout(function () {\n            nodeWrapper.classList.remove('show');\n        }, message.timeout || 5000);\n\n        sessionStorage.removeItem('sfFlashMessage');\n    })(sessionStorage.getItem('sfFlashMessage'));\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (events) {\n    events.on(\"redirect\", function (event) {\n        var url = Object.prototype.toString.call(event) === \"[object String]\" ? event : event.url;\n        // http://stackoverflow.com/questions/10687099/how-to-test-if-a-url-string-is-absolute-or-relative\n        self.location[/^(?:[a-z]+:)?\\/\\//i.test(url) ? 'href' : 'pathname'] = url;\n    });\n\n    events.on('reload', function () {\n        location.reload();\n    });\n\n    events.on('refresh', function () {\n        events.trigger('reload');\n    });\n\n    events.on('close', function () {\n        self.close();\n    });\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * Helper to manipulate DOM Events. It's a simple wrapper around \"addEventListener\" but it's store all functions and allow us to remove it all.\r\n * It's very helpful for die() method of instances\r\n * @TODO add to many nodes\r\n * @TODO new method like addEventListener  DOMEvents.on(node(s),event,callback,useCapture);\r\n * @constructor\r\n */\n\nvar DOMEvents = function () {\n    /**\r\n     * Internal storage for events\r\n     * @property {Array.<Object>} DOMEvents - dom events array\r\n     * @property {Object} DOMEvents.DOMNode -   DOM node\r\n     * @property {String} DOMEvents.eventType -   Event type\r\n     * @property {Function} DOMEvents.eventFunction -   Function\r\n     * @property {Boolean} DOMEvents.useCapture=false -   useCapture\r\n     * @property {Object} ... -   another object\r\n     * @private\r\n     */\n    this._DOMEventsStorage = [];\n};\n/**\r\n * Add event(s) to node(s).\r\n * @TODO add to many nodes\r\n * @param {Array.<Object>|Object} eventArray - event array or event itself\r\n * @param {Object} eventArray.DOMNode -   DOM node\r\n * @param {String} eventArray.eventType -   Event type\r\n * @param {Function} eventArray.eventFunction -   Function\r\n * @param {Boolean} [eventArray.useCapture=false] -   useCapture\r\n * @example\r\n * var DOMEventsInstance = new DOMEvents();\r\n * var eventOne = {\r\n *      DOMNode: document.getElementById(\"example\"),\r\n *      eventType: \"click\",\r\n *      eventFunction: function (e) {\r\n *          console.log(\"Hi there. Native  DOM events is:\",e);\r\n *      }\r\n * }\r\n *  var eventTwo = {\r\n *      DOMNode: document.getElementById(\"example2\"),\r\n *      eventType: \"mousedown\",\r\n *      eventFunction: function (e) {\r\n *          console.log(\"Hi there. mousedown event. Native  DOM events is:\",e);\r\n *      }\r\n * }\r\n *  DOMEventsInstance.add([eventOne,eventTwo]);\r\n */\nDOMEvents.prototype.add = function (eventArray) {\n    if (Object.prototype.toString.call([]) !== \"[object Array]\") {\n        eventArray = [eventArray];\n    }\n    eventArray.forEach(function (val) {\n        val.useCapture = !!val.useCapture;\n        val.DOMNode.addEventListener(val.eventType, val.eventFunction, val.useCapture);\n        this._DOMEventsStorage.push(val);\n    }, this);\n};\n\n/**\r\n * Remove events\r\n * @param {Array.<Object>} eventArray - event array\r\n * @param {Object} eventArray.DOMNode -   DOM node\r\n * @param {String} eventArray.eventType -   Event type\r\n * @param {Function} eventArray.eventFunction -   Function\r\n * @param {Boolean} [eventArray.useCapture=false] -   useCapture\r\n */\nDOMEvents.prototype.remove = function (eventArray) {\n    // TODO IMPLEMENT\n    // TODO не уверен что этот метод необходим. если надо часто убирать какието обработчики, то лучше поставить обработчки на родителя\n    console.warn(\"TODO IMPLEMENT\");\n};\n\n/**\r\n * Remove all dom events registered with this instance (added by method add)\r\n * @example\r\n * //look at add method as first part of this code\r\n * DOMEventsInstance.removeAll();\r\n */\nDOMEvents.prototype.removeAll = function () {\n    this._DOMEventsStorage.forEach(function (val) {\n        val.DOMNode.removeEventListener(val.eventType, val.eventFunction, val.useCapture);\n    });\n    this._DOMEventsStorage = [];\n};\n\nmodule.exports = DOMEvents;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n/**\r\n This is a collection of useful DOM tools.\r\n */\n\nmodule.exports = {\n\n    /**\r\n     * Found first parent node with matched selector(s)\r\n     * @param {Object} elem - dom node\r\n     * @param {String|Array} selectors - selector or array of selectors\r\n     * @returns {Object| Boolean} - node or false\r\n     */\n\n    closest: function (elem, selectors) {\n        selectors = typeof selectors === 'string' ? [selectors] : selectors;\n        var key;\n        var l = selectors.length;\n        var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n        while (elem && elem.parentNode) {\n            for (key = 0; key < l; key++) {\n                if (matchesSelector.call(elem, selectors[key])) {\n                    return elem;\n                }\n            }\n            elem = elem.parentNode;\n        }\n        return false;\n    },\n    /**\r\n     * Found first parent node with matched className(s).\r\n     * TODO Why this? Because old IE....\r\n     * TODO It's not good, because it's a copy of closest @see closest. Refactor\r\n     * @param {Object} elem - dom node\r\n     * @param {String|Array} className - className or array of classNames\r\n     * @returns {Object| Boolean} - node or false\r\n     */\n\n    closestByClassName: function (elem, className) {\n        className = typeof className === 'string' ? [className] : className;\n        var key;\n        var l = className.length;\n\n        while (elem && elem.parentNode) {\n            for (key = 0; key < l; key++) {\n                var reg = new RegExp(\"(\\\\s|^)\" + className[key] + \"(\\\\s|$)\");\n                if (elem.className.match(reg)) {\n                    return elem;\n                }\n            }\n            elem = elem.parentNode;\n        }\n        return false;\n    }\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * @module tools\r\n * @namespace\r\n */\n\nvar tools = {\n    resolveKeyPath: function (path, obj, safe) {\n        return path.split('.').reduce(function (prev, curr) {\n            return !safe ? prev[curr] : prev ? prev[curr] : void 0;\n        }, obj || self);\n    }\n};\n\nmodule.exports = tools;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core = {\n    Ajax: __webpack_require__(3),\n    BaseDOMConstructor: __webpack_require__(4),\n    DomMutations: __webpack_require__(5),\n    Events: __webpack_require__(0),\n    InstancesController: __webpack_require__(6)\n};\n\nvar helpers = {\n    DOMEvents: __webpack_require__(9),\n    domTools: __webpack_require__(10),\n    LikeFormData: __webpack_require__(1),\n    tools: __webpack_require__(11)\n};\n\nvar sf = {\n    core: core,\n    helpers: helpers,\n    tools: helpers.tools\n};\n\nmodule.exports = sf;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/**\r\n * Object.assign polyfill\r\n * https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n */\nif (typeof Object.assign != 'function') {\n    (function () {\n        Object.assign = function (target) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var output = Object(target);\n            for (var index = 1; index < arguments.length; index++) {\n                // eslint-disable-next-line\n                var source = arguments[index];\n                if (source !== undefined && source !== null) {\n                    for (var nextKey in source) {\n                        if (source.hasOwnProperty(nextKey)) {\n                            output[nextKey] = source[nextKey];\n                        }\n                    }\n                }\n            }\n            return output;\n        };\n    })();\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n/**\r\n * Avoid `console` errors in browsers that lack a console.\r\n */\n(function () {\n    var method;\n    var noop = function () {};\n    var methods = ['assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error', 'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd', 'timeStamp', 'trace', 'warn'];\n    var length = methods.length;\n    var console = window.console = window.console || {};\n\n    while (length--) {\n        method = methods[length];\n\n        // Only stub undefined methods.\n        if (!console[method]) {\n            console[method] = noop;\n        }\n    }\n})();\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   3.3.1\n */\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  return function () {\n    vertxNext(flush);\n  };\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = __webpack_require__(18);\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\npolyfill();\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16), __webpack_require__(17)))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// sf.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 83bed04e6b51e0584a66","\"use strict\";\r\n\r\n/**\r\n * Events system.\r\n * @param {Array} allowedEvents array of allowed events.\r\n * @constructs Events\r\n * @example\r\n * //allow to work with all events\r\n * var events = new Events();\r\n * events.on(\"myBestEvent\",function(e){console.log(e)});\r\n * @example\r\n * //Allow to serve only limited events\r\n *  var events = new Events([\"beforeSubmit\",\"onDataReady\"]);\r\n *  events.on(\"myBestEvent\",function(e){console.log(e)});//will not works\r\n *  events.on(\"beforeSubmit\",function(e){console.log(e)});//will work\r\n */\r\nvar Events = function (allowedEvents) {\r\n    this._storage = {};\r\n    this._allowedEvents = allowedEvents;\r\n};\r\n\r\n/**\r\n * Add event(s)\r\n * @param {String} events event or space separated event list\r\n * @param {Function} callback callback function\r\n * @example\r\n * var events = new Events();\r\n * events.on(\"myBestEvent myBestEvent2 myBestEvent3\",function(e){console.log(e)});\r\n * events.on(\"myBestEvent\",function(e){console.log(e)});\r\n */\r\nEvents.prototype.on = function (events, callback) {\r\n    var eventArr = events.replace(/\\s{2,}/g, \" \").split(\" \");\r\n    eventArr.forEach(function (event) {\r\n        if (this._allowedEvents && this._allowedEvents.indexOf(event) === -1) {// event not inside allowed events\r\n            console.warn(\"Events. Try to register event %s, but event is not allowed\", event);\r\n            return;\r\n        }\r\n        if (!this._storage.hasOwnProperty(events)) {\r\n            this._storage[event] = [];\r\n        }\r\n        this._storage[event].push(callback);\r\n    }, this);\r\n};\r\n\r\n/**\r\n * Add action\r\n * @param {String} action\r\n * @param {Function} func\r\n * @deprecated  use \"on\" instead\r\n */\r\nEvents.prototype.registerAction = Events.prototype.on;\r\n\r\n\r\n/**\r\n * remove event\r\n * @param {String} event\r\n * @param {Function} callback\r\n */\r\nEvents.prototype.off = function (event, callback) {\r\n    alert(\"You try to remove action. This part is incomplete\");\r\n    // TODO\r\n};\r\n\r\n/**\r\n * Trigger event.\r\n * @param {String} event event name\r\n * @param {Object} [options] options to pass to the callback\r\n * @example\r\n * var events = new Events();\r\n * events.on(\"myBestEvent\",function(e){console.log(e.bestKey)});\r\n * events.trigger(\"myBestEvent\",{bestKey:42}); //will show in log\r\n */\r\nEvents.prototype.trigger = function (event, options) {\r\n    if (this._allowedEvents && this._allowedEvents.indexOf(event) === -1) {// event not inside allowed events\r\n        console.warn(\"Events. Try to trigger event %s, but event is not allowed\", event);\r\n        return;\r\n    }\r\n    if (this._storage.hasOwnProperty(event)) {\r\n        for (var n = 0, l = this._storage[event].length; n < l; n++) {\r\n            this._storage[event][n](options);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Perform action\r\n * @param {String} action\r\n * @param {Object} [actionParams] object with all action data from server\r\n * @param {Object} [options] ajax options\r\n * @deprecated use \"trigger\" instead\r\n */\r\nEvents.prototype.performAction = Events.prototype.trigger;\r\n\r\nmodule.exports = Events;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Events.js","\"use strict\";\r\n\r\n/**\r\n * This object try to be easy as FormData.\r\n * Please note this is not(!) a shim for Form data, because it's impossible (you should set headers for Ajax by hands)\r\n * It take object and can convert it string like FormData do. Then you can send this string by Ajax or do some other staff.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FormData\r\n * @param {Object} [data] object with data (supports nested objects)\r\n * @param {String} [boundary] boundary  for Form Data\r\n * @constructor\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"},\"testBoundary\");\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--testBoundary\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--testBoundary--\r\n * //\"\r\n *\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--SpiralFormData-4935309085994959\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--SpiralFormData-4935309085994959--\r\n * //\"\r\n *\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.append(\"key2\",\"val2\");\r\n * formData.toString();\r\n * // Returns:\r\n * //--SpiralFormData-988681384595111\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * //testValue\r\n * //--SpiralFormData-988681384595111\r\n * //Content-Disposition: form-data; name=key2\r\n * //\r\n * //val2\r\n * //--SpiralFormData-988681384595111--\r\n * //\"\r\n */\r\nvar LikeFormData = function (data, boundary) {\r\n    this.data = {};\r\n    if (data) {\r\n        if (Object.prototype.toString.call(data) !== \"[object Object]\") { // non object/ Alert developer\r\n            console.warn(\"LikeFormData can't accept non Object. Please reefer to documentation. Problem parameter is:\", data);\r\n        } else {\r\n            this.data = data;\r\n        }\r\n    }\r\n    this.boundary = (boundary) ? boundary : (\"SpiralFormData-\" + Math.random().toString().substr(2));\r\n\r\n\r\n    // if (!isOldIE) {\r\n    //    this.boundary = \"SpiralAjax-\" + Math.random().toString().substr(2);\r\n    //    //xhr.setRequestHeader(\"content-type\", \"multipart/form-data; charset=utf-8; boundary=\" + this.boundary);\r\n    // } else {\r\n    //    this.boundary = \"SpiralAjax-oldIE9876gsloiHGldowu\";\r\n    // }\r\n};\r\n\r\n/**\r\n * Append data to storage. Like standart FormData do.\r\n * @param {String} key\r\n * @param {String} val\r\n * @example\r\n * var formData = new FormData();\r\n * formData.append(\"key2\",\"val2\");\r\n */\r\nLikeFormData.prototype.append = function (key, val) {\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/FormData\r\n    // TODO ***Appends a new value**** onto an existing key inside a FormData object, or adds the key if it does not already exist.\r\n    this.data[key] = val;\r\n};\r\n\r\n/**\r\n * convert to string\r\n * @example\r\n * var formData = new LikeFormData({testKey:\"testValue\"});\r\n * formData.toString();\r\n * // Returns:\r\n * //\"--SpiralFormData-4935309085994959\r\n * //Content-Disposition: form-data; name=testKey\r\n * //\r\n * // testValue\r\n * //--SpiralFormData-4935309085994959--\r\n * //\"\r\n * @return {string}\r\n */\r\nLikeFormData.prototype.toString = function () {\r\n    var retString = \"\";\r\n    var boundary = this.boundary;\r\n    var iterate = function (data, partOfKey) {\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key) && (typeof data[key] !== \"undefined\" )) {\r\n                if (typeof data[key] === \"object\") {\r\n                    iterate(data[key], ((partOfKey.length === 0) ? key : (partOfKey + \"[\" + key + \"]\")));\r\n                } else {\r\n                    retString += \"--\" + boundary\r\n                        + \"\\r\\nContent-Disposition: form-data; name=\" + ((partOfKey.length === 0) ? key : (partOfKey + \"[\" + key + \"]\"))\r\n                        + \"\\r\\n\\r\\n\" + data[key] + \"\\r\\n\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    if (typeof this.data !== \"object\") {\r\n        this.data = {\r\n            data: this.data\r\n        };\r\n    }\r\n    iterate(this.data, \"\");\r\n\r\n    retString += \"--\" + this.boundary + \"--\\r\\n\";\r\n    return retString;\r\n};\r\n\r\n/**\r\n * The delete() method of the FormData interface deletes a key/value pair from a FormData object.\r\n * @param {string} key\r\n * @return {*}\r\n */\r\nLikeFormData.prototype.delete = function (key) {\r\n    return delete(this.data[key]);\r\n};\r\n\r\n/**\r\n *The get() method of the FormData interface returns the first value associated with a given key from within a FormData object.\r\n * @param {string} key\r\n * @return {*}\r\n */\r\nLikeFormData.prototype.get = function (key) {\r\n    return this.data[key];\r\n};\r\n\r\n/**\r\n * The getAll() method of the FormData interface returns the first value associated with a given key from within a FormData object.\r\n * @return {*}\r\n */\r\nLikeFormData.prototype.getAll = function () {\r\n    return this.data;\r\n};\r\n\r\n/**\r\n * The has() method of the FormData interface returns a boolean stating whether a FormData object contains a certain key/value pair.\r\n * @param {string} key\r\n * @return {*}\r\n */\r\nLikeFormData.prototype.has = function (key) {\r\n    return this.data.hasOwnProperty(key);\r\n};\r\n\r\n/**\r\n * The difference between set() and FormData.append is that if the specified header does already exist, set() will\r\n * overwrite the existing value with the new one, whereas FormData.append will append the new value onto the end of the\r\n * set of values.\r\n * @param {string} key\r\n * @param {*} val\r\n */\r\nLikeFormData.prototype.set = function (key, val) {\r\n    this.data[key] = val;\r\n};\r\n\r\n/**\r\n * Get content header to set for Ajax. Not a part of standart FormData object. But for sending Like FormData over Ajax you should know header.\r\n * @return {string}\r\n * @example\r\n * var formData = new LikeFormData();\r\n * formData.getContentTypeHeader(); //return \"multipart/form-data; charset=utf-8; boundary=SpiralFormData-988681384595111\"\r\n * @example\r\n * var formData = new LikeFormData({key:\"val2\"},\"testBoundary\");\r\n * formData.getContentTypeHeader(); //return \"multipart/form-data; charset=utf-8; boundary=testBoundary\"\r\n */\r\nLikeFormData.prototype.getContentTypeHeader = function () {\r\n    return \"multipart/form-data; charset=utf-8; boundary=\" + this.boundary;\r\n};\r\n\r\nmodule.exports = LikeFormData;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/LikeFormData.js","\"use strict\";\r\n\r\n/**\r\n * Provides a spiral-specific sf bundle\r\n * TODO: This wrapping looks very fishy, why we need it? Move to toolkit may be?\r\n */\r\nvar sf = require(\"./sf\");\r\n\r\nvar sfWrapper = {\r\n    core: sf.core,\r\n    helpers: sf.helpers,\r\n    tools: sf.tools\r\n};\r\n\r\n// Add console shim for old IE\r\nrequire(\"./shim/console\");\r\nrequire(\"./shim/Object.assign\");\r\n\r\nif (typeof Promise != 'function') {\r\n    var Promise = require('es6-promise').Promise;\r\n}\r\n\r\nif (!sfWrapper.hasOwnProperty('options')) sfWrapper.options = {instances: {}};\r\nif (!sfWrapper.options.hasOwnProperty('instances')) sfWrapper.options.instances = {};\r\n\r\n// TODO delete this in future\r\nif (window && !window.hasOwnProperty(\"sf\")) {// bind only if  window.sf is empty to avoid conflicts with other libs\r\n    window.sf = sfWrapper;\r\n}\r\n\r\nsfWrapper.instancesController = new sfWrapper.core.InstancesController(sf);\r\nsfWrapper.domMutation = new sfWrapper.core.DomMutations(sfWrapper.instancesController);\r\n\r\n// Events system\r\nsfWrapper.events = new sfWrapper.core.Events();\r\nrequire(\"./core/events/baseEvents.js\")(sfWrapper.events);\r\n\r\n// AJAX\r\nsfWrapper.ajax = new sfWrapper.core.Ajax(window && window.csrfToken ? {\r\n    // TODO move to spiral bindings\r\n    headers: {\r\n        \"X-CSRF-Token\": window.csrfToken\r\n    }\r\n} : null);\r\n\r\nrequire(\"./core/ajax/baseActions.js\")(sfWrapper);\r\n\r\n// API\r\nsfWrapper.createModulePrototype = function () {\r\n    return Object.create(sfWrapper.core.BaseDOMConstructor.prototype);\r\n};\r\n\r\nsfWrapper.registerInstanceType = sfWrapper.instancesController.registerInstanceType.bind(sfWrapper.instancesController);\r\nsfWrapper.addInstance = sfWrapper.instancesController.addInstance.bind(sfWrapper.instancesController);\r\nsfWrapper.removeInstance = sfWrapper.instancesController.removeInstance.bind(sfWrapper.instancesController);\r\nsfWrapper.getInstance = sfWrapper.instancesController.getInstance.bind(sfWrapper.instancesController);\r\nsfWrapper.getInstances = sfWrapper.instancesController.getInstances.bind(sfWrapper.instancesController);\r\n\r\nsfWrapper.closest = sf.helpers.domTools.closest;\r\nsfWrapper.resolveKeyPath = sf.tools.resolveKeyPath;\r\n\r\nmodule.exports = sfWrapper;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/sf-wrapper.js","\"use strict\";\r\n\r\n// var tools = require(\"../helpers/tools\");\r\nvar Events = require(\"../core/Events\");\r\nvar LikeFormData = require(\"../helpers/LikeFormData\");\r\n\r\n/**\r\n * This is an Ajax transport.\r\n * Supports  XDomainRequest for old IE\r\n * @param {Object} [options]\r\n * @param {Object} [options.headers] Headers to add to the instance\r\n * @fires beforeSend event that will be performed before request is send. Event called with one parameter \"options\", that contains all variables for Ajax\r\n * @constructor\r\n */\r\nvar Ajax = function (options) {\r\n    this.currentRequests = 0;\r\n    this.events = new Events([\"beforeSend\", 'load']);\r\n\r\n    if (options && options.headers) {\r\n        this.headers = Object.assign(this.headers, options.headers);\r\n    }\r\n};\r\n\r\n/**\r\n * Default headers. You can overwrite it. Look at the event beforeSend\r\n * Please note that on XDomainRequest  we can't send any headers.\r\n * @type Object\r\n */\r\nAjax.prototype.headers = {\r\n    'X-Requested-With': 'XMLHttpRequest'\r\n};\r\n\r\n/**\r\n * Send ajax request to server\r\n * Will return promise or array with promise and XMLHttpRequest : {window.Promise|[window.Promise,XMLHttpRequest]}\r\n * @since 0.4.0\r\n * @param {Object} options object with options\r\n * @param {String} options.url url to send data\r\n * @param {Object|String} [options.data] data to send\r\n * @param {String} [options.method]\r\n * @param {Object} [options.headers] headers to add to the request\r\n * @param {Function} [options.onProgress] callback function on progress. Two callback options: current bytes sent,totalBytes\r\n * @param {Function} [options.isReturnXHRToo===false] should method return array instead of Promise. Some times is needed to control ajax (abort, etc).\r\n * If tree then  [window.Promise, XMLHttpRequest ] will be returned\r\n * @return {Promise|Array}\r\n */\r\nAjax.prototype.send = function (options) {\r\n    var that = this;\r\n\r\n    // TODO why we check here if data === null then reassign to null again?\r\n    if (options.data === null || options.data === void 0 || options.data === 'undefined') {\r\n        options.data = null;\r\n    }\r\n    if (!options.method) {\r\n        options.method = \"POST\";\r\n    }\r\n\r\n    options.headers = options.headers ? Object.assign(options.headers, this.headers, options.headers) : Object.assign({}, this.headers);\r\n    var xhr;\r\n    var ajaxPromise = new Promise(function (resolve, reject) {    // Return a new promise.\r\n        if (!options.url) {\r\n            console.error(\"You should provide url\");\r\n            reject(\"You should provide url\");\r\n        }\r\n        that.currentRequests++;\r\n\r\n        var oldIE = false;\r\n\r\n        if ((typeof window !== 'undefined')\r\n            && window.XDomainRequest && (window.XMLHttpRequest && new XMLHttpRequest().responseType === undefined)\r\n            && (url.indexOf(\"http\") === 0)) { // old IE CORS\r\n            // TODO maybe we should use XDomainRequest only for cross domain requests? But  Spiral for now works great with XDomainRequest (based on IEJSON)\r\n            xhr = new XDomainRequest();\r\n            // @see http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\r\n            oldIE = true;\r\n            // @see http://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\r\n\r\n            xhr.onprogress = function (e) {\r\n                // TODO adjust options\r\n                options.onProgress && options.onProgress(e);\r\n            };\r\n        } else {\r\n            xhr = new XMLHttpRequest();\r\n            if (options.onProgress) {\r\n                xhr.upload.addEventListener(\"progress\", function (event) {\r\n                    if (event.lengthComputable) {\r\n                        options.onProgress(event.loaded, event.total);\r\n                    }\r\n                }, false);\r\n            }\r\n        }\r\n\r\n        xhr.open(options.method, options.url);\r\n\r\n        xhr.onload = function () { // On loaded\r\n            that.currentRequests--;\r\n            var ans = that._parseJSON(xhr);\r\n\r\n            if (ans.status) {\r\n                if (ans.status > 199 && ans.status < 300) {// 200-299\r\n                    resolve(ans);\r\n                } else if (ans.status > 399 && ans.status < 600) {// 400-599\r\n                    reject(ans);\r\n                } else {\r\n                    console.error(\"unknown status %d. Rejecting\", ans.status);\r\n                    reject(ans);\r\n                }\r\n            } else if (oldIE) {\r\n                resolve(ans); // OLD IE + downloading file is producing  no status.\r\n            } else {\r\n                reject(ans); // reject with the status text\r\n            }\r\n            options.response = ans;\r\n            that.events.trigger(\"load\", options); // for example - used to handle actions\r\n        };\r\n\r\n        xhr.onerror = function () {// Handle network errors\r\n            that.currentRequests--;\r\n            reject(Error(\"Network Error\"), xhr);\r\n        };\r\n\r\n        that.events.trigger(\"beforeSend\", options); // you can modify \"options\" object inside event (like adding you headers,data,etc)\r\n\r\n        var dataToSend;\r\n        if (options.data !== null) { // if data to send is not empty\r\n            if (!oldIE) {\r\n                if (options.data.toString().indexOf(\"FormData\") !== -1) { // if form data\r\n                    dataToSend = options.data;\r\n                } else {\r\n                    dataToSend = new LikeFormData(options.data);\r\n                    options.headers[\"content-type\"] = dataToSend.getContentTypeHeader();\r\n                }\r\n                that._setHeaders(xhr, options.headers);\r\n            } else {\r\n                dataToSend = \"IEJSON\" + JSON.stringify(options.data);\r\n            }\r\n        } else { // else send empty data\r\n            dataToSend = null;\r\n        }\r\n\r\n//        if (!oldIE) {\r\n//            //xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n//            dataToSend = new spiral.LikeFormData(data, xhr, oldIE);\r\n//        } else {\r\n//            if (data !==null && data !== void 0 && data !== 'undefined'){\r\n//                dataToSend = \"IEJSON\"+JSON.stringify(data);\r\n//            } else {\r\n//                 dataToSend =data;\r\n//            }\r\n//\r\n//        }\r\n\r\n\r\n        try { // working around FF bug\r\n            xhr.send(dataToSend);// Make the request\r\n        } catch (e) {\r\n            // console.error(\"error sending trying another method\");\r\n            xhr.send(dataToSend.toString());\r\n        }\r\n\r\n        return xhr;\r\n    });\r\n\r\n    if (options.isReturnXHRToo) { // return xhr too\r\n        return [ajaxPromise, xhr];\r\n    }\r\n    return ajaxPromise;\r\n};\r\n\r\n/**\r\n * Iterate over headers object and call xhr.setRequestHeader\r\n * @param {XMLHttpRequest} xhr\r\n * @param {Object} headers object with headers to set\r\n */\r\nAjax.prototype._setHeaders = function (xhr, headers) {\r\n    for(var header in headers) {\r\n        if(headers.hasOwnProperty(header)) {\r\n            xhr.setRequestHeader(header, headers[header]);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Try to parse and normalize answer\r\n * @param {XHR} xhr\r\n * @return {*}\r\n * @private\r\n */\r\nAjax.prototype._parseJSON = function (xhr) {\r\n    if (!xhr.response) {\r\n        xhr.response = xhr.responseText;\r\n    }\r\n\r\n    var ret = {};\r\n    var contentType = false;\r\n\r\n    if (xhr.getResponseHeader) {\r\n        contentType = xhr.getResponseHeader(\"Content-Type\");\r\n    }\r\n\r\n    if (!contentType\r\n        || contentType.toLowerCase() === 'application/json'\r\n        || contentType.toLowerCase() === 'text/json'\r\n        || contentType.toLowerCase() === 'inode/symlink') { // application/json or inode/symlink  (AmazonS3 bug? )\r\n        try {\r\n            ret = JSON.parse(xhr.response);\r\n        } catch (e) {\r\n            console.error(\"Not a JSON!\", xhr.response);\r\n            ret = {data: xhr.response};\r\n        }\r\n    } else {\r\n        ret = {data: xhr.response};\r\n    }\r\n\r\n    if (!ret.status) {\r\n        ret.status = xhr.status;\r\n    }\r\n    // Some servers can answer status in JSON as \"HTTP/1.1 200 OK\"  but we need a status number\r\n    if (typeof ret.status === 'string' && ret.status.indexOf(\"HTTP/\") === 0 && ret.status.match(/ (\\d\\d\\d)/)) {\r\n        ret.status = parseInt(ret.status.match(/ (\\d\\d\\d)/)[1]);// TODO check this code\r\n    }\r\n\r\n    if (!ret.statusText) {\r\n        ret.statusText = xhr.statusText;\r\n    }\r\n    if (xhr.status && xhr.status != ret.status) {\r\n        console.warn(\"Status from request %d, but response contains status %d\", xhr.status, ret.status);\r\n    }\r\n\r\n    return ret;\r\n};\r\n\r\nmodule.exports = Ajax;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/Ajax.js","\"use strict\";\r\n\r\n/**\r\n * This a base constructor (class) for any DOM based instance.\r\n * This constructor just grab all node attributes and generates options. All processed options stored at this.options\r\n * @example\r\n * We have html like this:\r\n * <div data-test=\"testValue\" data-value=\"value123\">.....</div>\r\n * this.options will be:\r\n * {\r\n *  test:\"testValue\",\r\n *  value:\"value\"\r\n * }\r\n * Note: data-test and data-value should be described in attributesToGrab\r\n * @constructor\r\n */\r\nvar BaseDOMConstructor = function () {\r\n};\r\n/**\r\n * Init method. Call after construct instance\r\n * @param {Object} sf\r\n * @param {Object} node  DomNode of form\r\n * @param {Object} [options] all options to override default\r\n */\r\nBaseDOMConstructor.prototype.init = function (sf, node, options) {\r\n    // TODO data-spiral-JSON\r\n    this.sf = sf;\r\n    this.node = node;\r\n    // if (sf.options && sf.options.instances && sf.options.instances[this.name]) {\r\n    //    options = Object.assign(options || {}, sf.options.instances[this.name]);\r\n    // }\r\n    this.options = Object.assign(this.grabOptions(node), options);\r\n};\r\n\r\n/**\r\n * This is a options to generate.\r\n * You should provide processor or value.\r\n * @type {Object}\r\n * @property {Object} propertyKey - object of property\r\n * @property {String} propertyKey.value - default value to return\r\n * @property {String} [propertyKey.domAttr] - dom attribute to grab data\r\n * @property {Function} [propertyKey.processor] -  processor to process data before return\r\n * @property {Object}  ... - Another object of one property\r\n * @type {{}}\r\n *  @example\r\n * \"someAttribute\": {// key\r\n *      value: true, //default Value\r\n *      domAttr: \"data-some-attribute\", // attribute from node to grab\r\n *      processor: function (node,val,self) { //processor to process values before return\r\n *          //some calculations\r\n *      return someValue;\r\n *      }\r\n *  },\r\n *  \"anotherAttribute\":{...},\r\n *  \"...\"\r\n *\r\n *  @example\r\n *  //return node as value\r\n *  \"context\": {\r\n *      \"processor\": function (node,val,key) { //processor\r\n *          return node;\r\n *      }\r\n *  },\r\n *  \"Another-key\":{...},\r\n *  \"...\"\r\n * @example\r\n * //Grab attribute \"data-attribute\" as \"MyAttribute\" if attribute not provided return \"DefaultValue\"\r\n * // Dom node <div data-attribute=\"someValue\"></div>\r\n * \"MyAttribute\": {\r\n *      value: \"DefaultValue\",\r\n *      domAttr: \"data-attribute\"\r\n *  }\r\n *  //after processing we should have\r\n *  {\"MyAttribute\":\"someValue\"}\r\n *\r\n *  @example\r\n * //Grab attribute \"data-attribute\" as \"MyAttribute\" and return some value instead\r\n * //Dom node  <div data-attribute=\"someValue\"></div>\r\n * \"MyAttribute\": {\r\n *      domAttr: \"data-attribute\",\r\n *      processor: function (node,val,self) {\r\n *          return val+\"SomeCalculation\";\r\n *      }\r\n *  }\r\n *  //after processing we should have\r\n *  {\"MyAttribute\":\"someValueSomeCalculation\"}\r\n *\r\n * @example\r\n * //return function as value\r\n * processAnswer: {\r\n *      \"value\": function (options) {\r\n *         return \"someVal\";\r\n *      }\r\n *  //after processing we should have\r\n *  {\"processAnswer\":function (options) {\r\n *         return \"someVal\";\r\n *      }\r\n *   }\r\n *\r\n * @example\r\n * //return init time as value\r\n * initTime: {\r\n *      \"processor\": function (node,val,self) {\r\n *         return new Date().getTime;\r\n *      }\r\n *  //after processing we should have\r\n *  {\"initTime\":1429808977404}\r\n * @example\r\n * //return other value instead of real one\r\n * processAnswer: {\r\n *      \"processor\": function (node,val,self) {\r\n *         return \"someVal\";\r\n *      }\r\n *  //after processing we should have\r\n *  {\"processAnswer\":\"someVal\"}\r\n */\r\nBaseDOMConstructor.prototype.optionsToGrab = {};\r\n\r\n/**\r\n * Grab all options that described in optionsToGrab\r\n * @param {Object} node domNode\r\n * @return {Object}\r\n */\r\nBaseDOMConstructor.prototype.grabOptions = function (node) {\r\n    var options = {};\r\n    var currentOptionValue;\r\n    var currentOption;\r\n    for(var option in this.optionsToGrab) {\r\n        if(this.optionsToGrab.hasOwnProperty(option)) {\r\n            currentOptionValue = null;\r\n            if (this.optionsToGrab.hasOwnProperty(option)) {// if this is own option\r\n                currentOption = this.optionsToGrab[option];\r\n                if (currentOption.hasOwnProperty(\"value\")) {// we have default option. Let's grab it for first\r\n                    currentOptionValue = currentOption.value;\r\n                }\r\n\r\n                if (this.sf.options.instances[this.name] && this.sf.options.instances[this.name].hasOwnProperty(option)) {\r\n                    currentOptionValue = this.sf.options.instances[this.name][option];\r\n                }\r\n\r\n                if (currentOption.hasOwnProperty(\"domAttr\") && node.attributes.hasOwnProperty(currentOption.domAttr)) {// we can grab the attribute of node\r\n                    currentOptionValue = node.attributes[currentOption.domAttr].value;\r\n                }\r\n\r\n                if (currentOption.hasOwnProperty(\"processor\")) {// we have processor. Let's execute it\r\n                    currentOptionValue = currentOption.processor.call(this, node, currentOptionValue, currentOption);\r\n                }\r\n\r\n                if (currentOptionValue !== null) {\r\n                    options[option] = currentOptionValue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return options;\r\n};\r\n\r\nmodule.exports = BaseDOMConstructor;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/BaseDOMConstructor.js","\"use strict\";\r\n/**\r\n * Dom mutation. Listening to the DOM and add or remove instances based on classes.\r\n * @param {Object} instancesController  spiral instancesController.\r\n * @param {Function} instancesController.getClasses  get all registered modules classes.\r\n * @param {Function} instancesController.addInstance  add instance method.\r\n * @param {Function} instancesController.removeInstance  remove instance method\r\n * @constructor\r\n */\r\nvar DomMutations = function (instancesController) {\r\n    if (!instancesController) {\r\n        console.error(\"You should provide instancesController  for DOM Mutation. Because DOM Mutation  should known all classes and\");\r\n        return;\r\n    }\r\n    if (!this.constructor) {\r\n        console.error(\"Please call DomMutations with new  - 'new DomMutations()' \");\r\n        return;\r\n    }\r\n    this.instancesController = instancesController;\r\n    var config = {// config for MutationObserver\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true,\r\n            characterDataOldValue: true,\r\n            subtree: true,\r\n            attributeOldValue: true,\r\n            attributeFilter: [\"class\"]\r\n        };\r\n    var that = this;\r\n\r\n    this.observer = new MutationObserver(function () {// call function when dom mutated.\r\n        // eslint-disable-next-line\r\n        that.onDomMutate.apply(that, arguments);\r\n    });\r\n    this.observer.observe(document, config);// start observer\r\n};\r\n\r\n/**\r\n * When dom mutated this function id executed.\r\n * @param {Array} mutations array of mutations\r\n * @return {boolean}\r\n */\r\nDomMutations.prototype.onDomMutate = function (mutations) {\r\n    var classArray = this.instancesController.getClasses();// get all registered classes\r\n    var classSelector = \".\" + classArray.join(\",.\");// convert for querySelectorAll()\r\n    if (classSelector.length === 1) {// if not registered any instanceTypes\r\n        return false;\r\n    }\r\n    mutations.forEach(function (mutation) {// loop over mutation array\r\n        switch (mutation.type) {\r\n            case \"attributes\":\r\n                this.processMutationAttributes(mutation, classArray);\r\n                break;\r\n\r\n            case \"characterData\":\r\n\r\n                break;\r\n\r\n            case \"childList\":\r\n                this.processMutationChildList(mutation.addedNodes, \"addInstance\", classSelector, classArray);\r\n                this.processMutationChildList(mutation.removedNodes, \"removeInstance\", classSelector, classArray);\r\n                break;\r\n\r\n            case \"default\":\r\n                console.error(\"Something wrong. Contact tech support\");\r\n        }\r\n    }, this);\r\n    return true;\r\n};\r\n\r\n\r\nDomMutations.prototype.processMutationAttributes = function (mutation, classArray) {\r\n    var that = this;\r\n    var currentClasses = mutation.target.className.split(\" \");\r\n    var oldClasses = (mutation.oldValue) ? mutation.oldValue.split(\" \") : [];\r\n    var addedClasses = currentClasses.filter(function (val) {\r\n        return (oldClasses.indexOf(val) === -1);\r\n    });\r\n    var removedClasses = oldClasses.filter(function (val) {\r\n        return (currentClasses.indexOf(val) === -1);\r\n    });\r\n    var addedRegisteredClasses = addedClasses.filter(function (val) {\r\n        return (classArray.indexOf(val) !== -1);\r\n    });\r\n    var removedRegisteredClasses = removedClasses.filter(function (val) {\r\n        return (classArray.indexOf(val) !== -1);\r\n    });\r\n    removedRegisteredClasses.forEach(function (val) {\r\n        that.instancesController.removeInstance(that.instancesController.getInstanceNameByCssClass(val), mutation.target);\r\n    });\r\n    addedRegisteredClasses.forEach(function (val) {\r\n        that.instancesController.addInstance(that.instancesController.getInstanceNameByCssClass(val), mutation.target);\r\n    });\r\n};\r\n/**\r\n * Process mutation on ChildList\r\n * @param {NodeList} nodesList array with nodes\r\n * @param {String} action action to call (add or remove nodes)\r\n * @param {String} classSelector - string selector for querySelectorAll\r\n * @param {Array} classArray - array of all registered classes\r\n */\r\nDomMutations.prototype.processMutationChildList = function (nodesList, action, classSelector, classArray) {\r\n    var that = this;\r\n\r\n    /**\r\n     * Internal function for checking node class\r\n     * @param {Object} node dom node\r\n     */\r\n    function checkNode(node) {\r\n        classArray.forEach(function (className) {// loop over registered classes\r\n            if (node.classList.contains(className)) {// if class match try to add or remove instance for this node\r\n                that.instancesController[action](that.instancesController.getInstanceNameByCssClass(className), node);\r\n            }\r\n        });\r\n    }\r\n\r\n    [].forEach.call(nodesList, function (val) {// loop over mutation nodes\r\n        if (val.nodeType !== 1 || val.nodeName === \"SCRIPT\" || val.nodeName === \"LINK\") {// do not process other nodes then ELEMENT_NODE https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType also ignore SCRIPT and LINK tag\r\n            return false;\r\n        }\r\n        checkNode(val);// check mutation node\r\n        [].forEach.call(val.querySelectorAll(classSelector), checkNode);// query all nodes with required classes and check it\r\n        return true;\r\n    });\r\n};\r\n\r\n/**\r\n * Stop listening the dom changes\r\n */\r\nDomMutations.prototype.stopObserve = function () {\r\n    this.observer.disconnect();\r\n};\r\n\r\nmodule.exports = DomMutations;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/DomMutations.js","\"use strict\";\r\n\r\n/**\r\n * Instance controller\r\n * @param {*} spiral\r\n * @constructor\r\n */\r\nvar InstancesController = function (spiral) {\r\n    this.spiral = spiral;\r\n    if (!this.constructor) {\r\n        console.error(\"Please call InstancesController with new  - 'new InstancesController()' \");\r\n        return;\r\n    }\r\n    this._storage = {\r\n        instancesConstructors: {\r\n            cssClasses: {},\r\n            jsConstructors: {}\r\n        },\r\n        addons: {},\r\n        instances: {}\r\n    };\r\n\r\n    // todo decide if we need this\r\n    // [\"onAddInstance\", \"onRemoveInstance\"]\r\n    // this.events = new spiral.modules.core.Events();\r\n};\r\n\r\n/**\r\n * Register new instance type\r\n * @param {Function} constructorFunction - constructor function of instance\r\n * @param {String} [cssClassName] - css class name of instance. If class not provided that it can't be automatically\r\n * controlled by DomMutation. But you still can use it from JS.\r\n * @param {Boolean} [isSkipInitialization=false]  - skip component initialization, just adding, no init nodes.\r\n */\r\nInstancesController.prototype.registerInstanceType = function (constructorFunction, cssClassName, isSkipInitialization) {\r\n    var instanceName = constructorFunction.prototype.name;\r\n\r\n    if (!instanceName) {\r\n        console.error(\"Instance constructor should have name inside it\");\r\n    }\r\n\r\n    if (this._storage.instancesConstructors.jsConstructors.hasOwnProperty(instanceName)) {\r\n        console.error(\"Instance Constructor for type '%s' already added. Skipping\", instanceName);\r\n        return;\r\n    }\r\n\r\n    if (cssClassName) {// add link (cssClassName->instanceName)\r\n        this._storage.instancesConstructors.cssClasses[cssClassName] = instanceName;\r\n    }\r\n\r\n    this._storage.instancesConstructors.jsConstructors[instanceName] = constructorFunction;\r\n\r\n    // if (this._storage.instancesConstructors.hasOwnProperty(className)){\r\n    //    console.error(\"Instance Constructor for type %s already added. Skipping\",constructorFunction.prototype.name);\r\n    //    return;\r\n    // }\r\n    // this._storage.instancesConstructors[className] = {//init storage fields\r\n    //    \"typeName\": constructorFunction.prototype.name,\r\n    //    \"constructor\": constructorFunction\r\n    // };\r\n    this._storage.instances[instanceName] = [];\r\n    if (!isSkipInitialization) {\r\n        var nodes = document.getElementsByClassName(cssClassName);// init add nodes with this class\r\n        for (var i = 0, max = nodes.length; i < max; i++) {\r\n            this.addInstance(instanceName, nodes[i]);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Old method to register instance type\r\n * @param {*} className\r\n * @param {*} constructorFunction\r\n * @param {*} isSkipInitialization\r\n * @return {*}\r\n * @deprecated\r\n */\r\nInstancesController.prototype.addInstanceType = function (className, constructorFunction, isSkipInitialization) {\r\n    console.warn(\"addInstanceType is deprecated. Please use registerInstanceType instead\");\r\n    return this.registerInstanceType(constructorFunction, isSkipInitialization);\r\n};\r\n\r\n\r\n/**\r\n * Add instance\r\n * @param {String} instanceName - name of instance\r\n * @param {Object} node - dom node\r\n * @param {Object} [options] all options for send to the constructor\r\n * @return {boolean}\r\n */\r\nInstancesController.prototype.addInstance = function (instanceName, node, options) {\r\n    var InstanceConstructor = this._storage.instancesConstructors.jsConstructors[instanceName];\r\n    var isAlreadyAdded = this.getInstance(instanceName, node);\r\n\r\n    if (!instanceConstructor || isAlreadyAdded) {// if not found this type  or already added - return\r\n        return false;\r\n    }\r\n\r\n    var instance = new InstanceConstructor(this.spiral, node, options);\r\n    this._storage.instances[instanceName].push({// add new instance of this type\r\n        \"node\": node,\r\n        \"instance\": instance\r\n    });\r\n\r\n    // this.events.trigger(\"onAddInstance\", instance);\r\n\r\n    return instance;\r\n};\r\n\r\n/**\r\n * Remove instance.\r\n * @param {String} instanceName - name of instance class\r\n * @param {Object|String} node - dom node ID\r\n * @return {boolean}\r\n */\r\nInstancesController.prototype.removeInstance = function (instanceName, node) {\r\n    var instanceObj = this.getInstance(instanceName, node, true);\r\n    var key;\r\n\r\n    if (!instanceObj) {\r\n        return false;\r\n    }\r\n    instanceObj.instance.die();// avoid memory leak\r\n    key = this._storage.instances[instanceName].indexOf(instanceObj);\r\n    if (key !== -1) {// remove key\r\n        this._storage.instances[instanceName].splice(key, 1);\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Get instance. Return instance object of this dom node\r\n * @param {String} instanceName - name of instance\r\n * @param {Object|String} node - dom node o dome node ID\r\n * @param {boolean} [isReturnObject] - return object or instance\r\n * @return {boolean}\r\n */\r\nInstancesController.prototype.getInstance = function (instanceName, node, isReturnObject) {\r\n    // TODO isReturnObject not needed. Refactor and remove\r\n\r\n    var typeArr = this._storage.instances[instanceName];\r\n    var ret = false;\r\n    if (!typeArr) {\r\n        return false;\r\n    }\r\n    node = (node instanceof HTMLElement) ? node : document.getElementById(node);\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    for (var key = 0, l = typeArr.length; key < l; key++) {// iterate storage and try to find instance\r\n        if (typeArr[key].node === node) {\r\n            ret = (isReturnObject) ? typeArr[key] : typeArr[key].instance;\r\n            break;\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\n/**\r\n * Get instances. Return array of instances objects\r\n * @param {String} instanceName - name of instance\r\n * @return {array|boolean}\r\n */\r\nInstancesController.prototype.getInstances = function (instanceName) {\r\n    return this._storage.instances[instanceName] || false;\r\n};\r\n\r\n\r\n/**\r\n * Register addon for instance\r\n * @param {Function|Object} addon\r\n * @param {String} instanceName name of instance to register addon\r\n * @param {String} addonType type of addon (message,fill,etc)\r\n * @param {String} addonName name of addon (spiral, bootstrap,etc)\r\n */\r\nInstancesController.prototype.registerAddon = function (addon, instanceName, addonType, addonName) {\r\n    if (!this._storage.addons.hasOwnProperty(instanceName)) {\r\n        this._storage.addons[instanceName] = {};\r\n    }\r\n    if (!this._storage.addons[instanceName].hasOwnProperty(addonType)) {\r\n        this._storage.addons[instanceName][addonType] = {};\r\n    }\r\n    if (this._storage.addons[instanceName][addonType].hasOwnProperty(addonName)) {\r\n        console.error(\"The %s addon type %s already registered for instance %s! Skipping registration.\", addonName, addonType, instanceName);\r\n        return;\r\n    }\r\n    this._storage.addons[instanceName][addonType][addonName] = addon;\r\n};\r\n\r\n/**\r\n * Get registered addon\r\n * @param {String} instanceName name of instance to register addon\r\n * @param {String} addonType type of addon (message,fill,etc)\r\n * @param {String} addonName name of addon (spiral, bootstrap,etc)\r\n * @return {*}\r\n */\r\nInstancesController.prototype.getInstanceAddon = function (instanceName, addonType, addonName) {\r\n    if(!this._storage.addons.hasOwnProperty(instanceName)\r\n        || !this._storage.addons[instanceName].hasOwnProperty(addonType)\r\n        || !this._storage.addons[instanceName][addonType].hasOwnProperty(addonName)) {\r\n        return false;\r\n    }\r\n    return this._storage.addons[instanceName][addonType][addonName];\r\n};\r\n\r\n\r\n/**\r\n * Get all registered classes\r\n * @return {Array}\r\n */\r\nInstancesController.prototype.getClasses = function () {\r\n    return Object.keys(this._storage.instancesConstructors.cssClasses);\r\n};\r\n\r\n/**\r\n * For given cssClass return name of instance\r\n * @param {String} cssClass\r\n * @return {*}\r\n */\r\nInstancesController.prototype.getInstanceNameByCssClass = function (cssClass) {\r\n    return this._storage.instancesConstructors.cssClasses[cssClass];\r\n};\r\n\r\n/**\r\n * Get constructor by name or class name\r\n * @param {*} name\r\n */\r\nInstancesController.prototype.getInstanceConstructors = function (name) {\r\n    // TODO\r\n};\r\n\r\nmodule.exports = InstancesController;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/InstancesController.js","\"use strict\";\r\n\r\n/**\r\n * This plugin adds ability to perform actions from the server.\r\n * @param {Object} sf\r\n * \"action\":\"reload\"\r\n * \"action\":{\"redirect\":\"/account\"}\r\n * \"action\":{\"redirect\":\"/account\",\"delay\":3000}\r\n * \"action\":{\"name\":\"redirect\",\"url\":\"/account\",\"delay\":3000}\r\n */\r\nmodule.exports = function (sf) {\r\n    sf.ajax.events.on('load', function (options) {\r\n        var response = options.response;\r\n        if (response.hasOwnProperty('action')) {\r\n            if (typeof response.action === 'string') { // \"action\":\"reload\"\r\n                sf.events.trigger(response.action);\r\n            } else if (typeof response.action === 'object') {\r\n                var keys = Object.keys(response.action);\r\n                if (keys.indexOf('flash') !== -1) {\r\n                    var flash = response.action['flash'];\r\n                    var timestamp = Date.now();\r\n                    var sfFlashMessage = {};\r\n\r\n                    if (typeof response.action['flash'] === 'object') {\r\n                        sfFlashMessage = flash;\r\n                        sfFlashMessage.timestamp = timestamp;\r\n                    } else {\r\n                        sfFlashMessage = {\r\n                            message: flash,\r\n                            timestamp: timestamp\r\n                        };\r\n                    }\r\n\r\n                    sessionStorage.setItem('sfFlashMessage', JSON.stringify(sfFlashMessage));\r\n                }\r\n\r\n                if (keys.indexOf('redirect') !== -1) {\r\n                    setTimeout(function () {\r\n                        sf.events.trigger('redirect', response.action['redirect'], options);\r\n                    }, +response.action.delay | 0);\r\n                } else if (keys.indexOf('name') !== -1) {\r\n                    setTimeout(function () {\r\n                        sf.events.trigger(response.action.name, response.action.url);\r\n                    }, +response.action.delay || 0);\r\n                }\r\n\r\n                // if (keys.length === 1) {//\"action\":{\"redirect\":\"/account\"}\r\n                //    sf.events.trigger(keys[0], response.action[keys[0]], options);\r\n                // } else if (keys.length === 2 && response.action.delay) {//\"action\":{\"redirect\":\"/account\",\"delay\":3000}\r\n                //    setTimeout(function () {\r\n                //        var action = keys.filter(function (value) {\r\n                //            return value !== 'delay';\r\n                //        })[0];\r\n                //        sf.events.trigger(action, response.action[action], options);\r\n                //    }, +response.action.delay);\r\n                // } else if (keys.length > 1) {//\"action\":{\"name\":\"redirect\",\"url\":\"/account\",\"delay\":3000}\r\n                //    setTimeout(function () {\r\n                //        sf.events.trigger(response.action.name, response.action, options);\r\n                //    }, +response.action.delay || 0);\r\n                // } else {\r\n                //    console.error(\"Action from server. Object doesn't have keys. \", response.action);\r\n                // }\r\n            } else {\r\n                console.error(\"Action from server. Something wrong. \", response.action);\r\n            }\r\n        }\r\n    });\r\n\r\n    (function (sfFlashMessage) {\r\n        if (!sfFlashMessage) return;\r\n\r\n        var message = JSON.parse(sfFlashMessage);\r\n        var timestamp = Date.now();\r\n        var node;\r\n        var nodeWrapper;\r\n        var flashClass;\r\n\r\n        if (timestamp - message.timestamp > 10000) return;\r\n\r\n        if (message.type === 'debug' || message.type === 'success') {\r\n            flashClass = 'debug';\r\n        } else if (message.type === 'info' || !message.type || message.type === 'notice') {\r\n            flashClass = 'info';\r\n        } else {\r\n            flashClass = 'danger';\r\n        }\r\n\r\n        node = document.createElement('div');\r\n        nodeWrapper = document.createElement('div');\r\n        nodeWrapper.classList.add('flash-wrapper');\r\n        node.classList.add('flash', flashClass);\r\n        node.innerHTML = message.message;\r\n        document.body.appendChild(nodeWrapper);\r\n        nodeWrapper.appendChild(node);\r\n\r\n        setTimeout(function () {\r\n            nodeWrapper.classList.add('show');\r\n        }, 1);\r\n\r\n        setTimeout(function () {\r\n            nodeWrapper.classList.remove('show');\r\n        }, message.timeout || 5000);\r\n\r\n        sessionStorage.removeItem('sfFlashMessage');\r\n    }(sessionStorage.getItem('sfFlashMessage')));\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/ajax/baseActions.js","module.exports = function (events) {\r\n    events.on(\"redirect\", function (event) {\r\n        var url = Object.prototype.toString.call(event) === \"[object String]\" ? event : event.url;\r\n        // http://stackoverflow.com/questions/10687099/how-to-test-if-a-url-string-is-absolute-or-relative\r\n        self.location[/^(?:[a-z]+:)?\\/\\//i.test(url) ? 'href' : 'pathname'] = url;\r\n    });\r\n\r\n    events.on('reload', function () {\r\n        location.reload();\r\n    });\r\n\r\n    events.on('refresh', function () {\r\n        events.trigger('reload');\r\n    });\r\n\r\n    events.on('close', function () {\r\n        self.close();\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/events/baseEvents.js","\"use strict\";\r\n/**\r\n * Helper to manipulate DOM Events. It's a simple wrapper around \"addEventListener\" but it's store all functions and allow us to remove it all.\r\n * It's very helpful for die() method of instances\r\n * @TODO add to many nodes\r\n * @TODO new method like addEventListener  DOMEvents.on(node(s),event,callback,useCapture);\r\n * @constructor\r\n */\r\nvar DOMEvents = function () {\r\n    /**\r\n     * Internal storage for events\r\n     * @property {Array.<Object>} DOMEvents - dom events array\r\n     * @property {Object} DOMEvents.DOMNode -   DOM node\r\n     * @property {String} DOMEvents.eventType -   Event type\r\n     * @property {Function} DOMEvents.eventFunction -   Function\r\n     * @property {Boolean} DOMEvents.useCapture=false -   useCapture\r\n     * @property {Object} ... -   another object\r\n     * @private\r\n     */\r\n    this._DOMEventsStorage = [];\r\n};\r\n/**\r\n * Add event(s) to node(s).\r\n * @TODO add to many nodes\r\n * @param {Array.<Object>|Object} eventArray - event array or event itself\r\n * @param {Object} eventArray.DOMNode -   DOM node\r\n * @param {String} eventArray.eventType -   Event type\r\n * @param {Function} eventArray.eventFunction -   Function\r\n * @param {Boolean} [eventArray.useCapture=false] -   useCapture\r\n * @example\r\n * var DOMEventsInstance = new DOMEvents();\r\n * var eventOne = {\r\n *      DOMNode: document.getElementById(\"example\"),\r\n *      eventType: \"click\",\r\n *      eventFunction: function (e) {\r\n *          console.log(\"Hi there. Native  DOM events is:\",e);\r\n *      }\r\n * }\r\n *  var eventTwo = {\r\n *      DOMNode: document.getElementById(\"example2\"),\r\n *      eventType: \"mousedown\",\r\n *      eventFunction: function (e) {\r\n *          console.log(\"Hi there. mousedown event. Native  DOM events is:\",e);\r\n *      }\r\n * }\r\n *  DOMEventsInstance.add([eventOne,eventTwo]);\r\n */\r\nDOMEvents.prototype.add = function (eventArray) {\r\n    if (Object.prototype.toString.call([]) !== \"[object Array]\") {\r\n        eventArray = [eventArray];\r\n    }\r\n    eventArray.forEach(function (val) {\r\n        val.useCapture = !!(val.useCapture);\r\n        val.DOMNode.addEventListener(val.eventType, val.eventFunction, val.useCapture);\r\n        this._DOMEventsStorage.push(val);\r\n    }, this);\r\n};\r\n\r\n/**\r\n * Remove events\r\n * @param {Array.<Object>} eventArray - event array\r\n * @param {Object} eventArray.DOMNode -   DOM node\r\n * @param {String} eventArray.eventType -   Event type\r\n * @param {Function} eventArray.eventFunction -   Function\r\n * @param {Boolean} [eventArray.useCapture=false] -   useCapture\r\n */\r\nDOMEvents.prototype.remove = function (eventArray) {\r\n    // TODO IMPLEMENT\r\n    // TODO не уверен что этот метод необходим. если надо часто убирать какието обработчики, то лучше поставить обработчки на родителя\r\n    console.warn(\"TODO IMPLEMENT\");\r\n};\r\n\r\n/**\r\n * Remove all dom events registered with this instance (added by method add)\r\n * @example\r\n * //look at add method as first part of this code\r\n * DOMEventsInstance.removeAll();\r\n */\r\nDOMEvents.prototype.removeAll = function () {\r\n    this._DOMEventsStorage.forEach(function (val) {\r\n        val.DOMNode.removeEventListener(val.eventType, val.eventFunction, val.useCapture);\r\n    });\r\n    this._DOMEventsStorage = [];\r\n};\r\n\r\nmodule.exports = DOMEvents;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/DOMEvents.js","/**\r\n This is a collection of useful DOM tools.\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    /**\r\n     * Found first parent node with matched selector(s)\r\n     * @param {Object} elem - dom node\r\n     * @param {String|Array} selectors - selector or array of selectors\r\n     * @returns {Object| Boolean} - node or false\r\n     */\r\n\r\n    closest: function (elem, selectors) {\r\n        selectors = (typeof selectors === 'string') ? [selectors] : selectors;\r\n        var key;\r\n        var l = selectors.length;\r\n        var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\r\n\r\n        while (elem && elem.parentNode) {\r\n            for (key = 0; key < l; key++) {\r\n                if (matchesSelector.call(elem, selectors[key])) {\r\n                    return elem;\r\n                }\r\n            }\r\n            elem = elem.parentNode;\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Found first parent node with matched className(s).\r\n     * TODO Why this? Because old IE....\r\n     * TODO It's not good, because it's a copy of closest @see closest. Refactor\r\n     * @param {Object} elem - dom node\r\n     * @param {String|Array} className - className or array of classNames\r\n     * @returns {Object| Boolean} - node or false\r\n     */\r\n\r\n    closestByClassName: function (elem, className) {\r\n        className = (typeof className === 'string') ? [className] : className;\r\n        var key;\r\n        var l = className.length;\r\n\r\n        while (elem && elem.parentNode) {\r\n            for (key = 0; key < l; key++) {\r\n                var reg = new RegExp(\"(\\\\s|^)\" + className[key] + \"(\\\\s|$)\");\r\n                if (elem.className.match(reg)) {\r\n                    return elem;\r\n                }\r\n            }\r\n            elem = elem.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/domTools.js","\"use strict\";\r\n\r\n/**\r\n * @module tools\r\n * @namespace\r\n */\r\nvar tools = {\r\n    resolveKeyPath: function (path, obj, safe) {\r\n        return path.split('.').reduce(function (prev, curr) {\r\n            return !safe ? prev[curr] : (prev ? prev[curr] : void 0);\r\n        }, obj || self);\r\n    }\r\n};\r\n\r\nmodule.exports = tools;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/tools.js","var core = {\r\n    Ajax: require(\"./core/Ajax\"),\r\n    BaseDOMConstructor: require(\"./core/BaseDOMConstructor\"),\r\n    DomMutations: require(\"./core/DomMutations\"),\r\n    Events: require(\"./core/Events\"),\r\n    InstancesController: require(\"./core/InstancesController\")\r\n};\r\n\r\nvar helpers = {\r\n    DOMEvents: require(\"./helpers/DOMEvents\"),\r\n    domTools: require(\"./helpers/domTools\"),\r\n    LikeFormData: require(\"./helpers/LikeFormData\"),\r\n    tools: require(\"./helpers/tools\")\r\n};\r\n\r\nvar sf = {\r\n    core: core,\r\n    helpers: helpers,\r\n    tools: helpers.tools\r\n};\r\n\r\nmodule.exports = sf;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/sf.js","/**\r\n * Object.assign polyfill\r\n * https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n */\r\nif (typeof Object.assign != 'function') {\r\n    (function () {\r\n        Object.assign = function (target) {\r\n            'use strict';\r\n            if (target === undefined || target === null) {\r\n                throw new TypeError('Cannot convert undefined or null to object');\r\n            }\r\n\r\n            var output = Object(target);\r\n            for (var index = 1; index < arguments.length; index++) {\r\n                // eslint-disable-next-line\r\n                var source = arguments[index];\r\n                if (source !== undefined && source !== null) {\r\n                    for (var nextKey in source) {\r\n                        if (source.hasOwnProperty(nextKey)) {\r\n                            output[nextKey] = source[nextKey];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n    })();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shim/Object.assign.js","/**\r\n * Avoid `console` errors in browsers that lack a console.\r\n */\r\n(function () {\r\n    var method;\r\n    var noop = function () {\r\n        };\r\n    var methods = [\r\n            'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\r\n            'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\r\n            'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\r\n            'timeStamp', 'trace', 'warn'\r\n        ];\r\n    var length = methods.length;\r\n    var console = (window.console = window.console || {});\r\n\r\n    while (length--) {\r\n        method = methods[length];\r\n\r\n        // Only stub undefined methods.\r\n        if (!console[method]) {\r\n            console[method] = noop;\r\n        }\r\n    }\r\n}());\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shim/console.js","'use strict';\n\nexport { objectOrFunction };\nexport { isFunction };\nexport { isMaybeThenable };\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nfunction isMaybeThenable(x) {\n  return typeof x === 'object' && x !== null;\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\nexport { isArray };\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/utils.js","'use strict';\n\nexport { setScheduler };\nexport { setAsap };\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nexport { asap };\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  return function () {\n    vertxNext(flush);\n  };\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/asap.js","'use strict';\n\nexport default then;\nimport { invokeCallback, subscribe, FULFILLED, REJECTED, noop, makePromise, PROMISE_ID } from './-internal';\n\nimport { asap } from './asap';\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/then.js","'use strict';\n\nexport default resolve;\nimport { noop, resolve as _resolve } from '../-internal';\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/resolve.js","'use strict';\n\nimport { objectOrFunction, isFunction } from './utils';\n\nimport { asap } from './asap';\n\nimport originalThen from './then';\nimport originalResolve from './promise/resolve';\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nexport { PROMISE_ID };\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then) {\n  if (maybeThenable.constructor === promise.constructor && then === originalThen && maybeThenable.constructor.resolve === originalResolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then === GET_THEN_ERROR) {\n      reject(promise, GET_THEN_ERROR.error);\n    } else if (then === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then)) {\n      handleForeignThenable(promise, maybeThenable, then);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      resolve(promise, value);\n    } else if (failed) {\n      reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nexport { nextId, makePromise, getThen, noop, resolve, reject, fulfill, subscribe, publish, publishRejection, initializePromise, invokeCallback, FULFILLED, REJECTED, PENDING, handleMaybeThenable };\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/-internal.js","'use strict';\n\nimport { isArray, isMaybeThenable } from './utils';\n\nimport { noop, reject, fulfill, subscribe, FULFILLED, REJECTED, PENDING, getThen, handleMaybeThenable } from './-internal';\n\nimport then from './then';\nimport Promise from './promise';\nimport originalResolve from './promise/resolve';\nimport originalThen from './then';\nimport { makePromise, PROMISE_ID } from './-internal';\n\nexport default Enumerator;\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve = c.resolve;\n\n  if (resolve === originalResolve) {\n    var _then = getThen(entry);\n\n    if (_then === originalThen && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve) {\n        return resolve(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/enumerator.js","'use strict';\n\nexport default all;\nimport Enumerator from '../enumerator';\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/all.js","\"use strict\";\n\nexport default race;\nimport { isArray } from \"../utils\";\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/race.js","'use strict';\n\nexport default reject;\nimport { noop, reject as _reject } from '../-internal';\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise/reject.js","'use strict';\n\nexport default Promise;\n\nimport { isFunction } from './utils';\n\nimport { noop, nextId, PROMISE_ID, initializePromise } from './-internal';\n\nimport { asap, setAsap, setScheduler } from './asap';\n\nimport all from './promise/all';\nimport race from './promise/race';\nimport Resolve from './promise/resolve';\nimport Reject from './promise/reject';\nimport then from './then';\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = Resolve;\nPromise.reject = Reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/promise.js","/*global self*/\n'use strict';\n\nexport default polyfill;\nimport Promise from './promise';\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise/polyfill.js","'use strict';\n\nimport Promise from './es6-promise/promise';\nimport polyfill from './es6-promise/polyfill';\n\npolyfill();\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\nexport default Promise;\n\n\n// WEBPACK FOOTER //\n// lib/es6-promise.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 16\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}